/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/packs/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 11);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*************************************************************!*\
  !*** ./node_modules/vue-loader/lib/component-normalizer.js ***!
  \*************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplci5qcz81NTRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgX19WVUVfU1NSX0NPTlRFWFRfXyAqL1xuXG4vLyB0aGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGVcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVDb21wb25lbnQgKFxuICByYXdTY3JpcHRFeHBvcnRzLFxuICBjb21waWxlZFRlbXBsYXRlLFxuICBpbmplY3RTdHlsZXMsXG4gIHNjb3BlSWQsXG4gIG1vZHVsZUlkZW50aWZpZXIgLyogc2VydmVyIG9ubHkgKi9cbikge1xuICB2YXIgZXNNb2R1bGVcbiAgdmFyIHNjcmlwdEV4cG9ydHMgPSByYXdTY3JpcHRFeHBvcnRzID0gcmF3U2NyaXB0RXhwb3J0cyB8fCB7fVxuXG4gIC8vIEVTNiBtb2R1bGVzIGludGVyb3BcbiAgdmFyIHR5cGUgPSB0eXBlb2YgcmF3U2NyaXB0RXhwb3J0cy5kZWZhdWx0XG4gIGlmICh0eXBlID09PSAnb2JqZWN0JyB8fCB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZXNNb2R1bGUgPSByYXdTY3JpcHRFeHBvcnRzXG4gICAgc2NyaXB0RXhwb3J0cyA9IHJhd1NjcmlwdEV4cG9ydHMuZGVmYXVsdFxuICB9XG5cbiAgLy8gVnVlLmV4dGVuZCBjb25zdHJ1Y3RvciBleHBvcnQgaW50ZXJvcFxuICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzY3JpcHRFeHBvcnRzID09PSAnZnVuY3Rpb24nXG4gICAgPyBzY3JpcHRFeHBvcnRzLm9wdGlvbnNcbiAgICA6IHNjcmlwdEV4cG9ydHNcblxuICAvLyByZW5kZXIgZnVuY3Rpb25zXG4gIGlmIChjb21waWxlZFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSBjb21waWxlZFRlbXBsYXRlLnJlbmRlclxuICAgIG9wdGlvbnMuc3RhdGljUmVuZGVyRm5zID0gY29tcGlsZWRUZW1wbGF0ZS5zdGF0aWNSZW5kZXJGbnNcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9IHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gaW5qZWN0U3R5bGVzXG4gIH1cblxuICBpZiAoaG9vaykge1xuICAgIHZhciBmdW5jdGlvbmFsID0gb3B0aW9ucy5mdW5jdGlvbmFsXG4gICAgdmFyIGV4aXN0aW5nID0gZnVuY3Rpb25hbFxuICAgICAgPyBvcHRpb25zLnJlbmRlclxuICAgICAgOiBvcHRpb25zLmJlZm9yZUNyZWF0ZVxuICAgIGlmICghZnVuY3Rpb25hbCkge1xuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCByZWdpc3RyYXRpb24gYXMgYmVmb3JlQ3JlYXRlIGhvb2tcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICBvcHRpb25zLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcldpdGhTdHlsZUluamVjdGlvbiAoaCwgY29udGV4dCkge1xuICAgICAgICBob29rLmNhbGwoY29udGV4dClcbiAgICAgICAgcmV0dXJuIGV4aXN0aW5nKGgsIGNvbnRleHQpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBlc01vZHVsZTogZXNNb2R1bGUsXG4gICAgZXhwb3J0czogc2NyaXB0RXhwb3J0cyxcbiAgICBvcHRpb25zOiBvcHRpb25zXG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!****************************************!*\
  !*** ./app/javascript/packs/chart.vue ***!
  \****************************************/
/*! exports provided: default */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_chart_vue__ = __webpack_require__(/*! !babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./chart.vue */ 3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_66fc0b2f_hasScoped_false_node_modules_vue_loader_lib_selector_type_template_index_0_chart_vue__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/template-compiler/index?{\"id\":\"data-v-66fc0b2f\",\"hasScoped\":false}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./chart.vue */ 5);\nvar disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(/*! !../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!vue-style-loader!css-loader!../../../node_modules/vue-loader/lib/style-compiler/index?{\"vue\":true,\"id\":\"data-v-66fc0b2f\",\"scoped\":false,\"hasInlineConfig\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./chart.vue */ 2)\n}\nvar normalizeComponent = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/component-normalizer */ 0)\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_chart_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_66fc0b2f_hasScoped_false_node_modules_vue_loader_lib_selector_type_template_index_0_chart_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"app/javascript/packs/chart.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] chart.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-66fc0b2f\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-66fc0b2f\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2NoYXJ0LnZ1ZT82MzQwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkaXNwb3NlZCA9IGZhbHNlXG5mdW5jdGlvbiBpbmplY3RTdHlsZSAoc3NyQ29udGV4dCkge1xuICBpZiAoZGlzcG9zZWQpIHJldHVyblxuICByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luL2Rpc3QvbG9hZGVyLmpzP3tcXFwib21pdFxcXCI6MSxcXFwicmVtb3ZlXFxcIjp0cnVlfSF2dWUtc3R5bGUtbG9hZGVyIWNzcy1sb2FkZXIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4P3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi02NmZjMGIyZlxcXCIsXFxcInNjb3BlZFxcXCI6ZmFsc2UsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6ZmFsc2V9IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXN0eWxlcyZpbmRleD0wIS4vY2hhcnQudnVlXCIpXG59XG52YXIgbm9ybWFsaXplQ29tcG9uZW50ID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXJcIilcbi8qIHNjcmlwdCAqL1xuaW1wb3J0IF9fdnVlX3NjcmlwdF9fIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL2NoYXJ0LnZ1ZVwiXG4vKiB0ZW1wbGF0ZSAqL1xuaW1wb3J0IF9fdnVlX3RlbXBsYXRlX18gZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3RlbXBsYXRlLWNvbXBpbGVyL2luZGV4P3tcXFwiaWRcXFwiOlxcXCJkYXRhLXYtNjZmYzBiMmZcXFwiLFxcXCJoYXNTY29wZWRcXFwiOmZhbHNlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vY2hhcnQudnVlXCJcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gaW5qZWN0U3R5bGVcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBudWxsXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxudmFyIENvbXBvbmVudCA9IG5vcm1hbGl6ZUNvbXBvbmVudChcbiAgX192dWVfc2NyaXB0X18sXG4gIF9fdnVlX3RlbXBsYXRlX18sXG4gIF9fdnVlX3N0eWxlc19fLFxuICBfX3Z1ZV9zY29wZUlkX18sXG4gIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX19cbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiYXBwL2phdmFzY3JpcHQvcGFja3MvY2hhcnQudnVlXCJcbmlmIChDb21wb25lbnQuZXNNb2R1bGUgJiYgT2JqZWN0LmtleXMoQ29tcG9uZW50LmVzTW9kdWxlKS5zb21lKGZ1bmN0aW9uIChrZXkpIHtyZXR1cm4ga2V5ICE9PSBcImRlZmF1bHRcIiAmJiBrZXkuc3Vic3RyKDAsIDIpICE9PSBcIl9fXCJ9KSkge2NvbnNvbGUuZXJyb3IoXCJuYW1lZCBleHBvcnRzIGFyZSBub3Qgc3VwcG9ydGVkIGluICoudnVlIGZpbGVzLlwiKX1cbmlmIChDb21wb25lbnQub3B0aW9ucy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWUtbG9hZGVyXSBjaGFydC52dWU6IGZ1bmN0aW9uYWwgY29tcG9uZW50cyBhcmUgbm90IHN1cHBvcnRlZCB3aXRoIHRlbXBsYXRlcywgdGhleSBzaG91bGQgdXNlIHJlbmRlciBmdW5jdGlvbnMuXCIpfVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7XG4gIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIGZhbHNlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtNjZmYzBiMmZcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi02NmZjMGIyZlwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBkaXNwb3NlZCA9IHRydWVcbiAgfSlcbn0pKCl9XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2NoYXJ0LnZ1ZVxuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/extract-text-webpack-plugin/dist/loader.js?{"omit":1,"remove":true}!./node_modules/vue-style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{"vue":true,"id":"data-v-66fc0b2f","scoped":false,"hasInlineConfig":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./app/javascript/packs/chart.vue ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2NoYXJ0LnZ1ZT9kOWY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luL2Rpc3QvbG9hZGVyLmpzP3tcIm9taXRcIjoxLFwicmVtb3ZlXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlciEuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyP3tcInZ1ZVwiOnRydWUsXCJpZFwiOlwiZGF0YS12LTY2ZmMwYjJmXCIsXCJzY29wZWRcIjpmYWxzZSxcImhhc0lubGluZUNvbmZpZ1wiOmZhbHNlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vYXBwL2phdmFzY3JpcHQvcGFja3MvY2hhcnQudnVlXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./app/javascript/packs/chart.vue ***!
  \**************************************************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Chart_bundle_min__ = __webpack_require__(/*! Chart.bundle.min */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_Chart_bundle_min___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_Chart_bundle_min__);\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: ['labels', 'data', 'type', 'loaded'],\n  watch: {\n    loaded: function loaded(isLoaded) {\n      if (isLoaded) {\n        this.drawChart();\n      }\n    }\n  },\n  methods: {\n    drawChart: function drawChart() {\n      new __WEBPACK_IMPORTED_MODULE_0_Chart_bundle_min___default.a(this.$el, {\n        type: this.type,\n        data: {\n          labels: this.labels,\n          datasets: [{\n            label: '# Mailbox activity',\n            data: this.data,\n            backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)'],\n            borderColor: ['rgba(255,99,132,1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      });\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2NoYXJ0LnZ1ZT9mNjZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vXG4vL1xuLy9cbi8vXG5cbmltcG9ydCBDaGFydCBmcm9tICdDaGFydC5idW5kbGUubWluJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgcHJvcHM6IFsnbGFiZWxzJywgJ2RhdGEnLCAndHlwZScsICdsb2FkZWQnXSxcbiAgd2F0Y2g6IHtcbiAgICBsb2FkZWQ6IGZ1bmN0aW9uIGxvYWRlZChpc0xvYWRlZCkge1xuICAgICAgaWYgKGlzTG9hZGVkKSB7XG4gICAgICAgIHRoaXMuZHJhd0NoYXJ0KCk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgZHJhd0NoYXJ0OiBmdW5jdGlvbiBkcmF3Q2hhcnQoKSB7XG4gICAgICBuZXcgQ2hhcnQodGhpcy4kZWwsIHtcbiAgICAgICAgdHlwZTogdGhpcy50eXBlLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgbGFiZWxzOiB0aGlzLmxhYmVscyxcbiAgICAgICAgICBkYXRhc2V0czogW3tcbiAgICAgICAgICAgIGxhYmVsOiAnIyBNYWlsYm94IGFjdGl2aXR5JyxcbiAgICAgICAgICAgIGRhdGE6IHRoaXMuZGF0YSxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogWydyZ2JhKDI1NSwgOTksIDEzMiwgMC42KScsICdyZ2JhKDU0LCAxNjIsIDIzNSwgMC42KScsICdyZ2JhKDI1NSwgMjA2LCA4NiwgMC42KScsICdyZ2JhKDc1LCAxOTIsIDE5MiwgMC42KScsICdyZ2JhKDE1MywgMTAyLCAyNTUsIDAuNiknLCAncmdiYSgyNTUsIDE1OSwgNjQsIDAuNiknXSxcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBbJ3JnYmEoMjU1LDk5LDEzMiwxKScsICdyZ2JhKDU0LCAxNjIsIDIzNSwgMSknLCAncmdiYSgyNTUsIDIwNiwgODYsIDEpJywgJ3JnYmEoNzUsIDE5MiwgMTkyLCAxKScsICdyZ2JhKDE1MywgMTAyLCAyNTUsIDEpJywgJ3JnYmEoMjU1LCAxNTksIDY0LCAxKSddLFxuICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDFcbiAgICAgICAgICB9XVxuICAgICAgICB9LFxuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgc2NhbGVzOiB7XG4gICAgICAgICAgICB5QXhlczogW3tcbiAgICAgICAgICAgICAgdGlja3M6IHtcbiAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2NoYXJ0LnZ1ZVxuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!**********************************************!*\
  !*** ./vendor/assets/js/Chart.bundle.min.js ***!
  \**********************************************/
/*! no static exports found */
/*! exports used: default */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;var require;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 2.6.0\n *\n * Copyright 2017 Nick Downie\n * Released under the MIT license\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\n */\n!function (t) {\n  if (\"object\" == ( false ? \"undefined\" : _typeof(exports)) && \"undefined\" != typeof module) module.exports = t();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {\n    var e;e = \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : this, e.Chart = t();\n  }\n}(function () {\n  var t;return function t(e, n, i) {\n    function a(o, s) {\n      if (!n[o]) {\n        if (!e[o]) {\n          var l = \"function\" == typeof require && require;if (!s && l) return require(o, !0);if (r) return r(o, !0);var u = new Error(\"Cannot find module '\" + o + \"'\");throw u.code = \"MODULE_NOT_FOUND\", u;\n        }var d = n[o] = { exports: {} };e[o][0].call(d.exports, function (t) {\n          var n = e[o][1][t];return a(n ? n : t);\n        }, d, d.exports, t, e, n, i);\n      }return n[o].exports;\n    }for (var r = \"function\" == typeof require && require, o = 0; o < i.length; o++) {\n      a(i[o]);\n    }return a;\n  }({ 1: [function (t, e, n) {\n      function i(t) {\n        if (t) {\n          var e = /^#([a-fA-F0-9]{3})$/,\n              n = /^#([a-fA-F0-9]{6})$/,\n              i = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\n              a = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\n              r = /(\\w+)/,\n              o = [0, 0, 0],\n              s = 1,\n              l = t.match(e);if (l) {\n            l = l[1];for (var u = 0; u < o.length; u++) {\n              o[u] = parseInt(l[u] + l[u], 16);\n            }\n          } else if (l = t.match(n)) {\n            l = l[1];for (var u = 0; u < o.length; u++) {\n              o[u] = parseInt(l.slice(2 * u, 2 * u + 2), 16);\n            }\n          } else if (l = t.match(i)) {\n            for (var u = 0; u < o.length; u++) {\n              o[u] = parseInt(l[u + 1]);\n            }s = parseFloat(l[4]);\n          } else if (l = t.match(a)) {\n            for (var u = 0; u < o.length; u++) {\n              o[u] = Math.round(2.55 * parseFloat(l[u + 1]));\n            }s = parseFloat(l[4]);\n          } else if (l = t.match(r)) {\n            if (\"transparent\" == l[1]) return [0, 0, 0, 0];if (o = x[l[1]], !o) return;\n          }for (var u = 0; u < o.length; u++) {\n            o[u] = y(o[u], 0, 255);\n          }return s = s || 0 == s ? y(s, 0, 1) : 1, o[3] = s, o;\n        }\n      }function a(t) {\n        if (t) {\n          var e = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/,\n              n = t.match(e);if (n) {\n            var i = parseFloat(n[4]),\n                a = y(parseInt(n[1]), 0, 360),\n                r = y(parseFloat(n[2]), 0, 100),\n                o = y(parseFloat(n[3]), 0, 100),\n                s = y(isNaN(i) ? 1 : i, 0, 1);return [a, r, o, s];\n          }\n        }\n      }function r(t) {\n        if (t) {\n          var e = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/,\n              n = t.match(e);if (n) {\n            var i = parseFloat(n[4]),\n                a = y(parseInt(n[1]), 0, 360),\n                r = y(parseFloat(n[2]), 0, 100),\n                o = y(parseFloat(n[3]), 0, 100),\n                s = y(isNaN(i) ? 1 : i, 0, 1);return [a, r, o, s];\n          }\n        }\n      }function o(t) {\n        var e = i(t);return e && e.slice(0, 3);\n      }function s(t) {\n        var e = a(t);return e && e.slice(0, 3);\n      }function l(t) {\n        var e = i(t);return e ? e[3] : (e = a(t)) ? e[3] : (e = r(t)) ? e[3] : void 0;\n      }function u(t) {\n        return \"#\" + b(t[0]) + b(t[1]) + b(t[2]);\n      }function d(t, e) {\n        return e < 1 || t[3] && t[3] < 1 ? c(t, e) : \"rgb(\" + t[0] + \", \" + t[1] + \", \" + t[2] + \")\";\n      }function c(t, e) {\n        return void 0 === e && (e = void 0 !== t[3] ? t[3] : 1), \"rgba(\" + t[0] + \", \" + t[1] + \", \" + t[2] + \", \" + e + \")\";\n      }function h(t, e) {\n        if (e < 1 || t[3] && t[3] < 1) return f(t, e);var n = Math.round(t[0] / 255 * 100),\n            i = Math.round(t[1] / 255 * 100),\n            a = Math.round(t[2] / 255 * 100);return \"rgb(\" + n + \"%, \" + i + \"%, \" + a + \"%)\";\n      }function f(t, e) {\n        var n = Math.round(t[0] / 255 * 100),\n            i = Math.round(t[1] / 255 * 100),\n            a = Math.round(t[2] / 255 * 100);return \"rgba(\" + n + \"%, \" + i + \"%, \" + a + \"%, \" + (e || t[3] || 1) + \")\";\n      }function g(t, e) {\n        return e < 1 || t[3] && t[3] < 1 ? p(t, e) : \"hsl(\" + t[0] + \", \" + t[1] + \"%, \" + t[2] + \"%)\";\n      }function p(t, e) {\n        return void 0 === e && (e = void 0 !== t[3] ? t[3] : 1), \"hsla(\" + t[0] + \", \" + t[1] + \"%, \" + t[2] + \"%, \" + e + \")\";\n      }function m(t, e) {\n        return void 0 === e && (e = void 0 !== t[3] ? t[3] : 1), \"hwb(\" + t[0] + \", \" + t[1] + \"%, \" + t[2] + \"%\" + (void 0 !== e && 1 !== e ? \", \" + e : \"\") + \")\";\n      }function v(t) {\n        return _[t.slice(0, 3)];\n      }function y(t, e, n) {\n        return Math.min(Math.max(e, t), n);\n      }function b(t) {\n        var e = t.toString(16).toUpperCase();return e.length < 2 ? \"0\" + e : e;\n      }var x = t(5);e.exports = { getRgba: i, getHsla: a, getRgb: o, getHsl: s, getHwb: r, getAlpha: l, hexString: u, rgbString: d, rgbaString: c, percentString: h, percentaString: f, hslString: g, hslaString: p, hwbString: m, keyword: v };var _ = {};for (var k in x) {\n        _[x[k]] = k;\n      }\n    }, { 5: 5 }], 2: [function (t, e, n) {\n      var i = t(4),\n          a = t(1),\n          r = function r(t) {\n        if (t instanceof r) return t;if (!(this instanceof r)) return new r(t);this.valid = !1, this.values = { rgb: [0, 0, 0], hsl: [0, 0, 0], hsv: [0, 0, 0], hwb: [0, 0, 0], cmyk: [0, 0, 0, 0], alpha: 1 };var e;\"string\" == typeof t ? (e = a.getRgba(t), e ? this.setValues(\"rgb\", e) : (e = a.getHsla(t)) ? this.setValues(\"hsl\", e) : (e = a.getHwb(t)) && this.setValues(\"hwb\", e)) : \"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) && (e = t, void 0 !== e.r || void 0 !== e.red ? this.setValues(\"rgb\", e) : void 0 !== e.l || void 0 !== e.lightness ? this.setValues(\"hsl\", e) : void 0 !== e.v || void 0 !== e.value ? this.setValues(\"hsv\", e) : void 0 !== e.w || void 0 !== e.whiteness ? this.setValues(\"hwb\", e) : void 0 === e.c && void 0 === e.cyan || this.setValues(\"cmyk\", e));\n      };r.prototype = { isValid: function isValid() {\n          return this.valid;\n        }, rgb: function rgb() {\n          return this.setSpace(\"rgb\", arguments);\n        }, hsl: function hsl() {\n          return this.setSpace(\"hsl\", arguments);\n        }, hsv: function hsv() {\n          return this.setSpace(\"hsv\", arguments);\n        }, hwb: function hwb() {\n          return this.setSpace(\"hwb\", arguments);\n        }, cmyk: function cmyk() {\n          return this.setSpace(\"cmyk\", arguments);\n        }, rgbArray: function rgbArray() {\n          return this.values.rgb;\n        }, hslArray: function hslArray() {\n          return this.values.hsl;\n        }, hsvArray: function hsvArray() {\n          return this.values.hsv;\n        }, hwbArray: function hwbArray() {\n          var t = this.values;return 1 !== t.alpha ? t.hwb.concat([t.alpha]) : t.hwb;\n        }, cmykArray: function cmykArray() {\n          return this.values.cmyk;\n        }, rgbaArray: function rgbaArray() {\n          var t = this.values;return t.rgb.concat([t.alpha]);\n        }, hslaArray: function hslaArray() {\n          var t = this.values;return t.hsl.concat([t.alpha]);\n        }, alpha: function alpha(t) {\n          return void 0 === t ? this.values.alpha : (this.setValues(\"alpha\", t), this);\n        }, red: function red(t) {\n          return this.setChannel(\"rgb\", 0, t);\n        }, green: function green(t) {\n          return this.setChannel(\"rgb\", 1, t);\n        }, blue: function blue(t) {\n          return this.setChannel(\"rgb\", 2, t);\n        }, hue: function hue(t) {\n          return t && (t %= 360, t = t < 0 ? 360 + t : t), this.setChannel(\"hsl\", 0, t);\n        }, saturation: function saturation(t) {\n          return this.setChannel(\"hsl\", 1, t);\n        }, lightness: function lightness(t) {\n          return this.setChannel(\"hsl\", 2, t);\n        }, saturationv: function saturationv(t) {\n          return this.setChannel(\"hsv\", 1, t);\n        }, whiteness: function whiteness(t) {\n          return this.setChannel(\"hwb\", 1, t);\n        }, blackness: function blackness(t) {\n          return this.setChannel(\"hwb\", 2, t);\n        }, value: function value(t) {\n          return this.setChannel(\"hsv\", 2, t);\n        }, cyan: function cyan(t) {\n          return this.setChannel(\"cmyk\", 0, t);\n        }, magenta: function magenta(t) {\n          return this.setChannel(\"cmyk\", 1, t);\n        }, yellow: function yellow(t) {\n          return this.setChannel(\"cmyk\", 2, t);\n        }, black: function black(t) {\n          return this.setChannel(\"cmyk\", 3, t);\n        }, hexString: function hexString() {\n          return a.hexString(this.values.rgb);\n        }, rgbString: function rgbString() {\n          return a.rgbString(this.values.rgb, this.values.alpha);\n        }, rgbaString: function rgbaString() {\n          return a.rgbaString(this.values.rgb, this.values.alpha);\n        }, percentString: function percentString() {\n          return a.percentString(this.values.rgb, this.values.alpha);\n        }, hslString: function hslString() {\n          return a.hslString(this.values.hsl, this.values.alpha);\n        }, hslaString: function hslaString() {\n          return a.hslaString(this.values.hsl, this.values.alpha);\n        }, hwbString: function hwbString() {\n          return a.hwbString(this.values.hwb, this.values.alpha);\n        }, keyword: function keyword() {\n          return a.keyword(this.values.rgb, this.values.alpha);\n        }, rgbNumber: function rgbNumber() {\n          var t = this.values.rgb;return t[0] << 16 | t[1] << 8 | t[2];\n        }, luminosity: function luminosity() {\n          for (var t = this.values.rgb, e = [], n = 0; n < t.length; n++) {\n            var i = t[n] / 255;e[n] = i <= .03928 ? i / 12.92 : Math.pow((i + .055) / 1.055, 2.4);\n          }return .2126 * e[0] + .7152 * e[1] + .0722 * e[2];\n        }, contrast: function contrast(t) {\n          var e = this.luminosity(),\n              n = t.luminosity();return e > n ? (e + .05) / (n + .05) : (n + .05) / (e + .05);\n        }, level: function level(t) {\n          var e = this.contrast(t);return e >= 7.1 ? \"AAA\" : e >= 4.5 ? \"AA\" : \"\";\n        }, dark: function dark() {\n          var t = this.values.rgb,\n              e = (299 * t[0] + 587 * t[1] + 114 * t[2]) / 1e3;return e < 128;\n        }, light: function light() {\n          return !this.dark();\n        }, negate: function negate() {\n          for (var t = [], e = 0; e < 3; e++) {\n            t[e] = 255 - this.values.rgb[e];\n          }return this.setValues(\"rgb\", t), this;\n        }, lighten: function lighten(t) {\n          var e = this.values.hsl;return e[2] += e[2] * t, this.setValues(\"hsl\", e), this;\n        }, darken: function darken(t) {\n          var e = this.values.hsl;return e[2] -= e[2] * t, this.setValues(\"hsl\", e), this;\n        }, saturate: function saturate(t) {\n          var e = this.values.hsl;return e[1] += e[1] * t, this.setValues(\"hsl\", e), this;\n        }, desaturate: function desaturate(t) {\n          var e = this.values.hsl;return e[1] -= e[1] * t, this.setValues(\"hsl\", e), this;\n        }, whiten: function whiten(t) {\n          var e = this.values.hwb;return e[1] += e[1] * t, this.setValues(\"hwb\", e), this;\n        }, blacken: function blacken(t) {\n          var e = this.values.hwb;return e[2] += e[2] * t, this.setValues(\"hwb\", e), this;\n        }, greyscale: function greyscale() {\n          var t = this.values.rgb,\n              e = .3 * t[0] + .59 * t[1] + .11 * t[2];return this.setValues(\"rgb\", [e, e, e]), this;\n        }, clearer: function clearer(t) {\n          var e = this.values.alpha;return this.setValues(\"alpha\", e - e * t), this;\n        }, opaquer: function opaquer(t) {\n          var e = this.values.alpha;return this.setValues(\"alpha\", e + e * t), this;\n        }, rotate: function rotate(t) {\n          var e = this.values.hsl,\n              n = (e[0] + t) % 360;return e[0] = n < 0 ? 360 + n : n, this.setValues(\"hsl\", e), this;\n        }, mix: function mix(t, e) {\n          var n = this,\n              i = t,\n              a = void 0 === e ? .5 : e,\n              r = 2 * a - 1,\n              o = n.alpha() - i.alpha(),\n              s = ((r * o === -1 ? r : (r + o) / (1 + r * o)) + 1) / 2,\n              l = 1 - s;return this.rgb(s * n.red() + l * i.red(), s * n.green() + l * i.green(), s * n.blue() + l * i.blue()).alpha(n.alpha() * a + i.alpha() * (1 - a));\n        }, toJSON: function toJSON() {\n          return this.rgb();\n        }, clone: function clone() {\n          var t,\n              e,\n              n = new r(),\n              i = this.values,\n              a = n.values;for (var o in i) {\n            i.hasOwnProperty(o) && (t = i[o], e = {}.toString.call(t), \"[object Array]\" === e ? a[o] = t.slice(0) : \"[object Number]\" === e ? a[o] = t : console.error(\"unexpected color value:\", t));\n          }return n;\n        } }, r.prototype.spaces = { rgb: [\"red\", \"green\", \"blue\"], hsl: [\"hue\", \"saturation\", \"lightness\"], hsv: [\"hue\", \"saturation\", \"value\"], hwb: [\"hue\", \"whiteness\", \"blackness\"], cmyk: [\"cyan\", \"magenta\", \"yellow\", \"black\"] }, r.prototype.maxes = { rgb: [255, 255, 255], hsl: [360, 100, 100], hsv: [360, 100, 100], hwb: [360, 100, 100], cmyk: [100, 100, 100, 100] }, r.prototype.getValues = function (t) {\n        for (var e = this.values, n = {}, i = 0; i < t.length; i++) {\n          n[t.charAt(i)] = e[t][i];\n        }return 1 !== e.alpha && (n.a = e.alpha), n;\n      }, r.prototype.setValues = function (t, e) {\n        var n,\n            a = this.values,\n            r = this.spaces,\n            o = this.maxes,\n            s = 1;if (this.valid = !0, \"alpha\" === t) s = e;else if (e.length) a[t] = e.slice(0, t.length), s = e[t.length];else if (void 0 !== e[t.charAt(0)]) {\n          for (n = 0; n < t.length; n++) {\n            a[t][n] = e[t.charAt(n)];\n          }s = e.a;\n        } else if (void 0 !== e[r[t][0]]) {\n          var l = r[t];for (n = 0; n < t.length; n++) {\n            a[t][n] = e[l[n]];\n          }s = e.alpha;\n        }if (a.alpha = Math.max(0, Math.min(1, void 0 === s ? a.alpha : s)), \"alpha\" === t) return !1;var u;for (n = 0; n < t.length; n++) {\n          u = Math.max(0, Math.min(o[t][n], a[t][n])), a[t][n] = Math.round(u);\n        }for (var d in r) {\n          d !== t && (a[d] = i[t][d](a[t]));\n        }return !0;\n      }, r.prototype.setSpace = function (t, e) {\n        var n = e[0];return void 0 === n ? this.getValues(t) : (\"number\" == typeof n && (n = Array.prototype.slice.call(e)), this.setValues(t, n), this);\n      }, r.prototype.setChannel = function (t, e, n) {\n        var i = this.values[t];return void 0 === n ? i[e] : n === i[e] ? this : (i[e] = n, this.setValues(t, i), this);\n      }, \"undefined\" != typeof window && (window.Color = r), e.exports = r;\n    }, { 1: 1, 4: 4 }], 3: [function (t, e, n) {\n      function i(t) {\n        var e,\n            n,\n            i,\n            a = t[0] / 255,\n            r = t[1] / 255,\n            o = t[2] / 255,\n            s = Math.min(a, r, o),\n            l = Math.max(a, r, o),\n            u = l - s;return l == s ? e = 0 : a == l ? e = (r - o) / u : r == l ? e = 2 + (o - a) / u : o == l && (e = 4 + (a - r) / u), e = Math.min(60 * e, 360), e < 0 && (e += 360), i = (s + l) / 2, n = l == s ? 0 : i <= .5 ? u / (l + s) : u / (2 - l - s), [e, 100 * n, 100 * i];\n      }function a(t) {\n        var e,\n            n,\n            i,\n            a = t[0],\n            r = t[1],\n            o = t[2],\n            s = Math.min(a, r, o),\n            l = Math.max(a, r, o),\n            u = l - s;return n = 0 == l ? 0 : u / l * 1e3 / 10, l == s ? e = 0 : a == l ? e = (r - o) / u : r == l ? e = 2 + (o - a) / u : o == l && (e = 4 + (a - r) / u), e = Math.min(60 * e, 360), e < 0 && (e += 360), i = l / 255 * 1e3 / 10, [e, n, i];\n      }function o(t) {\n        var e = t[0],\n            n = t[1],\n            a = t[2],\n            r = i(t)[0],\n            o = 1 / 255 * Math.min(e, Math.min(n, a)),\n            a = 1 - 1 / 255 * Math.max(e, Math.max(n, a));return [r, 100 * o, 100 * a];\n      }function s(t) {\n        var e,\n            n,\n            i,\n            a,\n            r = t[0] / 255,\n            o = t[1] / 255,\n            s = t[2] / 255;return a = Math.min(1 - r, 1 - o, 1 - s), e = (1 - r - a) / (1 - a) || 0, n = (1 - o - a) / (1 - a) || 0, i = (1 - s - a) / (1 - a) || 0, [100 * e, 100 * n, 100 * i, 100 * a];\n      }function l(t) {\n        return K[JSON.stringify(t)];\n      }function u(t) {\n        var e = t[0] / 255,\n            n = t[1] / 255,\n            i = t[2] / 255;e = e > .04045 ? Math.pow((e + .055) / 1.055, 2.4) : e / 12.92, n = n > .04045 ? Math.pow((n + .055) / 1.055, 2.4) : n / 12.92, i = i > .04045 ? Math.pow((i + .055) / 1.055, 2.4) : i / 12.92;var a = .4124 * e + .3576 * n + .1805 * i,\n            r = .2126 * e + .7152 * n + .0722 * i,\n            o = .0193 * e + .1192 * n + .9505 * i;return [100 * a, 100 * r, 100 * o];\n      }function d(t) {\n        var e,\n            n,\n            i,\n            a = u(t),\n            r = a[0],\n            o = a[1],\n            s = a[2];return r /= 95.047, o /= 100, s /= 108.883, r = r > .008856 ? Math.pow(r, 1 / 3) : 7.787 * r + 16 / 116, o = o > .008856 ? Math.pow(o, 1 / 3) : 7.787 * o + 16 / 116, s = s > .008856 ? Math.pow(s, 1 / 3) : 7.787 * s + 16 / 116, e = 116 * o - 16, n = 500 * (r - o), i = 200 * (o - s), [e, n, i];\n      }function c(t) {\n        return Y(d(t));\n      }function h(t) {\n        var e,\n            n,\n            i,\n            a,\n            r,\n            o = t[0] / 360,\n            s = t[1] / 100,\n            l = t[2] / 100;if (0 == s) return r = 255 * l, [r, r, r];n = l < .5 ? l * (1 + s) : l + s - l * s, e = 2 * l - n, a = [0, 0, 0];for (var u = 0; u < 3; u++) {\n          i = o + 1 / 3 * -(u - 1), i < 0 && i++, i > 1 && i--, r = 6 * i < 1 ? e + 6 * (n - e) * i : 2 * i < 1 ? n : 3 * i < 2 ? e + (n - e) * (2 / 3 - i) * 6 : e, a[u] = 255 * r;\n        }return a;\n      }function f(t) {\n        var e,\n            n,\n            i = t[0],\n            a = t[1] / 100,\n            r = t[2] / 100;return 0 === r ? [0, 0, 0] : (r *= 2, a *= r <= 1 ? r : 2 - r, n = (r + a) / 2, e = 2 * a / (r + a), [i, 100 * e, 100 * n]);\n      }function p(t) {\n        return o(h(t));\n      }function m(t) {\n        return s(h(t));\n      }function v(t) {\n        return l(h(t));\n      }function y(t) {\n        var e = t[0] / 60,\n            n = t[1] / 100,\n            i = t[2] / 100,\n            a = Math.floor(e) % 6,\n            r = e - Math.floor(e),\n            o = 255 * i * (1 - n),\n            s = 255 * i * (1 - n * r),\n            l = 255 * i * (1 - n * (1 - r)),\n            i = 255 * i;switch (a) {case 0:\n            return [i, l, o];case 1:\n            return [s, i, o];case 2:\n            return [o, i, l];case 3:\n            return [o, s, i];case 4:\n            return [l, o, i];case 5:\n            return [i, o, s];}\n      }function x(t) {\n        var e,\n            n,\n            i = t[0],\n            a = t[1] / 100,\n            r = t[2] / 100;return n = (2 - a) * r, e = a * r, e /= n <= 1 ? n : 2 - n, e = e || 0, n /= 2, [i, 100 * e, 100 * n];\n      }function _(t) {\n        return o(y(t));\n      }function k(t) {\n        return s(y(t));\n      }function w(t) {\n        return l(y(t));\n      }function M(t) {\n        var e,\n            n,\n            i,\n            a,\n            o = t[0] / 360,\n            s = t[1] / 100,\n            l = t[2] / 100,\n            u = s + l;switch (u > 1 && (s /= u, l /= u), e = Math.floor(6 * o), n = 1 - l, i = 6 * o - e, 0 != (1 & e) && (i = 1 - i), a = s + i * (n - s), e) {default:case 6:case 0:\n            r = n, g = a, b = s;break;case 1:\n            r = a, g = n, b = s;break;case 2:\n            r = s, g = n, b = a;break;case 3:\n            r = s, g = a, b = n;break;case 4:\n            r = a, g = s, b = n;break;case 5:\n            r = n, g = s, b = a;}return [255 * r, 255 * g, 255 * b];\n      }function S(t) {\n        return i(M(t));\n      }function D(t) {\n        return a(M(t));\n      }function C(t) {\n        return s(M(t));\n      }function P(t) {\n        return l(M(t));\n      }function T(t) {\n        var e,\n            n,\n            i,\n            a = t[0] / 100,\n            r = t[1] / 100,\n            o = t[2] / 100,\n            s = t[3] / 100;return e = 1 - Math.min(1, a * (1 - s) + s), n = 1 - Math.min(1, r * (1 - s) + s), i = 1 - Math.min(1, o * (1 - s) + s), [255 * e, 255 * n, 255 * i];\n      }function I(t) {\n        return i(T(t));\n      }function A(t) {\n        return a(T(t));\n      }function F(t) {\n        return o(T(t));\n      }function O(t) {\n        return l(T(t));\n      }function R(t) {\n        var e,\n            n,\n            i,\n            a = t[0] / 100,\n            r = t[1] / 100,\n            o = t[2] / 100;return e = 3.2406 * a + r * -1.5372 + o * -.4986, n = a * -.9689 + 1.8758 * r + .0415 * o, i = .0557 * a + r * -.204 + 1.057 * o, e = e > .0031308 ? 1.055 * Math.pow(e, 1 / 2.4) - .055 : e *= 12.92, n = n > .0031308 ? 1.055 * Math.pow(n, 1 / 2.4) - .055 : n *= 12.92, i = i > .0031308 ? 1.055 * Math.pow(i, 1 / 2.4) - .055 : i *= 12.92, e = Math.min(Math.max(0, e), 1), n = Math.min(Math.max(0, n), 1), i = Math.min(Math.max(0, i), 1), [255 * e, 255 * n, 255 * i];\n      }function L(t) {\n        var e,\n            n,\n            i,\n            a = t[0],\n            r = t[1],\n            o = t[2];return a /= 95.047, r /= 100, o /= 108.883, a = a > .008856 ? Math.pow(a, 1 / 3) : 7.787 * a + 16 / 116, r = r > .008856 ? Math.pow(r, 1 / 3) : 7.787 * r + 16 / 116, o = o > .008856 ? Math.pow(o, 1 / 3) : 7.787 * o + 16 / 116, e = 116 * r - 16, n = 500 * (a - r), i = 200 * (r - o), [e, n, i];\n      }function V(t) {\n        return Y(L(t));\n      }function W(t) {\n        var e,\n            n,\n            i,\n            a,\n            r = t[0],\n            o = t[1],\n            s = t[2];return r <= 8 ? (n = 100 * r / 903.3, a = 7.787 * (n / 100) + 16 / 116) : (n = 100 * Math.pow((r + 16) / 116, 3), a = Math.pow(n / 100, 1 / 3)), e = e / 95.047 <= .008856 ? e = 95.047 * (o / 500 + a - 16 / 116) / 7.787 : 95.047 * Math.pow(o / 500 + a, 3), i = i / 108.883 <= .008859 ? i = 108.883 * (a - s / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(a - s / 200, 3), [e, n, i];\n      }function Y(t) {\n        var e,\n            n,\n            i,\n            a = t[0],\n            r = t[1],\n            o = t[2];return e = Math.atan2(o, r), n = 360 * e / 2 / Math.PI, n < 0 && (n += 360), i = Math.sqrt(r * r + o * o), [a, i, n];\n      }function z(t) {\n        return R(W(t));\n      }function N(t) {\n        var e,\n            n,\n            i,\n            a = t[0],\n            r = t[1],\n            o = t[2];return i = o / 360 * 2 * Math.PI, e = r * Math.cos(i), n = r * Math.sin(i), [a, e, n];\n      }function B(t) {\n        return W(N(t));\n      }function E(t) {\n        return z(N(t));\n      }function H(t) {\n        return J[t];\n      }function j(t) {\n        return i(H(t));\n      }function U(t) {\n        return a(H(t));\n      }function G(t) {\n        return o(H(t));\n      }function q(t) {\n        return s(H(t));\n      }function Z(t) {\n        return d(H(t));\n      }function X(t) {\n        return u(H(t));\n      }e.exports = { rgb2hsl: i, rgb2hsv: a, rgb2hwb: o, rgb2cmyk: s, rgb2keyword: l, rgb2xyz: u, rgb2lab: d, rgb2lch: c, hsl2rgb: h, hsl2hsv: f, hsl2hwb: p, hsl2cmyk: m, hsl2keyword: v, hsv2rgb: y, hsv2hsl: x, hsv2hwb: _, hsv2cmyk: k, hsv2keyword: w, hwb2rgb: M, hwb2hsl: S, hwb2hsv: D, hwb2cmyk: C, hwb2keyword: P, cmyk2rgb: T, cmyk2hsl: I, cmyk2hsv: A, cmyk2hwb: F, cmyk2keyword: O, keyword2rgb: H, keyword2hsl: j, keyword2hsv: U, keyword2hwb: G, keyword2cmyk: q, keyword2lab: Z, keyword2xyz: X, xyz2rgb: R, xyz2lab: L, xyz2lch: V, lab2xyz: W, lab2rgb: z, lab2lch: Y, lch2lab: N, lch2xyz: B, lch2rgb: E };var J = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] },\n          K = {};for (var Q in J) {\n        K[JSON.stringify(J[Q])] = Q;\n      }\n    }, {}], 4: [function (t, e, n) {\n      var i = t(3),\n          a = function a() {\n        return new u();\n      };for (var r in i) {\n        a[r + \"Raw\"] = function (t) {\n          return function (e) {\n            return \"number\" == typeof e && (e = Array.prototype.slice.call(arguments)), i[t](e);\n          };\n        }(r);var o = /(\\w+)2(\\w+)/.exec(r),\n            s = o[1],\n            l = o[2];a[s] = a[s] || {}, a[s][l] = a[r] = function (t) {\n          return function (e) {\n            \"number\" == typeof e && (e = Array.prototype.slice.call(arguments));var n = i[t](e);if (\"string\" == typeof n || void 0 === n) return n;for (var a = 0; a < n.length; a++) {\n              n[a] = Math.round(n[a]);\n            }return n;\n          };\n        }(r);\n      }var u = function u() {\n        this.convs = {};\n      };u.prototype.routeSpace = function (t, e) {\n        var n = e[0];return void 0 === n ? this.getValues(t) : (\"number\" == typeof n && (n = Array.prototype.slice.call(e)), this.setValues(t, n));\n      }, u.prototype.setValues = function (t, e) {\n        return this.space = t, this.convs = {}, this.convs[t] = e, this;\n      }, u.prototype.getValues = function (t) {\n        var e = this.convs[t];if (!e) {\n          var n = this.space,\n              i = this.convs[n];e = a[n][t](i), this.convs[t] = e;\n        }return e;\n      }, [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (t) {\n        u.prototype[t] = function (e) {\n          return this.routeSpace(t, arguments);\n        };\n      }), e.exports = a;\n    }, { 3: 3 }], 5: [function (t, e, n) {\n      e.exports = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };\n    }, {}], 6: [function (e, n, i) {\n      !function (e, a) {\n        \"object\" == (typeof i === \"undefined\" ? \"undefined\" : _typeof(i)) && \"undefined\" != typeof n ? n.exports = a() : \"function\" == typeof t && t.amd ? t(a) : e.moment = a();\n      }(this, function () {\n        \"use strict\";\n        function t() {\n          return _i.apply(null, arguments);\n        }function i(t) {\n          _i = t;\n        }function a(t) {\n          return t instanceof Array || \"[object Array]\" === Object.prototype.toString.call(t);\n        }function r(t) {\n          return null != t && \"[object Object]\" === Object.prototype.toString.call(t);\n        }function o(t) {\n          var e;for (e in t) {\n            return !1;\n          }return !0;\n        }function s(t) {\n          return void 0 === t;\n        }function l(t) {\n          return \"number\" == typeof t || \"[object Number]\" === Object.prototype.toString.call(t);\n        }function u(t) {\n          return t instanceof Date || \"[object Date]\" === Object.prototype.toString.call(t);\n        }function d(t, e) {\n          var n,\n              i = [];for (n = 0; n < t.length; ++n) {\n            i.push(e(t[n], n));\n          }return i;\n        }function c(t, e) {\n          return Object.prototype.hasOwnProperty.call(t, e);\n        }function h(t, e) {\n          for (var n in e) {\n            c(e, n) && (t[n] = e[n]);\n          }return c(e, \"toString\") && (t.toString = e.toString), c(e, \"valueOf\") && (t.valueOf = e.valueOf), t;\n        }function f(t, e, n, i) {\n          return xe(t, e, n, i, !0).utc();\n        }function g() {\n          return { empty: !1, unusedTokens: [], unusedInput: [], overflow: -2, charsLeftOver: 0, nullInput: !1, invalidMonth: null, invalidFormat: !1, userInvalidated: !1, iso: !1, parsedDateParts: [], meridiem: null, rfc2822: !1, weekdayMismatch: !1 };\n        }function p(t) {\n          return null == t._pf && (t._pf = g()), t._pf;\n        }function m(t) {\n          if (null == t._isValid) {\n            var e = p(t),\n                n = wi.call(e.parsedDateParts, function (t) {\n              return null != t;\n            }),\n                i = !isNaN(t._d.getTime()) && e.overflow < 0 && !e.empty && !e.invalidMonth && !e.invalidWeekday && !e.nullInput && !e.invalidFormat && !e.userInvalidated && (!e.meridiem || e.meridiem && n);if (t._strict && (i = i && 0 === e.charsLeftOver && 0 === e.unusedTokens.length && void 0 === e.bigHour), null != Object.isFrozen && Object.isFrozen(t)) return i;t._isValid = i;\n          }return t._isValid;\n        }function v(t) {\n          var e = f(NaN);return null != t ? h(p(e), t) : p(e).userInvalidated = !0, e;\n        }function y(t, e) {\n          var n, i, a;if (s(e._isAMomentObject) || (t._isAMomentObject = e._isAMomentObject), s(e._i) || (t._i = e._i), s(e._f) || (t._f = e._f), s(e._l) || (t._l = e._l), s(e._strict) || (t._strict = e._strict), s(e._tzm) || (t._tzm = e._tzm), s(e._isUTC) || (t._isUTC = e._isUTC), s(e._offset) || (t._offset = e._offset), s(e._pf) || (t._pf = p(e)), s(e._locale) || (t._locale = e._locale), Mi.length > 0) for (n = 0; n < Mi.length; n++) {\n            i = Mi[n], a = e[i], s(a) || (t[i] = a);\n          }return t;\n        }function b(e) {\n          y(this, e), this._d = new Date(null != e._d ? e._d.getTime() : NaN), this.isValid() || (this._d = new Date(NaN)), Si === !1 && (Si = !0, t.updateOffset(this), Si = !1);\n        }function x(t) {\n          return t instanceof b || null != t && null != t._isAMomentObject;\n        }function _(t) {\n          return t < 0 ? Math.ceil(t) || 0 : Math.floor(t);\n        }function k(t) {\n          var e = +t,\n              n = 0;return 0 !== e && isFinite(e) && (n = _(e)), n;\n        }function w(t, e, n) {\n          var i,\n              a = Math.min(t.length, e.length),\n              r = Math.abs(t.length - e.length),\n              o = 0;for (i = 0; i < a; i++) {\n            (n && t[i] !== e[i] || !n && k(t[i]) !== k(e[i])) && o++;\n          }return o + r;\n        }function M(e) {\n          t.suppressDeprecationWarnings === !1 && \"undefined\" != typeof console && console.warn && console.warn(\"Deprecation warning: \" + e);\n        }function S(e, n) {\n          var i = !0;return h(function () {\n            if (null != t.deprecationHandler && t.deprecationHandler(null, e), i) {\n              for (var a, r = [], o = 0; o < arguments.length; o++) {\n                if (a = \"\", \"object\" == _typeof(arguments[o])) {\n                  a += \"\\n[\" + o + \"] \";for (var s in arguments[0]) {\n                    a += s + \": \" + arguments[0][s] + \", \";\n                  }a = a.slice(0, -2);\n                } else a = arguments[o];r.push(a);\n              }M(e + \"\\nArguments: \" + Array.prototype.slice.call(r).join(\"\") + \"\\n\" + new Error().stack), i = !1;\n            }return n.apply(this, arguments);\n          }, n);\n        }function D(e, n) {\n          null != t.deprecationHandler && t.deprecationHandler(e, n), Di[e] || (M(n), Di[e] = !0);\n        }function C(t) {\n          return t instanceof Function || \"[object Function]\" === Object.prototype.toString.call(t);\n        }function P(t) {\n          var e, n;for (n in t) {\n            e = t[n], C(e) ? this[n] = e : this[\"_\" + n] = e;\n          }this._config = t, this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + \"|\" + /\\d{1,2}/.source);\n        }function T(t, e) {\n          var n,\n              i = h({}, t);for (n in e) {\n            c(e, n) && (r(t[n]) && r(e[n]) ? (i[n] = {}, h(i[n], t[n]), h(i[n], e[n])) : null != e[n] ? i[n] = e[n] : delete i[n]);\n          }for (n in t) {\n            c(t, n) && !c(e, n) && r(t[n]) && (i[n] = h({}, i[n]));\n          }return i;\n        }function I(t) {\n          null != t && this.set(t);\n        }function A(t, e, n) {\n          var i = this._calendar[t] || this._calendar.sameElse;return C(i) ? i.call(e, n) : i;\n        }function F(t) {\n          var e = this._longDateFormat[t],\n              n = this._longDateFormat[t.toUpperCase()];return e || !n ? e : (this._longDateFormat[t] = n.replace(/MMMM|MM|DD|dddd/g, function (t) {\n            return t.slice(1);\n          }), this._longDateFormat[t]);\n        }function O() {\n          return this._invalidDate;\n        }function R(t) {\n          return this._ordinal.replace(\"%d\", t);\n        }function L(t, e, n, i) {\n          var a = this._relativeTime[n];return C(a) ? a(t, e, n, i) : a.replace(/%d/i, t);\n        }function V(t, e) {\n          var n = this._relativeTime[t > 0 ? \"future\" : \"past\"];return C(n) ? n(e) : n.replace(/%s/i, e);\n        }function W(t, e) {\n          var n = t.toLowerCase();Vi[n] = Vi[n + \"s\"] = Vi[e] = t;\n        }function Y(t) {\n          return \"string\" == typeof t ? Vi[t] || Vi[t.toLowerCase()] : void 0;\n        }function z(t) {\n          var e,\n              n,\n              i = {};for (n in t) {\n            c(t, n) && (e = Y(n), e && (i[e] = t[n]));\n          }return i;\n        }function N(t, e) {\n          Wi[t] = e;\n        }function B(t) {\n          var e = [];for (var n in t) {\n            e.push({ unit: n, priority: Wi[n] });\n          }return e.sort(function (t, e) {\n            return t.priority - e.priority;\n          }), e;\n        }function E(e, n) {\n          return function (i) {\n            return null != i ? (j(this, e, i), t.updateOffset(this, n), this) : H(this, e);\n          };\n        }function H(t, e) {\n          return t.isValid() ? t._d[\"get\" + (t._isUTC ? \"UTC\" : \"\") + e]() : NaN;\n        }function j(t, e, n) {\n          t.isValid() && t._d[\"set\" + (t._isUTC ? \"UTC\" : \"\") + e](n);\n        }function U(t) {\n          return t = Y(t), C(this[t]) ? this[t]() : this;\n        }function G(t, e) {\n          if (\"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t))) {\n            t = z(t);for (var n = B(t), i = 0; i < n.length; i++) {\n              this[n[i].unit](t[n[i].unit]);\n            }\n          } else if (t = Y(t), C(this[t])) return this[t](e);return this;\n        }function q(t, e, n) {\n          var i = \"\" + Math.abs(t),\n              a = e - i.length,\n              r = t >= 0;return (r ? n ? \"+\" : \"\" : \"-\") + Math.pow(10, Math.max(0, a)).toString().substr(1) + i;\n        }function Z(t, e, n, i) {\n          var a = i;\"string\" == typeof i && (a = function a() {\n            return this[i]();\n          }), t && (Bi[t] = a), e && (Bi[e[0]] = function () {\n            return q(a.apply(this, arguments), e[1], e[2]);\n          }), n && (Bi[n] = function () {\n            return this.localeData().ordinal(a.apply(this, arguments), t);\n          });\n        }function X(t) {\n          return t.match(/\\[[\\s\\S]/) ? t.replace(/^\\[|\\]$/g, \"\") : t.replace(/\\\\/g, \"\");\n        }function J(t) {\n          var e,\n              n,\n              i = t.match(Yi);for (e = 0, n = i.length; e < n; e++) {\n            Bi[i[e]] ? i[e] = Bi[i[e]] : i[e] = X(i[e]);\n          }return function (e) {\n            var a,\n                r = \"\";for (a = 0; a < n; a++) {\n              r += C(i[a]) ? i[a].call(e, t) : i[a];\n            }return r;\n          };\n        }function K(t, e) {\n          return t.isValid() ? (e = Q(e, t.localeData()), Ni[e] = Ni[e] || J(e), Ni[e](t)) : t.localeData().invalidDate();\n        }function Q(t, e) {\n          function n(t) {\n            return e.longDateFormat(t) || t;\n          }var i = 5;for (zi.lastIndex = 0; i >= 0 && zi.test(t);) {\n            t = t.replace(zi, n), zi.lastIndex = 0, i -= 1;\n          }return t;\n        }function $(t, e, n) {\n          ra[t] = C(e) ? e : function (t, i) {\n            return t && n ? n : e;\n          };\n        }function tt(t, e) {\n          return c(ra, t) ? ra[t](e._strict, e._locale) : new RegExp(et(t));\n        }function et(t) {\n          return nt(t.replace(\"\\\\\", \"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (t, e, n, i, a) {\n            return e || n || i || a;\n          }));\n        }function nt(t) {\n          return t.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n        }function it(t, e) {\n          var n,\n              i = e;for (\"string\" == typeof t && (t = [t]), l(e) && (i = function i(t, n) {\n            n[e] = k(t);\n          }), n = 0; n < t.length; n++) {\n            oa[t[n]] = i;\n          }\n        }function at(t, e) {\n          it(t, function (t, n, i, a) {\n            i._w = i._w || {}, e(t, i._w, i, a);\n          });\n        }function rt(t, e, n) {\n          null != e && c(oa, t) && oa[t](e, n._a, n, t);\n        }function ot(t, e) {\n          return new Date(Date.UTC(t, e + 1, 0)).getUTCDate();\n        }function st(t, e) {\n          return t ? a(this._months) ? this._months[t.month()] : this._months[(this._months.isFormat || va).test(e) ? \"format\" : \"standalone\"][t.month()] : a(this._months) ? this._months : this._months.standalone;\n        }function lt(t, e) {\n          return t ? a(this._monthsShort) ? this._monthsShort[t.month()] : this._monthsShort[va.test(e) ? \"format\" : \"standalone\"][t.month()] : a(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;\n        }function ut(t, e, n) {\n          var i,\n              a,\n              r,\n              o = t.toLocaleLowerCase();if (!this._monthsParse) for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], i = 0; i < 12; ++i) {\n            r = f([2e3, i]), this._shortMonthsParse[i] = this.monthsShort(r, \"\").toLocaleLowerCase(), this._longMonthsParse[i] = this.months(r, \"\").toLocaleLowerCase();\n          }return n ? \"MMM\" === e ? (a = ma.call(this._shortMonthsParse, o), a !== -1 ? a : null) : (a = ma.call(this._longMonthsParse, o), a !== -1 ? a : null) : \"MMM\" === e ? (a = ma.call(this._shortMonthsParse, o), a !== -1 ? a : (a = ma.call(this._longMonthsParse, o), a !== -1 ? a : null)) : (a = ma.call(this._longMonthsParse, o), a !== -1 ? a : (a = ma.call(this._shortMonthsParse, o), a !== -1 ? a : null));\n        }function dt(t, e, n) {\n          var i, a, r;if (this._monthsParseExact) return ut.call(this, t, e, n);for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), i = 0; i < 12; i++) {\n            if (a = f([2e3, i]), n && !this._longMonthsParse[i] && (this._longMonthsParse[i] = new RegExp(\"^\" + this.months(a, \"\").replace(\".\", \"\") + \"$\", \"i\"), this._shortMonthsParse[i] = new RegExp(\"^\" + this.monthsShort(a, \"\").replace(\".\", \"\") + \"$\", \"i\")), n || this._monthsParse[i] || (r = \"^\" + this.months(a, \"\") + \"|^\" + this.monthsShort(a, \"\"), this._monthsParse[i] = new RegExp(r.replace(\".\", \"\"), \"i\")), n && \"MMMM\" === e && this._longMonthsParse[i].test(t)) return i;if (n && \"MMM\" === e && this._shortMonthsParse[i].test(t)) return i;if (!n && this._monthsParse[i].test(t)) return i;\n          }\n        }function ct(t, e) {\n          var n;if (!t.isValid()) return t;if (\"string\" == typeof e) if (/^\\d+$/.test(e)) e = k(e);else if (e = t.localeData().monthsParse(e), !l(e)) return t;return n = Math.min(t.date(), ot(t.year(), e)), t._d[\"set\" + (t._isUTC ? \"UTC\" : \"\") + \"Month\"](e, n), t;\n        }function ht(e) {\n          return null != e ? (ct(this, e), t.updateOffset(this, !0), this) : H(this, \"Month\");\n        }function ft() {\n          return ot(this.year(), this.month());\n        }function gt(t) {\n          return this._monthsParseExact ? (c(this, \"_monthsRegex\") || mt.call(this), t ? this._monthsShortStrictRegex : this._monthsShortRegex) : (c(this, \"_monthsShortRegex\") || (this._monthsShortRegex = xa), this._monthsShortStrictRegex && t ? this._monthsShortStrictRegex : this._monthsShortRegex);\n        }function pt(t) {\n          return this._monthsParseExact ? (c(this, \"_monthsRegex\") || mt.call(this), t ? this._monthsStrictRegex : this._monthsRegex) : (c(this, \"_monthsRegex\") || (this._monthsRegex = _a), this._monthsStrictRegex && t ? this._monthsStrictRegex : this._monthsRegex);\n        }function mt() {\n          function t(t, e) {\n            return e.length - t.length;\n          }var e,\n              n,\n              i = [],\n              a = [],\n              r = [];for (e = 0; e < 12; e++) {\n            n = f([2e3, e]), i.push(this.monthsShort(n, \"\")), a.push(this.months(n, \"\")), r.push(this.months(n, \"\")), r.push(this.monthsShort(n, \"\"));\n          }for (i.sort(t), a.sort(t), r.sort(t), e = 0; e < 12; e++) {\n            i[e] = nt(i[e]), a[e] = nt(a[e]);\n          }for (e = 0; e < 24; e++) {\n            r[e] = nt(r[e]);\n          }this._monthsRegex = new RegExp(\"^(\" + r.join(\"|\") + \")\", \"i\"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp(\"^(\" + a.join(\"|\") + \")\", \"i\"), this._monthsShortStrictRegex = new RegExp(\"^(\" + i.join(\"|\") + \")\", \"i\");\n        }function vt(t) {\n          return yt(t) ? 366 : 365;\n        }function yt(t) {\n          return t % 4 === 0 && t % 100 !== 0 || t % 400 === 0;\n        }function bt() {\n          return yt(this.year());\n        }function xt(t, e, n, i, a, r, o) {\n          var s = new Date(t, e, n, i, a, r, o);return t < 100 && t >= 0 && isFinite(s.getFullYear()) && s.setFullYear(t), s;\n        }function _t(t) {\n          var e = new Date(Date.UTC.apply(null, arguments));return t < 100 && t >= 0 && isFinite(e.getUTCFullYear()) && e.setUTCFullYear(t), e;\n        }function kt(t, e, n) {\n          var i = 7 + e - n,\n              a = (7 + _t(t, 0, i).getUTCDay() - e) % 7;return -a + i - 1;\n        }function wt(t, e, n, i, a) {\n          var r,\n              o,\n              s = (7 + n - i) % 7,\n              l = kt(t, i, a),\n              u = 1 + 7 * (e - 1) + s + l;return u <= 0 ? (r = t - 1, o = vt(r) + u) : u > vt(t) ? (r = t + 1, o = u - vt(t)) : (r = t, o = u), { year: r, dayOfYear: o };\n        }function Mt(t, e, n) {\n          var i,\n              a,\n              r = kt(t.year(), e, n),\n              o = Math.floor((t.dayOfYear() - r - 1) / 7) + 1;return o < 1 ? (a = t.year() - 1, i = o + St(a, e, n)) : o > St(t.year(), e, n) ? (i = o - St(t.year(), e, n), a = t.year() + 1) : (a = t.year(), i = o), { week: i, year: a };\n        }function St(t, e, n) {\n          var i = kt(t, e, n),\n              a = kt(t + 1, e, n);return (vt(t) - i + a) / 7;\n        }function Dt(t) {\n          return Mt(t, this._week.dow, this._week.doy).week;\n        }function Ct() {\n          return this._week.dow;\n        }function Pt() {\n          return this._week.doy;\n        }function Tt(t) {\n          var e = this.localeData().week(this);return null == t ? e : this.add(7 * (t - e), \"d\");\n        }function It(t) {\n          var e = Mt(this, 1, 4).week;return null == t ? e : this.add(7 * (t - e), \"d\");\n        }function At(t, e) {\n          return \"string\" != typeof t ? t : isNaN(t) ? (t = e.weekdaysParse(t), \"number\" == typeof t ? t : null) : parseInt(t, 10);\n        }function Ft(t, e) {\n          return \"string\" == typeof t ? e.weekdaysParse(t) % 7 || 7 : isNaN(t) ? null : t;\n        }function Ot(t, e) {\n          return t ? a(this._weekdays) ? this._weekdays[t.day()] : this._weekdays[this._weekdays.isFormat.test(e) ? \"format\" : \"standalone\"][t.day()] : a(this._weekdays) ? this._weekdays : this._weekdays.standalone;\n        }function Rt(t) {\n          return t ? this._weekdaysShort[t.day()] : this._weekdaysShort;\n        }function Lt(t) {\n          return t ? this._weekdaysMin[t.day()] : this._weekdaysMin;\n        }function Vt(t, e, n) {\n          var i,\n              a,\n              r,\n              o = t.toLocaleLowerCase();if (!this._weekdaysParse) for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], i = 0; i < 7; ++i) {\n            r = f([2e3, 1]).day(i), this._minWeekdaysParse[i] = this.weekdaysMin(r, \"\").toLocaleLowerCase(), this._shortWeekdaysParse[i] = this.weekdaysShort(r, \"\").toLocaleLowerCase(), this._weekdaysParse[i] = this.weekdays(r, \"\").toLocaleLowerCase();\n          }return n ? \"dddd\" === e ? (a = ma.call(this._weekdaysParse, o), a !== -1 ? a : null) : \"ddd\" === e ? (a = ma.call(this._shortWeekdaysParse, o), a !== -1 ? a : null) : (a = ma.call(this._minWeekdaysParse, o), a !== -1 ? a : null) : \"dddd\" === e ? (a = ma.call(this._weekdaysParse, o), a !== -1 ? a : (a = ma.call(this._shortWeekdaysParse, o), a !== -1 ? a : (a = ma.call(this._minWeekdaysParse, o), a !== -1 ? a : null))) : \"ddd\" === e ? (a = ma.call(this._shortWeekdaysParse, o), a !== -1 ? a : (a = ma.call(this._weekdaysParse, o), a !== -1 ? a : (a = ma.call(this._minWeekdaysParse, o), a !== -1 ? a : null))) : (a = ma.call(this._minWeekdaysParse, o), a !== -1 ? a : (a = ma.call(this._weekdaysParse, o), a !== -1 ? a : (a = ma.call(this._shortWeekdaysParse, o), a !== -1 ? a : null)));\n        }function Wt(t, e, n) {\n          var i, a, r;if (this._weekdaysParseExact) return Vt.call(this, t, e, n);for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), i = 0; i < 7; i++) {\n            if (a = f([2e3, 1]).day(i), n && !this._fullWeekdaysParse[i] && (this._fullWeekdaysParse[i] = new RegExp(\"^\" + this.weekdays(a, \"\").replace(\".\", \".?\") + \"$\", \"i\"), this._shortWeekdaysParse[i] = new RegExp(\"^\" + this.weekdaysShort(a, \"\").replace(\".\", \".?\") + \"$\", \"i\"), this._minWeekdaysParse[i] = new RegExp(\"^\" + this.weekdaysMin(a, \"\").replace(\".\", \".?\") + \"$\", \"i\")), this._weekdaysParse[i] || (r = \"^\" + this.weekdays(a, \"\") + \"|^\" + this.weekdaysShort(a, \"\") + \"|^\" + this.weekdaysMin(a, \"\"), this._weekdaysParse[i] = new RegExp(r.replace(\".\", \"\"), \"i\")), n && \"dddd\" === e && this._fullWeekdaysParse[i].test(t)) return i;if (n && \"ddd\" === e && this._shortWeekdaysParse[i].test(t)) return i;if (n && \"dd\" === e && this._minWeekdaysParse[i].test(t)) return i;if (!n && this._weekdaysParse[i].test(t)) return i;\n          }\n        }function Yt(t) {\n          if (!this.isValid()) return null != t ? this : NaN;var e = this._isUTC ? this._d.getUTCDay() : this._d.getDay();return null != t ? (t = At(t, this.localeData()), this.add(t - e, \"d\")) : e;\n        }function zt(t) {\n          if (!this.isValid()) return null != t ? this : NaN;var e = (this.day() + 7 - this.localeData()._week.dow) % 7;return null == t ? e : this.add(t - e, \"d\");\n        }function Nt(t) {\n          if (!this.isValid()) return null != t ? this : NaN;if (null != t) {\n            var e = Ft(t, this.localeData());return this.day(this.day() % 7 ? e : e - 7);\n          }return this.day() || 7;\n        }function Bt(t) {\n          return this._weekdaysParseExact ? (c(this, \"_weekdaysRegex\") || jt.call(this), t ? this._weekdaysStrictRegex : this._weekdaysRegex) : (c(this, \"_weekdaysRegex\") || (this._weekdaysRegex = Ca), this._weekdaysStrictRegex && t ? this._weekdaysStrictRegex : this._weekdaysRegex);\n        }function Et(t) {\n          return this._weekdaysParseExact ? (c(this, \"_weekdaysRegex\") || jt.call(this), t ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (c(this, \"_weekdaysShortRegex\") || (this._weekdaysShortRegex = Pa), this._weekdaysShortStrictRegex && t ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);\n        }function Ht(t) {\n          return this._weekdaysParseExact ? (c(this, \"_weekdaysRegex\") || jt.call(this), t ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (c(this, \"_weekdaysMinRegex\") || (this._weekdaysMinRegex = Ta), this._weekdaysMinStrictRegex && t ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);\n        }function jt() {\n          function t(t, e) {\n            return e.length - t.length;\n          }var e,\n              n,\n              i,\n              a,\n              r,\n              o = [],\n              s = [],\n              l = [],\n              u = [];for (e = 0; e < 7; e++) {\n            n = f([2e3, 1]).day(e), i = this.weekdaysMin(n, \"\"), a = this.weekdaysShort(n, \"\"), r = this.weekdays(n, \"\"), o.push(i), s.push(a), l.push(r), u.push(i), u.push(a), u.push(r);\n          }for (o.sort(t), s.sort(t), l.sort(t), u.sort(t), e = 0; e < 7; e++) {\n            s[e] = nt(s[e]), l[e] = nt(l[e]), u[e] = nt(u[e]);\n          }this._weekdaysRegex = new RegExp(\"^(\" + u.join(\"|\") + \")\", \"i\"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp(\"^(\" + l.join(\"|\") + \")\", \"i\"), this._weekdaysShortStrictRegex = new RegExp(\"^(\" + s.join(\"|\") + \")\", \"i\"), this._weekdaysMinStrictRegex = new RegExp(\"^(\" + o.join(\"|\") + \")\", \"i\");\n        }function Ut() {\n          return this.hours() % 12 || 12;\n        }function Gt() {\n          return this.hours() || 24;\n        }function qt(t, e) {\n          Z(t, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), e);\n          });\n        }function Zt(t, e) {\n          return e._meridiemParse;\n        }function Xt(t) {\n          return \"p\" === (t + \"\").toLowerCase().charAt(0);\n        }function Jt(t, e, n) {\n          return t > 11 ? n ? \"pm\" : \"PM\" : n ? \"am\" : \"AM\";\n        }function Kt(t) {\n          return t ? t.toLowerCase().replace(\"_\", \"-\") : t;\n        }function Qt(t) {\n          for (var e, n, i, a, r = 0; r < t.length;) {\n            for (a = Kt(t[r]).split(\"-\"), e = a.length, n = Kt(t[r + 1]), n = n ? n.split(\"-\") : null; e > 0;) {\n              if (i = $t(a.slice(0, e).join(\"-\"))) return i;if (n && n.length >= e && w(a, n, !0) >= e - 1) break;e--;\n            }r++;\n          }return null;\n        }function $t(t) {\n          var i = null;if (!Ra[t] && \"undefined\" != typeof n && n && n.exports) try {\n            i = Ia._abbr, e(\"./locale/\" + t), te(i);\n          } catch (t) {}return Ra[t];\n        }function te(t, e) {\n          var n;return t && (n = s(e) ? ie(t) : ee(t, e), n && (Ia = n)), Ia._abbr;\n        }function ee(t, e) {\n          if (null !== e) {\n            var n = Oa;if (e.abbr = t, null != Ra[t]) D(\"defineLocaleOverride\", \"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\"), n = Ra[t]._config;else if (null != e.parentLocale) {\n              if (null == Ra[e.parentLocale]) return La[e.parentLocale] || (La[e.parentLocale] = []), La[e.parentLocale].push({ name: t, config: e }), null;n = Ra[e.parentLocale]._config;\n            }return Ra[t] = new I(T(n, e)), La[t] && La[t].forEach(function (t) {\n              ee(t.name, t.config);\n            }), te(t), Ra[t];\n          }return delete Ra[t], null;\n        }function ne(t, e) {\n          if (null != e) {\n            var n,\n                i = Oa;null != Ra[t] && (i = Ra[t]._config), e = T(i, e), n = new I(e), n.parentLocale = Ra[t], Ra[t] = n, te(t);\n          } else null != Ra[t] && (null != Ra[t].parentLocale ? Ra[t] = Ra[t].parentLocale : null != Ra[t] && delete Ra[t]);return Ra[t];\n        }function ie(t) {\n          var e;if (t && t._locale && t._locale._abbr && (t = t._locale._abbr), !t) return Ia;if (!a(t)) {\n            if (e = $t(t)) return e;t = [t];\n          }return Qt(t);\n        }function ae() {\n          return Ti(Ra);\n        }function re(t) {\n          var e,\n              n = t._a;return n && p(t).overflow === -2 && (e = n[la] < 0 || n[la] > 11 ? la : n[ua] < 1 || n[ua] > ot(n[sa], n[la]) ? ua : n[da] < 0 || n[da] > 24 || 24 === n[da] && (0 !== n[ca] || 0 !== n[ha] || 0 !== n[fa]) ? da : n[ca] < 0 || n[ca] > 59 ? ca : n[ha] < 0 || n[ha] > 59 ? ha : n[fa] < 0 || n[fa] > 999 ? fa : -1, p(t)._overflowDayOfYear && (e < sa || e > ua) && (e = ua), p(t)._overflowWeeks && e === -1 && (e = ga), p(t)._overflowWeekday && e === -1 && (e = pa), p(t).overflow = e), t;\n        }function oe(t) {\n          var e,\n              n,\n              i,\n              a,\n              r,\n              o,\n              s = t._i,\n              l = Va.exec(s) || Wa.exec(s);if (l) {\n            for (p(t).iso = !0, e = 0, n = za.length; e < n; e++) {\n              if (za[e][1].exec(l[1])) {\n                a = za[e][0], i = za[e][2] !== !1;break;\n              }\n            }if (null == a) return void (t._isValid = !1);if (l[3]) {\n              for (e = 0, n = Na.length; e < n; e++) {\n                if (Na[e][1].exec(l[3])) {\n                  r = (l[2] || \" \") + Na[e][0];break;\n                }\n              }if (null == r) return void (t._isValid = !1);\n            }if (!i && null != r) return void (t._isValid = !1);if (l[4]) {\n              if (!Ya.exec(l[4])) return void (t._isValid = !1);o = \"Z\";\n            }t._f = a + (r || \"\") + (o || \"\"), fe(t);\n          } else t._isValid = !1;\n        }function se(t) {\n          var e,\n              n,\n              i,\n              a,\n              r,\n              o,\n              s,\n              l,\n              u = { \" GMT\": \" +0000\", \" EDT\": \" -0400\", \" EST\": \" -0500\", \" CDT\": \" -0500\", \" CST\": \" -0600\", \" MDT\": \" -0600\", \" MST\": \" -0700\", \" PDT\": \" -0700\", \" PST\": \" -0800\" },\n              d = \"YXWVUTSRQPONZABCDEFGHIKLM\";if (e = t._i.replace(/\\([^\\)]*\\)|[\\n\\t]/g, \" \").replace(/(\\s\\s+)/g, \" \").replace(/^\\s|\\s$/g, \"\"), n = Ea.exec(e)) {\n            if (i = n[1] ? \"ddd\" + (5 === n[1].length ? \", \" : \" \") : \"\", a = \"D MMM \" + (n[2].length > 10 ? \"YYYY \" : \"YY \"), r = \"HH:mm\" + (n[4] ? \":ss\" : \"\"), n[1]) {\n              var c = new Date(n[2]),\n                  h = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"][c.getDay()];if (n[1].substr(0, 3) !== h) return p(t).weekdayMismatch = !0, void (t._isValid = !1);\n            }switch (n[5].length) {case 2:\n                0 === l ? s = \" +0000\" : (l = d.indexOf(n[5][1].toUpperCase()) - 12, s = (l < 0 ? \" -\" : \" +\") + (\"\" + l).replace(/^-?/, \"0\").match(/..$/)[0] + \"00\");break;case 4:\n                s = u[n[5]];break;default:\n                s = u[\" GMT\"];}n[5] = s, t._i = n.splice(1).join(\"\"), o = \" ZZ\", t._f = i + a + r + o, fe(t), p(t).rfc2822 = !0;\n          } else t._isValid = !1;\n        }function le(e) {\n          var n = Ba.exec(e._i);return null !== n ? void (e._d = new Date(+n[1])) : (oe(e), void (e._isValid === !1 && (delete e._isValid, se(e), e._isValid === !1 && (delete e._isValid, t.createFromInputFallback(e)))));\n        }function ue(t, e, n) {\n          return null != t ? t : null != e ? e : n;\n        }function de(e) {\n          var n = new Date(t.now());return e._useUTC ? [n.getUTCFullYear(), n.getUTCMonth(), n.getUTCDate()] : [n.getFullYear(), n.getMonth(), n.getDate()];\n        }function ce(t) {\n          var e,\n              n,\n              i,\n              a,\n              r = [];if (!t._d) {\n            for (i = de(t), t._w && null == t._a[ua] && null == t._a[la] && he(t), null != t._dayOfYear && (a = ue(t._a[sa], i[sa]), (t._dayOfYear > vt(a) || 0 === t._dayOfYear) && (p(t)._overflowDayOfYear = !0), n = _t(a, 0, t._dayOfYear), t._a[la] = n.getUTCMonth(), t._a[ua] = n.getUTCDate()), e = 0; e < 3 && null == t._a[e]; ++e) {\n              t._a[e] = r[e] = i[e];\n            }for (; e < 7; e++) {\n              t._a[e] = r[e] = null == t._a[e] ? 2 === e ? 1 : 0 : t._a[e];\n            }24 === t._a[da] && 0 === t._a[ca] && 0 === t._a[ha] && 0 === t._a[fa] && (t._nextDay = !0, t._a[da] = 0), t._d = (t._useUTC ? _t : xt).apply(null, r), null != t._tzm && t._d.setUTCMinutes(t._d.getUTCMinutes() - t._tzm), t._nextDay && (t._a[da] = 24);\n          }\n        }function he(t) {\n          var e, n, i, a, r, o, s, l;if (e = t._w, null != e.GG || null != e.W || null != e.E) r = 1, o = 4, n = ue(e.GG, t._a[sa], Mt(_e(), 1, 4).year), i = ue(e.W, 1), a = ue(e.E, 1), (a < 1 || a > 7) && (l = !0);else {\n            r = t._locale._week.dow, o = t._locale._week.doy;var u = Mt(_e(), r, o);n = ue(e.gg, t._a[sa], u.year), i = ue(e.w, u.week), null != e.d ? (a = e.d, (a < 0 || a > 6) && (l = !0)) : null != e.e ? (a = e.e + r, (e.e < 0 || e.e > 6) && (l = !0)) : a = r;\n          }i < 1 || i > St(n, r, o) ? p(t)._overflowWeeks = !0 : null != l ? p(t)._overflowWeekday = !0 : (s = wt(n, i, a, r, o), t._a[sa] = s.year, t._dayOfYear = s.dayOfYear);\n        }function fe(e) {\n          if (e._f === t.ISO_8601) return void oe(e);if (e._f === t.RFC_2822) return void se(e);e._a = [], p(e).empty = !0;var n,\n              i,\n              a,\n              r,\n              o,\n              s = \"\" + e._i,\n              l = s.length,\n              u = 0;for (a = Q(e._f, e._locale).match(Yi) || [], n = 0; n < a.length; n++) {\n            r = a[n], i = (s.match(tt(r, e)) || [])[0], i && (o = s.substr(0, s.indexOf(i)), o.length > 0 && p(e).unusedInput.push(o), s = s.slice(s.indexOf(i) + i.length), u += i.length), Bi[r] ? (i ? p(e).empty = !1 : p(e).unusedTokens.push(r), rt(r, i, e)) : e._strict && !i && p(e).unusedTokens.push(r);\n          }p(e).charsLeftOver = l - u, s.length > 0 && p(e).unusedInput.push(s), e._a[da] <= 12 && p(e).bigHour === !0 && e._a[da] > 0 && (p(e).bigHour = void 0), p(e).parsedDateParts = e._a.slice(0), p(e).meridiem = e._meridiem, e._a[da] = ge(e._locale, e._a[da], e._meridiem), ce(e), re(e);\n        }function ge(t, e, n) {\n          var i;return null == n ? e : null != t.meridiemHour ? t.meridiemHour(e, n) : null != t.isPM ? (i = t.isPM(n), i && e < 12 && (e += 12), i || 12 !== e || (e = 0), e) : e;\n        }function pe(t) {\n          var e, n, i, a, r;if (0 === t._f.length) return p(t).invalidFormat = !0, void (t._d = new Date(NaN));for (a = 0; a < t._f.length; a++) {\n            r = 0, e = y({}, t), null != t._useUTC && (e._useUTC = t._useUTC), e._f = t._f[a], fe(e), m(e) && (r += p(e).charsLeftOver, r += 10 * p(e).unusedTokens.length, p(e).score = r, (null == i || r < i) && (i = r, n = e));\n          }h(t, n || e);\n        }function me(t) {\n          if (!t._d) {\n            var e = z(t._i);t._a = d([e.year, e.month, e.day || e.date, e.hour, e.minute, e.second, e.millisecond], function (t) {\n              return t && parseInt(t, 10);\n            }), ce(t);\n          }\n        }function ve(t) {\n          var e = new b(re(ye(t)));return e._nextDay && (e.add(1, \"d\"), e._nextDay = void 0), e;\n        }function ye(t) {\n          var e = t._i,\n              n = t._f;return t._locale = t._locale || ie(t._l), null === e || void 0 === n && \"\" === e ? v({ nullInput: !0 }) : (\"string\" == typeof e && (t._i = e = t._locale.preparse(e)), x(e) ? new b(re(e)) : (u(e) ? t._d = e : a(n) ? pe(t) : n ? fe(t) : be(t), m(t) || (t._d = null), t));\n        }function be(e) {\n          var n = e._i;s(n) ? e._d = new Date(t.now()) : u(n) ? e._d = new Date(n.valueOf()) : \"string\" == typeof n ? le(e) : a(n) ? (e._a = d(n.slice(0), function (t) {\n            return parseInt(t, 10);\n          }), ce(e)) : r(n) ? me(e) : l(n) ? e._d = new Date(n) : t.createFromInputFallback(e);\n        }function xe(t, e, n, i, s) {\n          var l = {};return n !== !0 && n !== !1 || (i = n, n = void 0), (r(t) && o(t) || a(t) && 0 === t.length) && (t = void 0), l._isAMomentObject = !0, l._useUTC = l._isUTC = s, l._l = n, l._i = t, l._f = e, l._strict = i, ve(l);\n        }function _e(t, e, n, i) {\n          return xe(t, e, n, i, !1);\n        }function ke(t, e) {\n          var n, i;if (1 === e.length && a(e[0]) && (e = e[0]), !e.length) return _e();for (n = e[0], i = 1; i < e.length; ++i) {\n            e[i].isValid() && !e[i][t](n) || (n = e[i]);\n          }return n;\n        }function we() {\n          var t = [].slice.call(arguments, 0);return ke(\"isBefore\", t);\n        }function Me() {\n          var t = [].slice.call(arguments, 0);return ke(\"isAfter\", t);\n        }function Se(t) {\n          for (var e in t) {\n            if (Ga.indexOf(e) === -1 || null != t[e] && isNaN(t[e])) return !1;\n          }for (var n = !1, i = 0; i < Ga.length; ++i) {\n            if (t[Ga[i]]) {\n              if (n) return !1;parseFloat(t[Ga[i]]) !== k(t[Ga[i]]) && (n = !0);\n            }\n          }return !0;\n        }function De() {\n          return this._isValid;\n        }function Ce() {\n          return Ge(NaN);\n        }function Pe(t) {\n          var e = z(t),\n              n = e.year || 0,\n              i = e.quarter || 0,\n              a = e.month || 0,\n              r = e.week || 0,\n              o = e.day || 0,\n              s = e.hour || 0,\n              l = e.minute || 0,\n              u = e.second || 0,\n              d = e.millisecond || 0;this._isValid = Se(e), this._milliseconds = +d + 1e3 * u + 6e4 * l + 1e3 * s * 60 * 60, this._days = +o + 7 * r, this._months = +a + 3 * i + 12 * n, this._data = {}, this._locale = ie(), this._bubble();\n        }function Te(t) {\n          return t instanceof Pe;\n        }function Ie(t) {\n          return t < 0 ? Math.round(-1 * t) * -1 : Math.round(t);\n        }function Ae(t, e) {\n          Z(t, 0, 0, function () {\n            var t = this.utcOffset(),\n                n = \"+\";return t < 0 && (t = -t, n = \"-\"), n + q(~~(t / 60), 2) + e + q(~~t % 60, 2);\n          });\n        }function Fe(t, e) {\n          var n = (e || \"\").match(t);if (null === n) return null;var i = n[n.length - 1] || [],\n              a = (i + \"\").match(qa) || [\"-\", 0, 0],\n              r = +(60 * a[1]) + k(a[2]);return 0 === r ? 0 : \"+\" === a[0] ? r : -r;\n        }function Oe(e, n) {\n          var i, a;return n._isUTC ? (i = n.clone(), a = (x(e) || u(e) ? e.valueOf() : _e(e).valueOf()) - i.valueOf(), i._d.setTime(i._d.valueOf() + a), t.updateOffset(i, !1), i) : _e(e).local();\n        }function Re(t) {\n          return 15 * -Math.round(t._d.getTimezoneOffset() / 15);\n        }function Le(e, n, i) {\n          var a,\n              r = this._offset || 0;if (!this.isValid()) return null != e ? this : NaN;if (null != e) {\n            if (\"string\" == typeof e) {\n              if (e = Fe(na, e), null === e) return this;\n            } else Math.abs(e) < 16 && !i && (e *= 60);return !this._isUTC && n && (a = Re(this)), this._offset = e, this._isUTC = !0, null != a && this.add(a, \"m\"), r !== e && (!n || this._changeInProgress ? Ke(this, Ge(e - r, \"m\"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, t.updateOffset(this, !0), this._changeInProgress = null)), this;\n          }return this._isUTC ? r : Re(this);\n        }function Ve(t, e) {\n          return null != t ? (\"string\" != typeof t && (t = -t), this.utcOffset(t, e), this) : -this.utcOffset();\n        }function We(t) {\n          return this.utcOffset(0, t);\n        }function Ye(t) {\n          return this._isUTC && (this.utcOffset(0, t), this._isUTC = !1, t && this.subtract(Re(this), \"m\")), this;\n        }function ze() {\n          if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);else if (\"string\" == typeof this._i) {\n            var t = Fe(ea, this._i);null != t ? this.utcOffset(t) : this.utcOffset(0, !0);\n          }return this;\n        }function Ne(t) {\n          return !!this.isValid() && (t = t ? _e(t).utcOffset() : 0, (this.utcOffset() - t) % 60 === 0);\n        }function Be() {\n          return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n        }function Ee() {\n          if (!s(this._isDSTShifted)) return this._isDSTShifted;var t = {};if (y(t, this), t = ye(t), t._a) {\n            var e = t._isUTC ? f(t._a) : _e(t._a);this._isDSTShifted = this.isValid() && w(t._a, e.toArray()) > 0;\n          } else this._isDSTShifted = !1;return this._isDSTShifted;\n        }function He() {\n          return !!this.isValid() && !this._isUTC;\n        }function je() {\n          return !!this.isValid() && this._isUTC;\n        }function Ue() {\n          return !!this.isValid() && this._isUTC && 0 === this._offset;\n        }function Ge(t, e) {\n          var n,\n              i,\n              a,\n              r = t,\n              o = null;return Te(t) ? r = { ms: t._milliseconds, d: t._days, M: t._months } : l(t) ? (r = {}, e ? r[e] = t : r.milliseconds = t) : (o = Za.exec(t)) ? (n = \"-\" === o[1] ? -1 : 1, r = { y: 0, d: k(o[ua]) * n, h: k(o[da]) * n, m: k(o[ca]) * n, s: k(o[ha]) * n, ms: k(Ie(1e3 * o[fa])) * n }) : (o = Xa.exec(t)) ? (n = \"-\" === o[1] ? -1 : 1, r = { y: qe(o[2], n), M: qe(o[3], n), w: qe(o[4], n), d: qe(o[5], n), h: qe(o[6], n), m: qe(o[7], n), s: qe(o[8], n) }) : null == r ? r = {} : \"object\" == (typeof r === \"undefined\" ? \"undefined\" : _typeof(r)) && (\"from\" in r || \"to\" in r) && (a = Xe(_e(r.from), _e(r.to)), r = {}, r.ms = a.milliseconds, r.M = a.months), i = new Pe(r), Te(t) && c(t, \"_locale\") && (i._locale = t._locale), i;\n        }function qe(t, e) {\n          var n = t && parseFloat(t.replace(\",\", \".\"));return (isNaN(n) ? 0 : n) * e;\n        }function Ze(t, e) {\n          var n = { milliseconds: 0, months: 0 };return n.months = e.month() - t.month() + 12 * (e.year() - t.year()), t.clone().add(n.months, \"M\").isAfter(e) && --n.months, n.milliseconds = +e - +t.clone().add(n.months, \"M\"), n;\n        }function Xe(t, e) {\n          var n;return t.isValid() && e.isValid() ? (e = Oe(e, t), t.isBefore(e) ? n = Ze(t, e) : (n = Ze(e, t), n.milliseconds = -n.milliseconds, n.months = -n.months), n) : { milliseconds: 0, months: 0 };\n        }function Je(t, e) {\n          return function (n, i) {\n            var a, r;return null === i || isNaN(+i) || (D(e, \"moment().\" + e + \"(period, number) is deprecated. Please use moment().\" + e + \"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"), r = n, n = i, i = r), n = \"string\" == typeof n ? +n : n, a = Ge(n, i), Ke(this, a, t), this;\n          };\n        }function Ke(e, n, i, a) {\n          var r = n._milliseconds,\n              o = Ie(n._days),\n              s = Ie(n._months);e.isValid() && (a = null == a || a, r && e._d.setTime(e._d.valueOf() + r * i), o && j(e, \"Date\", H(e, \"Date\") + o * i), s && ct(e, H(e, \"Month\") + s * i), a && t.updateOffset(e, o || s));\n        }function Qe(t, e) {\n          var n = t.diff(e, \"days\", !0);return n < -6 ? \"sameElse\" : n < -1 ? \"lastWeek\" : n < 0 ? \"lastDay\" : n < 1 ? \"sameDay\" : n < 2 ? \"nextDay\" : n < 7 ? \"nextWeek\" : \"sameElse\";\n        }function $e(e, n) {\n          var i = e || _e(),\n              a = Oe(i, this).startOf(\"day\"),\n              r = t.calendarFormat(this, a) || \"sameElse\",\n              o = n && (C(n[r]) ? n[r].call(this, i) : n[r]);return this.format(o || this.localeData().calendar(r, this, _e(i)));\n        }function tn() {\n          return new b(this);\n        }function en(t, e) {\n          var n = x(t) ? t : _e(t);return !(!this.isValid() || !n.isValid()) && (e = Y(s(e) ? \"millisecond\" : e), \"millisecond\" === e ? this.valueOf() > n.valueOf() : n.valueOf() < this.clone().startOf(e).valueOf());\n        }function nn(t, e) {\n          var n = x(t) ? t : _e(t);return !(!this.isValid() || !n.isValid()) && (e = Y(s(e) ? \"millisecond\" : e), \"millisecond\" === e ? this.valueOf() < n.valueOf() : this.clone().endOf(e).valueOf() < n.valueOf());\n        }function an(t, e, n, i) {\n          return i = i || \"()\", (\"(\" === i[0] ? this.isAfter(t, n) : !this.isBefore(t, n)) && (\")\" === i[1] ? this.isBefore(e, n) : !this.isAfter(e, n));\n        }function rn(t, e) {\n          var n,\n              i = x(t) ? t : _e(t);return !(!this.isValid() || !i.isValid()) && (e = Y(e || \"millisecond\"), \"millisecond\" === e ? this.valueOf() === i.valueOf() : (n = i.valueOf(), this.clone().startOf(e).valueOf() <= n && n <= this.clone().endOf(e).valueOf()));\n        }function on(t, e) {\n          return this.isSame(t, e) || this.isAfter(t, e);\n        }function sn(t, e) {\n          return this.isSame(t, e) || this.isBefore(t, e);\n        }function ln(t, e, n) {\n          var i, a, r, o;return this.isValid() ? (i = Oe(t, this), i.isValid() ? (a = 6e4 * (i.utcOffset() - this.utcOffset()), e = Y(e), \"year\" === e || \"month\" === e || \"quarter\" === e ? (o = un(this, i), \"quarter\" === e ? o /= 3 : \"year\" === e && (o /= 12)) : (r = this - i, o = \"second\" === e ? r / 1e3 : \"minute\" === e ? r / 6e4 : \"hour\" === e ? r / 36e5 : \"day\" === e ? (r - a) / 864e5 : \"week\" === e ? (r - a) / 6048e5 : r), n ? o : _(o)) : NaN) : NaN;\n        }function un(t, e) {\n          var n,\n              i,\n              a = 12 * (e.year() - t.year()) + (e.month() - t.month()),\n              r = t.clone().add(a, \"months\");return e - r < 0 ? (n = t.clone().add(a - 1, \"months\"), i = (e - r) / (r - n)) : (n = t.clone().add(a + 1, \"months\"), i = (e - r) / (n - r)), -(a + i) || 0;\n        }function dn() {\n          return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\");\n        }function cn() {\n          if (!this.isValid()) return null;var t = this.clone().utc();return t.year() < 0 || t.year() > 9999 ? K(t, \"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\") : C(Date.prototype.toISOString) ? this.toDate().toISOString() : K(t, \"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\");\n        }function hn() {\n          if (!this.isValid()) return \"moment.invalid(/* \" + this._i + \" */)\";var t = \"moment\",\n              e = \"\";this.isLocal() || (t = 0 === this.utcOffset() ? \"moment.utc\" : \"moment.parseZone\", e = \"Z\");var n = \"[\" + t + '(\"]',\n              i = 0 <= this.year() && this.year() <= 9999 ? \"YYYY\" : \"YYYYYY\",\n              a = \"-MM-DD[T]HH:mm:ss.SSS\",\n              r = e + '[\")]';return this.format(n + i + a + r);\n        }function fn(e) {\n          e || (e = this.isUtc() ? t.defaultFormatUtc : t.defaultFormat);var n = K(this, e);return this.localeData().postformat(n);\n        }function gn(t, e) {\n          return this.isValid() && (x(t) && t.isValid() || _e(t).isValid()) ? Ge({ to: this, from: t }).locale(this.locale()).humanize(!e) : this.localeData().invalidDate();\n        }function pn(t) {\n          return this.from(_e(), t);\n        }function mn(t, e) {\n          return this.isValid() && (x(t) && t.isValid() || _e(t).isValid()) ? Ge({ from: this, to: t }).locale(this.locale()).humanize(!e) : this.localeData().invalidDate();\n        }function vn(t) {\n          return this.to(_e(), t);\n        }function yn(t) {\n          var e;return void 0 === t ? this._locale._abbr : (e = ie(t), null != e && (this._locale = e), this);\n        }function bn() {\n          return this._locale;\n        }function xn(t) {\n          switch (t = Y(t)) {case \"year\":\n              this.month(0);case \"quarter\":case \"month\":\n              this.date(1);case \"week\":case \"isoWeek\":case \"day\":case \"date\":\n              this.hours(0);case \"hour\":\n              this.minutes(0);case \"minute\":\n              this.seconds(0);case \"second\":\n              this.milliseconds(0);}return \"week\" === t && this.weekday(0), \"isoWeek\" === t && this.isoWeekday(1), \"quarter\" === t && this.month(3 * Math.floor(this.month() / 3)), this;\n        }function _n(t) {\n          return t = Y(t), void 0 === t || \"millisecond\" === t ? this : (\"date\" === t && (t = \"day\"), this.startOf(t).add(1, \"isoWeek\" === t ? \"week\" : t).subtract(1, \"ms\"));\n        }function kn() {\n          return this._d.valueOf() - 6e4 * (this._offset || 0);\n        }function wn() {\n          return Math.floor(this.valueOf() / 1e3);\n        }function Mn() {\n          return new Date(this.valueOf());\n        }function Sn() {\n          var t = this;return [t.year(), t.month(), t.date(), t.hour(), t.minute(), t.second(), t.millisecond()];\n        }function Dn() {\n          var t = this;return { years: t.year(), months: t.month(), date: t.date(), hours: t.hours(), minutes: t.minutes(), seconds: t.seconds(), milliseconds: t.milliseconds() };\n        }function Cn() {\n          return this.isValid() ? this.toISOString() : null;\n        }function Pn() {\n          return m(this);\n        }function Tn() {\n          return h({}, p(this));\n        }function In() {\n          return p(this).overflow;\n        }function An() {\n          return { input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict };\n        }function Fn(t, e) {\n          Z(0, [t, t.length], 0, e);\n        }function On(t) {\n          return Wn.call(this, t, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n        }function Rn(t) {\n          return Wn.call(this, t, this.isoWeek(), this.isoWeekday(), 1, 4);\n        }function Ln() {\n          return St(this.year(), 1, 4);\n        }function Vn() {\n          var t = this.localeData()._week;return St(this.year(), t.dow, t.doy);\n        }function Wn(t, e, n, i, a) {\n          var r;return null == t ? Mt(this, i, a).year : (r = St(t, i, a), e > r && (e = r), Yn.call(this, t, e, n, i, a));\n        }function Yn(t, e, n, i, a) {\n          var r = wt(t, e, n, i, a),\n              o = _t(r.year, 0, r.dayOfYear);return this.year(o.getUTCFullYear()), this.month(o.getUTCMonth()), this.date(o.getUTCDate()), this;\n        }function zn(t) {\n          return null == t ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (t - 1) + this.month() % 3);\n        }function Nn(t) {\n          var e = Math.round((this.clone().startOf(\"day\") - this.clone().startOf(\"year\")) / 864e5) + 1;return null == t ? e : this.add(t - e, \"d\");\n        }function Bn(t, e) {\n          e[fa] = k(1e3 * (\"0.\" + t));\n        }function En() {\n          return this._isUTC ? \"UTC\" : \"\";\n        }function Hn() {\n          return this._isUTC ? \"Coordinated Universal Time\" : \"\";\n        }function jn(t) {\n          return _e(1e3 * t);\n        }function Un() {\n          return _e.apply(null, arguments).parseZone();\n        }function Gn(t) {\n          return t;\n        }function qn(t, e, n, i) {\n          var a = ie(),\n              r = f().set(i, e);return a[n](r, t);\n        }function Zn(t, e, n) {\n          if (l(t) && (e = t, t = void 0), t = t || \"\", null != e) return qn(t, e, n, \"month\");var i,\n              a = [];for (i = 0; i < 12; i++) {\n            a[i] = qn(t, i, n, \"month\");\n          }return a;\n        }function Xn(t, e, n, i) {\n          \"boolean\" == typeof t ? (l(e) && (n = e, e = void 0), e = e || \"\") : (e = t, n = e, t = !1, l(e) && (n = e, e = void 0), e = e || \"\");var a = ie(),\n              r = t ? a._week.dow : 0;if (null != n) return qn(e, (n + r) % 7, i, \"day\");var o,\n              s = [];for (o = 0; o < 7; o++) {\n            s[o] = qn(e, (o + r) % 7, i, \"day\");\n          }return s;\n        }function Jn(t, e) {\n          return Zn(t, e, \"months\");\n        }function Kn(t, e) {\n          return Zn(t, e, \"monthsShort\");\n        }function Qn(t, e, n) {\n          return Xn(t, e, n, \"weekdays\");\n        }function $n(t, e, n) {\n          return Xn(t, e, n, \"weekdaysShort\");\n        }function ti(t, e, n) {\n          return Xn(t, e, n, \"weekdaysMin\");\n        }function ei() {\n          var t = this._data;return this._milliseconds = or(this._milliseconds), this._days = or(this._days), this._months = or(this._months), t.milliseconds = or(t.milliseconds), t.seconds = or(t.seconds), t.minutes = or(t.minutes), t.hours = or(t.hours), t.months = or(t.months), t.years = or(t.years), this;\n        }function ni(t, e, n, i) {\n          var a = Ge(e, n);return t._milliseconds += i * a._milliseconds, t._days += i * a._days, t._months += i * a._months, t._bubble();\n        }function ii(t, e) {\n          return ni(this, t, e, 1);\n        }function ai(t, e) {\n          return ni(this, t, e, -1);\n        }function ri(t) {\n          return t < 0 ? Math.floor(t) : Math.ceil(t);\n        }function oi() {\n          var t,\n              e,\n              n,\n              i,\n              a,\n              r = this._milliseconds,\n              o = this._days,\n              s = this._months,\n              l = this._data;return r >= 0 && o >= 0 && s >= 0 || r <= 0 && o <= 0 && s <= 0 || (r += 864e5 * ri(li(s) + o), o = 0, s = 0), l.milliseconds = r % 1e3, t = _(r / 1e3), l.seconds = t % 60, e = _(t / 60), l.minutes = e % 60, n = _(e / 60), l.hours = n % 24, o += _(n / 24), a = _(si(o)), s += a, o -= ri(li(a)), i = _(s / 12), s %= 12, l.days = o, l.months = s, l.years = i, this;\n        }function si(t) {\n          return 4800 * t / 146097;\n        }function li(t) {\n          return 146097 * t / 4800;\n        }function ui(t) {\n          if (!this.isValid()) return NaN;var e,\n              n,\n              i = this._milliseconds;if (t = Y(t), \"month\" === t || \"year\" === t) return e = this._days + i / 864e5, n = this._months + si(e), \"month\" === t ? n : n / 12;switch (e = this._days + Math.round(li(this._months)), t) {case \"week\":\n              return e / 7 + i / 6048e5;case \"day\":\n              return e + i / 864e5;case \"hour\":\n              return 24 * e + i / 36e5;case \"minute\":\n              return 1440 * e + i / 6e4;case \"second\":\n              return 86400 * e + i / 1e3;case \"millisecond\":\n              return Math.floor(864e5 * e) + i;default:\n              throw new Error(\"Unknown unit \" + t);}\n        }function di() {\n          return this.isValid() ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * k(this._months / 12) : NaN;\n        }function ci(t) {\n          return function () {\n            return this.as(t);\n          };\n        }function hi(t) {\n          return t = Y(t), this.isValid() ? this[t + \"s\"]() : NaN;\n        }function fi(t) {\n          return function () {\n            return this.isValid() ? this._data[t] : NaN;\n          };\n        }function gi() {\n          return _(this.days() / 7);\n        }function pi(t, e, n, i, a) {\n          return a.relativeTime(e || 1, !!n, t, i);\n        }function mi(t, e, n) {\n          var i = Ge(t).abs(),\n              a = kr(i.as(\"s\")),\n              r = kr(i.as(\"m\")),\n              o = kr(i.as(\"h\")),\n              s = kr(i.as(\"d\")),\n              l = kr(i.as(\"M\")),\n              u = kr(i.as(\"y\")),\n              d = a <= wr.ss && [\"s\", a] || a < wr.s && [\"ss\", a] || r <= 1 && [\"m\"] || r < wr.m && [\"mm\", r] || o <= 1 && [\"h\"] || o < wr.h && [\"hh\", o] || s <= 1 && [\"d\"] || s < wr.d && [\"dd\", s] || l <= 1 && [\"M\"] || l < wr.M && [\"MM\", l] || u <= 1 && [\"y\"] || [\"yy\", u];return d[2] = e, d[3] = +t > 0, d[4] = n, pi.apply(null, d);\n        }function vi(t) {\n          return void 0 === t ? kr : \"function\" == typeof t && (kr = t, !0);\n        }function yi(t, e) {\n          return void 0 !== wr[t] && (void 0 === e ? wr[t] : (wr[t] = e, \"s\" === t && (wr.ss = e - 1), !0));\n        }function bi(t) {\n          if (!this.isValid()) return this.localeData().invalidDate();var e = this.localeData(),\n              n = mi(this, !t, e);return t && (n = e.pastFuture(+this, n)), e.postformat(n);\n        }function xi() {\n          if (!this.isValid()) return this.localeData().invalidDate();var t,\n              e,\n              n,\n              i = Mr(this._milliseconds) / 1e3,\n              a = Mr(this._days),\n              r = Mr(this._months);t = _(i / 60), e = _(t / 60), i %= 60, t %= 60, n = _(r / 12), r %= 12;var o = n,\n              s = r,\n              l = a,\n              u = e,\n              d = t,\n              c = i,\n              h = this.asSeconds();return h ? (h < 0 ? \"-\" : \"\") + \"P\" + (o ? o + \"Y\" : \"\") + (s ? s + \"M\" : \"\") + (l ? l + \"D\" : \"\") + (u || d || c ? \"T\" : \"\") + (u ? u + \"H\" : \"\") + (d ? d + \"M\" : \"\") + (c ? c + \"S\" : \"\") : \"P0D\";\n        }var _i, ki;ki = Array.prototype.some ? Array.prototype.some : function (t) {\n          for (var e = Object(this), n = e.length >>> 0, i = 0; i < n; i++) {\n            if (i in e && t.call(this, e[i], i, e)) return !0;\n          }return !1;\n        };var wi = ki,\n            Mi = t.momentProperties = [],\n            Si = !1,\n            Di = {};t.suppressDeprecationWarnings = !1, t.deprecationHandler = null;var Ci;Ci = Object.keys ? Object.keys : function (t) {\n          var e,\n              n = [];for (e in t) {\n            c(t, e) && n.push(e);\n          }return n;\n        };var Pi,\n            Ti = Ci,\n            Ii = { sameDay: \"[Today at] LT\", nextDay: \"[Tomorrow at] LT\", nextWeek: \"dddd [at] LT\", lastDay: \"[Yesterday at] LT\", lastWeek: \"[Last] dddd [at] LT\", sameElse: \"L\" },\n            Ai = { LTS: \"h:mm:ss A\", LT: \"h:mm A\", L: \"MM/DD/YYYY\", LL: \"MMMM D, YYYY\", LLL: \"MMMM D, YYYY h:mm A\", LLLL: \"dddd, MMMM D, YYYY h:mm A\" },\n            Fi = \"Invalid date\",\n            Oi = \"%d\",\n            Ri = /\\d{1,2}/,\n            Li = { future: \"in %s\", past: \"%s ago\", s: \"a few seconds\", ss: \"%d seconds\", m: \"a minute\", mm: \"%d minutes\", h: \"an hour\", hh: \"%d hours\", d: \"a day\", dd: \"%d days\", M: \"a month\", MM: \"%d months\", y: \"a year\", yy: \"%d years\" },\n            Vi = {},\n            Wi = {},\n            Yi = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n            zi = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n            Ni = {},\n            Bi = {},\n            Ei = /\\d/,\n            Hi = /\\d\\d/,\n            ji = /\\d{3}/,\n            Ui = /\\d{4}/,\n            Gi = /[+-]?\\d{6}/,\n            qi = /\\d\\d?/,\n            Zi = /\\d\\d\\d\\d?/,\n            Xi = /\\d\\d\\d\\d\\d\\d?/,\n            Ji = /\\d{1,3}/,\n            Ki = /\\d{1,4}/,\n            Qi = /[+-]?\\d{1,6}/,\n            $i = /\\d+/,\n            ta = /[+-]?\\d+/,\n            ea = /Z|[+-]\\d\\d:?\\d\\d/gi,\n            na = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi,\n            ia = /[+-]?\\d+(\\.\\d{1,3})?/,\n            aa = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,\n            ra = {},\n            oa = {},\n            sa = 0,\n            la = 1,\n            ua = 2,\n            da = 3,\n            ca = 4,\n            ha = 5,\n            fa = 6,\n            ga = 7,\n            pa = 8;Pi = Array.prototype.indexOf ? Array.prototype.indexOf : function (t) {\n          var e;for (e = 0; e < this.length; ++e) {\n            if (this[e] === t) return e;\n          }return -1;\n        };var ma = Pi;Z(\"M\", [\"MM\", 2], \"Mo\", function () {\n          return this.month() + 1;\n        }), Z(\"MMM\", 0, 0, function (t) {\n          return this.localeData().monthsShort(this, t);\n        }), Z(\"MMMM\", 0, 0, function (t) {\n          return this.localeData().months(this, t);\n        }), W(\"month\", \"M\"), N(\"month\", 8), $(\"M\", qi), $(\"MM\", qi, Hi), $(\"MMM\", function (t, e) {\n          return e.monthsShortRegex(t);\n        }), $(\"MMMM\", function (t, e) {\n          return e.monthsRegex(t);\n        }), it([\"M\", \"MM\"], function (t, e) {\n          e[la] = k(t) - 1;\n        }), it([\"MMM\", \"MMMM\"], function (t, e, n, i) {\n          var a = n._locale.monthsParse(t, i, n._strict);null != a ? e[la] = a : p(n).invalidMonth = t;\n        });var va = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n            ya = \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),\n            ba = \"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),\n            xa = aa,\n            _a = aa;Z(\"Y\", 0, 0, function () {\n          var t = this.year();return t <= 9999 ? \"\" + t : \"+\" + t;\n        }), Z(0, [\"YY\", 2], 0, function () {\n          return this.year() % 100;\n        }), Z(0, [\"YYYY\", 4], 0, \"year\"), Z(0, [\"YYYYY\", 5], 0, \"year\"), Z(0, [\"YYYYYY\", 6, !0], 0, \"year\"), W(\"year\", \"y\"), N(\"year\", 1), $(\"Y\", ta), $(\"YY\", qi, Hi), $(\"YYYY\", Ki, Ui), $(\"YYYYY\", Qi, Gi), $(\"YYYYYY\", Qi, Gi), it([\"YYYYY\", \"YYYYYY\"], sa), it(\"YYYY\", function (e, n) {\n          n[sa] = 2 === e.length ? t.parseTwoDigitYear(e) : k(e);\n        }), it(\"YY\", function (e, n) {\n          n[sa] = t.parseTwoDigitYear(e);\n        }), it(\"Y\", function (t, e) {\n          e[sa] = parseInt(t, 10);\n        }), t.parseTwoDigitYear = function (t) {\n          return k(t) + (k(t) > 68 ? 1900 : 2e3);\n        };var ka = E(\"FullYear\", !0);Z(\"w\", [\"ww\", 2], \"wo\", \"week\"), Z(\"W\", [\"WW\", 2], \"Wo\", \"isoWeek\"), W(\"week\", \"w\"), W(\"isoWeek\", \"W\"), N(\"week\", 5), N(\"isoWeek\", 5), $(\"w\", qi), $(\"ww\", qi, Hi), $(\"W\", qi), $(\"WW\", qi, Hi), at([\"w\", \"ww\", \"W\", \"WW\"], function (t, e, n, i) {\n          e[i.substr(0, 1)] = k(t);\n        });var wa = { dow: 0, doy: 6 };Z(\"d\", 0, \"do\", \"day\"), Z(\"dd\", 0, 0, function (t) {\n          return this.localeData().weekdaysMin(this, t);\n        }), Z(\"ddd\", 0, 0, function (t) {\n          return this.localeData().weekdaysShort(this, t);\n        }), Z(\"dddd\", 0, 0, function (t) {\n          return this.localeData().weekdays(this, t);\n        }), Z(\"e\", 0, 0, \"weekday\"), Z(\"E\", 0, 0, \"isoWeekday\"), W(\"day\", \"d\"), W(\"weekday\", \"e\"), W(\"isoWeekday\", \"E\"), N(\"day\", 11), N(\"weekday\", 11), N(\"isoWeekday\", 11), $(\"d\", qi), $(\"e\", qi), $(\"E\", qi), $(\"dd\", function (t, e) {\n          return e.weekdaysMinRegex(t);\n        }), $(\"ddd\", function (t, e) {\n          return e.weekdaysShortRegex(t);\n        }), $(\"dddd\", function (t, e) {\n          return e.weekdaysRegex(t);\n        }), at([\"dd\", \"ddd\", \"dddd\"], function (t, e, n, i) {\n          var a = n._locale.weekdaysParse(t, i, n._strict);null != a ? e.d = a : p(n).invalidWeekday = t;\n        }), at([\"d\", \"e\", \"E\"], function (t, e, n, i) {\n          e[i] = k(t);\n        });var Ma = \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),\n            Sa = \"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),\n            Da = \"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),\n            Ca = aa,\n            Pa = aa,\n            Ta = aa;Z(\"H\", [\"HH\", 2], 0, \"hour\"), Z(\"h\", [\"hh\", 2], 0, Ut), Z(\"k\", [\"kk\", 2], 0, Gt), Z(\"hmm\", 0, 0, function () {\n          return \"\" + Ut.apply(this) + q(this.minutes(), 2);\n        }), Z(\"hmmss\", 0, 0, function () {\n          return \"\" + Ut.apply(this) + q(this.minutes(), 2) + q(this.seconds(), 2);\n        }), Z(\"Hmm\", 0, 0, function () {\n          return \"\" + this.hours() + q(this.minutes(), 2);\n        }), Z(\"Hmmss\", 0, 0, function () {\n          return \"\" + this.hours() + q(this.minutes(), 2) + q(this.seconds(), 2);\n        }), qt(\"a\", !0), qt(\"A\", !1), W(\"hour\", \"h\"), N(\"hour\", 13), $(\"a\", Zt), $(\"A\", Zt), $(\"H\", qi), $(\"h\", qi), $(\"k\", qi), $(\"HH\", qi, Hi), $(\"hh\", qi, Hi), $(\"kk\", qi, Hi), $(\"hmm\", Zi), $(\"hmmss\", Xi), $(\"Hmm\", Zi), $(\"Hmmss\", Xi), it([\"H\", \"HH\"], da), it([\"k\", \"kk\"], function (t, e, n) {\n          var i = k(t);e[da] = 24 === i ? 0 : i;\n        }), it([\"a\", \"A\"], function (t, e, n) {\n          n._isPm = n._locale.isPM(t), n._meridiem = t;\n        }), it([\"h\", \"hh\"], function (t, e, n) {\n          e[da] = k(t), p(n).bigHour = !0;\n        }), it(\"hmm\", function (t, e, n) {\n          var i = t.length - 2;e[da] = k(t.substr(0, i)), e[ca] = k(t.substr(i)), p(n).bigHour = !0;\n        }), it(\"hmmss\", function (t, e, n) {\n          var i = t.length - 4,\n              a = t.length - 2;e[da] = k(t.substr(0, i)), e[ca] = k(t.substr(i, 2)), e[ha] = k(t.substr(a)), p(n).bigHour = !0;\n        }), it(\"Hmm\", function (t, e, n) {\n          var i = t.length - 2;e[da] = k(t.substr(0, i)), e[ca] = k(t.substr(i));\n        }), it(\"Hmmss\", function (t, e, n) {\n          var i = t.length - 4,\n              a = t.length - 2;e[da] = k(t.substr(0, i)), e[ca] = k(t.substr(i, 2)), e[ha] = k(t.substr(a));\n        });var Ia,\n            Aa = /[ap]\\.?m?\\.?/i,\n            Fa = E(\"Hours\", !0),\n            Oa = { calendar: Ii, longDateFormat: Ai, invalidDate: Fi, ordinal: Oi, dayOfMonthOrdinalParse: Ri, relativeTime: Li, months: ya, monthsShort: ba, week: wa, weekdays: Ma, weekdaysMin: Da, weekdaysShort: Sa, meridiemParse: Aa },\n            Ra = {},\n            La = {},\n            Va = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n            Wa = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n            Ya = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n            za = [[\"YYYYYY-MM-DD\", /[+-]\\d{6}-\\d\\d-\\d\\d/], [\"YYYY-MM-DD\", /\\d{4}-\\d\\d-\\d\\d/], [\"GGGG-[W]WW-E\", /\\d{4}-W\\d\\d-\\d/], [\"GGGG-[W]WW\", /\\d{4}-W\\d\\d/, !1], [\"YYYY-DDD\", /\\d{4}-\\d{3}/], [\"YYYY-MM\", /\\d{4}-\\d\\d/, !1], [\"YYYYYYMMDD\", /[+-]\\d{10}/], [\"YYYYMMDD\", /\\d{8}/], [\"GGGG[W]WWE\", /\\d{4}W\\d{3}/], [\"GGGG[W]WW\", /\\d{4}W\\d{2}/, !1], [\"YYYYDDD\", /\\d{7}/]],\n            Na = [[\"HH:mm:ss.SSSS\", /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], [\"HH:mm:ss,SSSS\", /\\d\\d:\\d\\d:\\d\\d,\\d+/], [\"HH:mm:ss\", /\\d\\d:\\d\\d:\\d\\d/], [\"HH:mm\", /\\d\\d:\\d\\d/], [\"HHmmss.SSSS\", /\\d\\d\\d\\d\\d\\d\\.\\d+/], [\"HHmmss,SSSS\", /\\d\\d\\d\\d\\d\\d,\\d+/], [\"HHmmss\", /\\d\\d\\d\\d\\d\\d/], [\"HHmm\", /\\d\\d\\d\\d/], [\"HH\", /\\d\\d/]],\n            Ba = /^\\/?Date\\((\\-?\\d+)/i,\n            Ea = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;t.createFromInputFallback = S(\"value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\", function (t) {\n          t._d = new Date(t._i + (t._useUTC ? \" UTC\" : \"\"));\n        }), t.ISO_8601 = function () {}, t.RFC_2822 = function () {};var Ha = S(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\", function () {\n          var t = _e.apply(null, arguments);return this.isValid() && t.isValid() ? t < this ? this : t : v();\n        }),\n            ja = S(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\", function () {\n          var t = _e.apply(null, arguments);return this.isValid() && t.isValid() ? t > this ? this : t : v();\n        }),\n            Ua = function Ua() {\n          return Date.now ? Date.now() : +new Date();\n        },\n            Ga = [\"year\", \"quarter\", \"month\", \"week\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"];Ae(\"Z\", \":\"), Ae(\"ZZ\", \"\"), $(\"Z\", na), $(\"ZZ\", na), it([\"Z\", \"ZZ\"], function (t, e, n) {\n          n._useUTC = !0, n._tzm = Fe(na, t);\n        });var qa = /([\\+\\-]|\\d\\d)/gi;t.updateOffset = function () {};var Za = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/,\n            Xa = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Ge.fn = Pe.prototype, Ge.invalid = Ce;var Ja = Je(1, \"add\"),\n            Ka = Je(-1, \"subtract\");t.defaultFormat = \"YYYY-MM-DDTHH:mm:ssZ\", t.defaultFormatUtc = \"YYYY-MM-DDTHH:mm:ss[Z]\";var Qa = S(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\", function (t) {\n          return void 0 === t ? this.localeData() : this.locale(t);\n        });Z(0, [\"gg\", 2], 0, function () {\n          return this.weekYear() % 100;\n        }), Z(0, [\"GG\", 2], 0, function () {\n          return this.isoWeekYear() % 100;\n        }), Fn(\"gggg\", \"weekYear\"), Fn(\"ggggg\", \"weekYear\"), Fn(\"GGGG\", \"isoWeekYear\"), Fn(\"GGGGG\", \"isoWeekYear\"), W(\"weekYear\", \"gg\"), W(\"isoWeekYear\", \"GG\"), N(\"weekYear\", 1), N(\"isoWeekYear\", 1), $(\"G\", ta), $(\"g\", ta), $(\"GG\", qi, Hi), $(\"gg\", qi, Hi), $(\"GGGG\", Ki, Ui), $(\"gggg\", Ki, Ui), $(\"GGGGG\", Qi, Gi), $(\"ggggg\", Qi, Gi), at([\"gggg\", \"ggggg\", \"GGGG\", \"GGGGG\"], function (t, e, n, i) {\n          e[i.substr(0, 2)] = k(t);\n        }), at([\"gg\", \"GG\"], function (e, n, i, a) {\n          n[a] = t.parseTwoDigitYear(e);\n        }), Z(\"Q\", 0, \"Qo\", \"quarter\"), W(\"quarter\", \"Q\"), N(\"quarter\", 7), $(\"Q\", Ei), it(\"Q\", function (t, e) {\n          e[la] = 3 * (k(t) - 1);\n        }), Z(\"D\", [\"DD\", 2], \"Do\", \"date\"), W(\"date\", \"D\"), N(\"date\", 9), $(\"D\", qi), $(\"DD\", qi, Hi), $(\"Do\", function (t, e) {\n          return t ? e._dayOfMonthOrdinalParse || e._ordinalParse : e._dayOfMonthOrdinalParseLenient;\n        }), it([\"D\", \"DD\"], ua), it(\"Do\", function (t, e) {\n          e[ua] = k(t.match(qi)[0], 10);\n        });var $a = E(\"Date\", !0);Z(\"DDD\", [\"DDDD\", 3], \"DDDo\", \"dayOfYear\"), W(\"dayOfYear\", \"DDD\"), N(\"dayOfYear\", 4), $(\"DDD\", Ji), $(\"DDDD\", ji), it([\"DDD\", \"DDDD\"], function (t, e, n) {\n          n._dayOfYear = k(t);\n        }), Z(\"m\", [\"mm\", 2], 0, \"minute\"), W(\"minute\", \"m\"), N(\"minute\", 14), $(\"m\", qi), $(\"mm\", qi, Hi), it([\"m\", \"mm\"], ca);var tr = E(\"Minutes\", !1);Z(\"s\", [\"ss\", 2], 0, \"second\"), W(\"second\", \"s\"), N(\"second\", 15), $(\"s\", qi), $(\"ss\", qi, Hi), it([\"s\", \"ss\"], ha);var er = E(\"Seconds\", !1);Z(\"S\", 0, 0, function () {\n          return ~~(this.millisecond() / 100);\n        }), Z(0, [\"SS\", 2], 0, function () {\n          return ~~(this.millisecond() / 10);\n        }), Z(0, [\"SSS\", 3], 0, \"millisecond\"), Z(0, [\"SSSS\", 4], 0, function () {\n          return 10 * this.millisecond();\n        }), Z(0, [\"SSSSS\", 5], 0, function () {\n          return 100 * this.millisecond();\n        }), Z(0, [\"SSSSSS\", 6], 0, function () {\n          return 1e3 * this.millisecond();\n        }), Z(0, [\"SSSSSSS\", 7], 0, function () {\n          return 1e4 * this.millisecond();\n        }), Z(0, [\"SSSSSSSS\", 8], 0, function () {\n          return 1e5 * this.millisecond();\n        }), Z(0, [\"SSSSSSSSS\", 9], 0, function () {\n          return 1e6 * this.millisecond();\n        }), W(\"millisecond\", \"ms\"), N(\"millisecond\", 16), $(\"S\", Ji, Ei), $(\"SS\", Ji, Hi), $(\"SSS\", Ji, ji);var nr;for (nr = \"SSSS\"; nr.length <= 9; nr += \"S\") {\n          $(nr, $i);\n        }for (nr = \"S\"; nr.length <= 9; nr += \"S\") {\n          it(nr, Bn);\n        }var ir = E(\"Milliseconds\", !1);Z(\"z\", 0, 0, \"zoneAbbr\"), Z(\"zz\", 0, 0, \"zoneName\");var ar = b.prototype;ar.add = Ja, ar.calendar = $e, ar.clone = tn, ar.diff = ln, ar.endOf = _n, ar.format = fn, ar.from = gn, ar.fromNow = pn, ar.to = mn, ar.toNow = vn, ar.get = U, ar.invalidAt = In, ar.isAfter = en, ar.isBefore = nn, ar.isBetween = an, ar.isSame = rn, ar.isSameOrAfter = on, ar.isSameOrBefore = sn, ar.isValid = Pn, ar.lang = Qa, ar.locale = yn, ar.localeData = bn, ar.max = ja, ar.min = Ha, ar.parsingFlags = Tn, ar.set = G, ar.startOf = xn, ar.subtract = Ka, ar.toArray = Sn, ar.toObject = Dn, ar.toDate = Mn, ar.toISOString = cn, ar.inspect = hn, ar.toJSON = Cn, ar.toString = dn, ar.unix = wn, ar.valueOf = kn, ar.creationData = An, ar.year = ka, ar.isLeapYear = bt, ar.weekYear = On, ar.isoWeekYear = Rn, ar.quarter = ar.quarters = zn, ar.month = ht, ar.daysInMonth = ft, ar.week = ar.weeks = Tt, ar.isoWeek = ar.isoWeeks = It, ar.weeksInYear = Vn, ar.isoWeeksInYear = Ln, ar.date = $a, ar.day = ar.days = Yt, ar.weekday = zt, ar.isoWeekday = Nt, ar.dayOfYear = Nn, ar.hour = ar.hours = Fa, ar.minute = ar.minutes = tr, ar.second = ar.seconds = er, ar.millisecond = ar.milliseconds = ir, ar.utcOffset = Le, ar.utc = We, ar.local = Ye, ar.parseZone = ze, ar.hasAlignedHourOffset = Ne, ar.isDST = Be, ar.isLocal = He, ar.isUtcOffset = je, ar.isUtc = Ue, ar.isUTC = Ue, ar.zoneAbbr = En, ar.zoneName = Hn, ar.dates = S(\"dates accessor is deprecated. Use date instead.\", $a), ar.months = S(\"months accessor is deprecated. Use month instead\", ht), ar.years = S(\"years accessor is deprecated. Use year instead\", ka), ar.zone = S(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\", Ve), ar.isDSTShifted = S(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\", Ee);var rr = I.prototype;rr.calendar = A, rr.longDateFormat = F, rr.invalidDate = O, rr.ordinal = R, rr.preparse = Gn, rr.postformat = Gn, rr.relativeTime = L, rr.pastFuture = V, rr.set = P, rr.months = st, rr.monthsShort = lt, rr.monthsParse = dt, rr.monthsRegex = pt, rr.monthsShortRegex = gt, rr.week = Dt, rr.firstDayOfYear = Pt, rr.firstDayOfWeek = Ct, rr.weekdays = Ot, rr.weekdaysMin = Lt, rr.weekdaysShort = Rt, rr.weekdaysParse = Wt, rr.weekdaysRegex = Bt, rr.weekdaysShortRegex = Et, rr.weekdaysMinRegex = Ht, rr.isPM = Xt, rr.meridiem = Jt, te(\"en\", { dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/, ordinal: function ordinal(t) {\n            var e = t % 10,\n                n = 1 === k(t % 100 / 10) ? \"th\" : 1 === e ? \"st\" : 2 === e ? \"nd\" : 3 === e ? \"rd\" : \"th\";return t + n;\n          } }), t.lang = S(\"moment.lang is deprecated. Use moment.locale instead.\", te), t.langData = S(\"moment.langData is deprecated. Use moment.localeData instead.\", ie);var or = Math.abs,\n            sr = ci(\"ms\"),\n            lr = ci(\"s\"),\n            ur = ci(\"m\"),\n            dr = ci(\"h\"),\n            cr = ci(\"d\"),\n            hr = ci(\"w\"),\n            fr = ci(\"M\"),\n            gr = ci(\"y\"),\n            pr = fi(\"milliseconds\"),\n            mr = fi(\"seconds\"),\n            vr = fi(\"minutes\"),\n            yr = fi(\"hours\"),\n            br = fi(\"days\"),\n            xr = fi(\"months\"),\n            _r = fi(\"years\"),\n            kr = Math.round,\n            wr = { ss: 44, s: 45, m: 45, h: 22, d: 26, M: 11 },\n            Mr = Math.abs,\n            Sr = Pe.prototype;return Sr.isValid = De, Sr.abs = ei, Sr.add = ii, Sr.subtract = ai, Sr.as = ui, Sr.asMilliseconds = sr, Sr.asSeconds = lr, Sr.asMinutes = ur, Sr.asHours = dr, Sr.asDays = cr, Sr.asWeeks = hr, Sr.asMonths = fr, Sr.asYears = gr, Sr.valueOf = di, Sr._bubble = oi, Sr.get = hi, Sr.milliseconds = pr, Sr.seconds = mr, Sr.minutes = vr, Sr.hours = yr, Sr.days = br, Sr.weeks = gi, Sr.months = xr, Sr.years = _r, Sr.humanize = bi, Sr.toISOString = xi, Sr.toString = xi, Sr.toJSON = xi, Sr.locale = yn, Sr.localeData = bn, Sr.toIsoString = S(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\", xi), Sr.lang = Qa, Z(\"X\", 0, 0, \"unix\"), Z(\"x\", 0, 0, \"valueOf\"), $(\"x\", ta), $(\"X\", ia), it(\"X\", function (t, e, n) {\n          n._d = new Date(1e3 * parseFloat(t, 10));\n        }), it(\"x\", function (t, e, n) {\n          n._d = new Date(k(t));\n        }), t.version = \"2.18.1\", i(_e), t.fn = ar, t.min = we, t.max = Me, t.now = Ua, t.utc = f, t.unix = jn, t.months = Jn, t.isDate = u, t.locale = te, t.invalid = v, t.duration = Ge, t.isMoment = x, t.weekdays = Qn, t.parseZone = Un, t.localeData = ie, t.isDuration = Te, t.monthsShort = Kn, t.weekdaysMin = ti, t.defineLocale = ee, t.updateLocale = ne, t.locales = ae, t.weekdaysShort = $n, t.normalizeUnits = Y, t.relativeTimeRounding = vi, t.relativeTimeThreshold = yi, t.calendarFormat = Qe, t.prototype = ar, t;\n      });\n    }, {}], 7: [function (t, e, n) {\n      var i = t(28)();t(26)(i), t(40)(i), t(22)(i), t(25)(i), t(30)(i), t(21)(i), t(23)(i), t(24)(i), t(29)(i), t(32)(i), t(33)(i), t(31)(i), t(27)(i), t(34)(i), t(35)(i), t(36)(i), t(37)(i), t(38)(i), t(46)(i), t(44)(i), t(45)(i), t(47)(i), t(48)(i), t(49)(i), t(15)(i), t(16)(i), t(17)(i), t(18)(i), t(19)(i), t(20)(i), t(8)(i), t(9)(i), t(10)(i), t(11)(i), t(12)(i), t(13)(i), t(14)(i);var a = [];a.push(t(41)(i), t(42)(i), t(43)(i)), i.plugins.register(a), e.exports = i, \"undefined\" != typeof window && (window.Chart = i);\n    }, { 10: 10, 11: 11, 12: 12, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18, 19: 19, 20: 20, 21: 21, 22: 22, 23: 23, 24: 24, 25: 25, 26: 26, 27: 27, 28: 28, 29: 29, 30: 30, 31: 31, 32: 32, 33: 33, 34: 34, 35: 35, 36: 36, 37: 37, 38: 38, 40: 40, 41: 41, 42: 42, 43: 43, 44: 44, 45: 45, 46: 46, 47: 47, 48: 48, 49: 49, 8: 8, 9: 9 }], 8: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        t.Bar = function (e, n) {\n          return n.type = \"bar\", new t(e, n);\n        };\n      };\n    }, {}], 9: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        t.Bubble = function (e, n) {\n          return n.type = \"bubble\", new t(e, n);\n        };\n      };\n    }, {}], 10: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        t.Doughnut = function (e, n) {\n          return n.type = \"doughnut\", new t(e, n);\n        };\n      };\n    }, {}], 11: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        t.Line = function (e, n) {\n          return n.type = \"line\", new t(e, n);\n        };\n      };\n    }, {}], 12: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        t.PolarArea = function (e, n) {\n          return n.type = \"polarArea\", new t(e, n);\n        };\n      };\n    }, {}], 13: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        t.Radar = function (e, n) {\n          return n.type = \"radar\", new t(e, n);\n        };\n      };\n    }, {}], 14: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = { hover: { mode: \"single\" }, scales: { xAxes: [{ type: \"linear\", position: \"bottom\", id: \"x-axis-1\" }], yAxes: [{ type: \"linear\", position: \"left\", id: \"y-axis-1\" }] }, tooltips: { callbacks: { title: function title() {\n                return \"\";\n              }, label: function label(t) {\n                return \"(\" + t.xLabel + \", \" + t.yLabel + \")\";\n              } } } };t.defaults.scatter = e, t.controllers.scatter = t.controllers.line, t.Scatter = function (e, n) {\n          return n.type = \"scatter\", new t(e, n);\n        };\n      };\n    }, {}], 15: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers;t.defaults.bar = { hover: { mode: \"label\" }, scales: { xAxes: [{ type: \"category\", categoryPercentage: .8, barPercentage: .9, gridLines: { offsetGridLines: !0 } }], yAxes: [{ type: \"linear\" }] } }, t.controllers.bar = t.DatasetController.extend({ dataElementType: t.elements.Rectangle, initialize: function initialize() {\n            var e,\n                n = this;t.DatasetController.prototype.initialize.apply(n, arguments), e = n.getMeta(), e.stack = n.getDataset().stack, e.bar = !0;\n          }, update: function update(t) {\n            var e,\n                n,\n                i = this,\n                a = i.getMeta().data;for (i._ruler = i.getRuler(), e = 0, n = a.length; e < n; ++e) {\n              i.updateElement(a[e], e, t);\n            }\n          }, updateElement: function updateElement(t, n, i) {\n            var a = this,\n                r = a.chart,\n                o = a.getMeta(),\n                s = a.getDataset(),\n                l = t.custom || {},\n                u = r.options.elements.rectangle;t._xScale = a.getScaleForId(o.xAxisID), t._yScale = a.getScaleForId(o.yAxisID), t._datasetIndex = a.index, t._index = n, t._model = { datasetLabel: s.label, label: r.data.labels[n], borderSkipped: l.borderSkipped ? l.borderSkipped : u.borderSkipped, backgroundColor: l.backgroundColor ? l.backgroundColor : e.getValueAtIndexOrDefault(s.backgroundColor, n, u.backgroundColor), borderColor: l.borderColor ? l.borderColor : e.getValueAtIndexOrDefault(s.borderColor, n, u.borderColor), borderWidth: l.borderWidth ? l.borderWidth : e.getValueAtIndexOrDefault(s.borderWidth, n, u.borderWidth) }, a.updateElementGeometry(t, n, i), t.pivot();\n          }, updateElementGeometry: function updateElementGeometry(t, e, n) {\n            var i = this,\n                a = t._model,\n                r = i.getValueScale(),\n                o = r.getBasePixel(),\n                s = r.isHorizontal(),\n                l = i._ruler || i.getRuler(),\n                u = i.calculateBarValuePixels(i.index, e),\n                d = i.calculateBarIndexPixels(i.index, e, l);a.horizontal = s, a.base = n ? o : u.base, a.x = s ? n ? o : u.head : d.center, a.y = s ? d.center : n ? o : u.head, a.height = s ? d.size : void 0, a.width = s ? void 0 : d.size;\n          }, getValueScaleId: function getValueScaleId() {\n            return this.getMeta().yAxisID;\n          }, getIndexScaleId: function getIndexScaleId() {\n            return this.getMeta().xAxisID;\n          }, getValueScale: function getValueScale() {\n            return this.getScaleForId(this.getValueScaleId());\n          }, getIndexScale: function getIndexScale() {\n            return this.getScaleForId(this.getIndexScaleId());\n          }, getStackCount: function getStackCount(t) {\n            var e,\n                n,\n                i = this,\n                a = i.chart,\n                r = i.getIndexScale(),\n                o = r.options.stacked,\n                s = void 0 === t ? a.data.datasets.length : t + 1,\n                l = [];for (e = 0; e < s; ++e) {\n              n = a.getDatasetMeta(e), n.bar && a.isDatasetVisible(e) && (o === !1 || o === !0 && l.indexOf(n.stack) === -1 || void 0 === o && (void 0 === n.stack || l.indexOf(n.stack) === -1)) && l.push(n.stack);\n            }return l.length;\n          }, getStackIndex: function getStackIndex(t) {\n            return this.getStackCount(t) - 1;\n          }, getRuler: function getRuler() {\n            var t = this,\n                n = t.getIndexScale(),\n                i = n.options,\n                a = t.getStackCount(),\n                r = n.isHorizontal() ? n.width : n.height,\n                o = r / n.ticks.length,\n                s = o * i.categoryPercentage,\n                l = s / a,\n                u = l * i.barPercentage;return u = Math.min(e.getValueOrDefault(i.barThickness, u), e.getValueOrDefault(i.maxBarThickness, 1 / 0)), { stackCount: a, tickSize: o, categorySize: s, categorySpacing: o - s, fullBarSize: l, barSize: u, barSpacing: l - u, scale: n };\n          }, calculateBarValuePixels: function calculateBarValuePixels(t, e) {\n            var n,\n                i,\n                a,\n                r,\n                o,\n                s,\n                l = this,\n                u = l.chart,\n                d = l.getMeta(),\n                c = l.getValueScale(),\n                h = u.data.datasets,\n                f = Number(h[t].data[e]),\n                g = c.options.stacked,\n                p = d.stack,\n                m = 0;if (g || void 0 === g && void 0 !== p) for (n = 0; n < t; ++n) {\n              i = u.getDatasetMeta(n), i.bar && i.stack === p && i.controller.getValueScaleId() === c.id && u.isDatasetVisible(n) && (a = Number(h[n].data[e]), (f < 0 && a < 0 || f >= 0 && a > 0) && (m += a));\n            }return r = c.getPixelForValue(m), o = c.getPixelForValue(m + f), s = (o - r) / 2, { size: s, base: r, head: o, center: o + s / 2 };\n          }, calculateBarIndexPixels: function calculateBarIndexPixels(t, e, n) {\n            var i = this,\n                a = n.scale,\n                r = i.chart.isCombo,\n                o = i.getStackIndex(t),\n                s = a.getPixelForValue(null, e, t, r),\n                l = n.barSize;return s -= r ? n.tickSize / 2 : 0, s += n.fullBarSize * o, s += n.categorySpacing / 2, s += n.barSpacing / 2, { size: l, base: s, head: s + l, center: s + l / 2 };\n          }, draw: function draw() {\n            var t,\n                n = this,\n                i = n.chart,\n                a = n.getMeta().data,\n                r = n.getDataset(),\n                o = a.length,\n                s = 0;for (e.canvas.clipArea(i.ctx, i.chartArea); s < o; ++s) {\n              t = r.data[s], null === t || void 0 === t || isNaN(t) || a[s].draw();\n            }e.canvas.unclipArea(i.ctx);\n          }, setHoverStyle: function setHoverStyle(t) {\n            var n = this.chart.data.datasets[t._datasetIndex],\n                i = t._index,\n                a = t.custom || {},\n                r = t._model;r.backgroundColor = a.hoverBackgroundColor ? a.hoverBackgroundColor : e.getValueAtIndexOrDefault(n.hoverBackgroundColor, i, e.getHoverColor(r.backgroundColor)), r.borderColor = a.hoverBorderColor ? a.hoverBorderColor : e.getValueAtIndexOrDefault(n.hoverBorderColor, i, e.getHoverColor(r.borderColor)), r.borderWidth = a.hoverBorderWidth ? a.hoverBorderWidth : e.getValueAtIndexOrDefault(n.hoverBorderWidth, i, r.borderWidth);\n          }, removeHoverStyle: function removeHoverStyle(t) {\n            var n = this.chart.data.datasets[t._datasetIndex],\n                i = t._index,\n                a = t.custom || {},\n                r = t._model,\n                o = this.chart.options.elements.rectangle;r.backgroundColor = a.backgroundColor ? a.backgroundColor : e.getValueAtIndexOrDefault(n.backgroundColor, i, o.backgroundColor), r.borderColor = a.borderColor ? a.borderColor : e.getValueAtIndexOrDefault(n.borderColor, i, o.borderColor), r.borderWidth = a.borderWidth ? a.borderWidth : e.getValueAtIndexOrDefault(n.borderWidth, i, o.borderWidth);\n          } }), t.defaults.horizontalBar = { hover: { mode: \"label\" }, scales: { xAxes: [{ type: \"linear\", position: \"bottom\" }], yAxes: [{ position: \"left\", type: \"category\", categoryPercentage: .8, barPercentage: .9, gridLines: { offsetGridLines: !0 } }] }, elements: { rectangle: { borderSkipped: \"left\" } }, tooltips: { callbacks: { title: function title(t, e) {\n                var n = \"\";return t.length > 0 && (t[0].yLabel ? n = t[0].yLabel : e.labels.length > 0 && t[0].index < e.labels.length && (n = e.labels[t[0].index])), n;\n              }, label: function label(t, e) {\n                var n = e.datasets[t.datasetIndex].label || \"\";return n + \": \" + t.xLabel;\n              } } } }, t.controllers.horizontalBar = t.controllers.bar.extend({ getValueScaleId: function getValueScaleId() {\n            return this.getMeta().xAxisID;\n          }, getIndexScaleId: function getIndexScaleId() {\n            return this.getMeta().yAxisID;\n          } });\n      };\n    }, {}], 16: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers;t.defaults.bubble = { hover: { mode: \"single\" }, scales: { xAxes: [{ type: \"linear\", position: \"bottom\", id: \"x-axis-0\" }], yAxes: [{ type: \"linear\", position: \"left\", id: \"y-axis-0\" }] }, tooltips: { callbacks: { title: function title() {\n                return \"\";\n              }, label: function label(t, e) {\n                var n = e.datasets[t.datasetIndex].label || \"\",\n                    i = e.datasets[t.datasetIndex].data[t.index];return n + \": (\" + t.xLabel + \", \" + t.yLabel + \", \" + i.r + \")\";\n              } } } }, t.controllers.bubble = t.DatasetController.extend({ dataElementType: t.elements.Point, update: function update(t) {\n            var n = this,\n                i = n.getMeta(),\n                a = i.data;e.each(a, function (e, i) {\n              n.updateElement(e, i, t);\n            });\n          }, updateElement: function updateElement(n, i, a) {\n            var r = this,\n                o = r.getMeta(),\n                s = r.getScaleForId(o.xAxisID),\n                l = r.getScaleForId(o.yAxisID),\n                u = n.custom || {},\n                d = r.getDataset(),\n                c = d.data[i],\n                h = r.chart.options.elements.point,\n                f = r.index;e.extend(n, { _xScale: s, _yScale: l, _datasetIndex: f, _index: i, _model: { x: a ? s.getPixelForDecimal(.5) : s.getPixelForValue(\"object\" == (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) ? c : NaN, i, f, r.chart.isCombo), y: a ? l.getBasePixel() : l.getPixelForValue(c, i, f), radius: a ? 0 : u.radius ? u.radius : r.getRadius(c), hitRadius: u.hitRadius ? u.hitRadius : e.getValueAtIndexOrDefault(d.hitRadius, i, h.hitRadius) } }), t.DatasetController.prototype.removeHoverStyle.call(r, n, h);var g = n._model;g.skip = u.skip ? u.skip : isNaN(g.x) || isNaN(g.y), n.pivot();\n          }, getRadius: function getRadius(t) {\n            return t.r || this.chart.options.elements.point.radius;\n          }, setHoverStyle: function setHoverStyle(n) {\n            var i = this;t.DatasetController.prototype.setHoverStyle.call(i, n);var a = i.chart.data.datasets[n._datasetIndex],\n                r = n._index,\n                o = n.custom || {},\n                s = n._model;s.radius = o.hoverRadius ? o.hoverRadius : e.getValueAtIndexOrDefault(a.hoverRadius, r, i.chart.options.elements.point.hoverRadius) + i.getRadius(a.data[r]);\n          }, removeHoverStyle: function removeHoverStyle(e) {\n            var n = this;t.DatasetController.prototype.removeHoverStyle.call(n, e, n.chart.options.elements.point);var i = n.chart.data.datasets[e._datasetIndex].data[e._index],\n                a = e.custom || {},\n                r = e._model;r.radius = a.radius ? a.radius : n.getRadius(i);\n          } });\n      };\n    }, {}], 17: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers,\n            n = t.defaults;n.doughnut = { animation: { animateRotate: !0, animateScale: !1 }, aspectRatio: 1, hover: { mode: \"single\" }, legendCallback: function legendCallback(t) {\n            var e = [];e.push('<ul class=\"' + t.id + '-legend\">');var n = t.data,\n                i = n.datasets,\n                a = n.labels;if (i.length) for (var r = 0; r < i[0].data.length; ++r) {\n              e.push('<li><span style=\"background-color:' + i[0].backgroundColor[r] + '\"></span>'), a[r] && e.push(a[r]), e.push(\"</li>\");\n            }return e.push(\"</ul>\"), e.join(\"\");\n          }, legend: { labels: { generateLabels: function generateLabels(t) {\n                var n = t.data;return n.labels.length && n.datasets.length ? n.labels.map(function (i, a) {\n                  var r = t.getDatasetMeta(0),\n                      o = n.datasets[0],\n                      s = r.data[a],\n                      l = s && s.custom || {},\n                      u = e.getValueAtIndexOrDefault,\n                      d = t.options.elements.arc,\n                      c = l.backgroundColor ? l.backgroundColor : u(o.backgroundColor, a, d.backgroundColor),\n                      h = l.borderColor ? l.borderColor : u(o.borderColor, a, d.borderColor),\n                      f = l.borderWidth ? l.borderWidth : u(o.borderWidth, a, d.borderWidth);return { text: i, fillStyle: c, strokeStyle: h, lineWidth: f, hidden: isNaN(o.data[a]) || r.data[a].hidden, index: a };\n                }) : [];\n              } }, onClick: function onClick(t, e) {\n              var n,\n                  i,\n                  a,\n                  r = e.index,\n                  o = this.chart;for (n = 0, i = (o.data.datasets || []).length; n < i; ++n) {\n                a = o.getDatasetMeta(n), a.data[r] && (a.data[r].hidden = !a.data[r].hidden);\n              }o.update();\n            } }, cutoutPercentage: 50, rotation: Math.PI * -.5, circumference: 2 * Math.PI, tooltips: { callbacks: { title: function title() {\n                return \"\";\n              }, label: function label(t, n) {\n                var i = n.labels[t.index],\n                    a = \": \" + n.datasets[t.datasetIndex].data[t.index];return e.isArray(i) ? (i = i.slice(), i[0] += a) : i += a, i;\n              } } } }, n.pie = e.clone(n.doughnut), e.extend(n.pie, { cutoutPercentage: 0 }), t.controllers.doughnut = t.controllers.pie = t.DatasetController.extend({ dataElementType: t.elements.Arc, linkScales: e.noop, getRingIndex: function getRingIndex(t) {\n            for (var e = 0, n = 0; n < t; ++n) {\n              this.chart.isDatasetVisible(n) && ++e;\n            }return e;\n          }, update: function update(t) {\n            var n = this,\n                i = n.chart,\n                a = i.chartArea,\n                r = i.options,\n                o = r.elements.arc,\n                s = a.right - a.left - o.borderWidth,\n                l = a.bottom - a.top - o.borderWidth,\n                u = Math.min(s, l),\n                d = { x: 0, y: 0 },\n                c = n.getMeta(),\n                h = r.cutoutPercentage,\n                f = r.circumference;if (f < 2 * Math.PI) {\n              var g = r.rotation % (2 * Math.PI);g += 2 * Math.PI * (g >= Math.PI ? -1 : g < -Math.PI ? 1 : 0);var p = g + f,\n                  m = { x: Math.cos(g), y: Math.sin(g) },\n                  v = { x: Math.cos(p), y: Math.sin(p) },\n                  y = g <= 0 && 0 <= p || g <= 2 * Math.PI && 2 * Math.PI <= p,\n                  b = g <= .5 * Math.PI && .5 * Math.PI <= p || g <= 2.5 * Math.PI && 2.5 * Math.PI <= p,\n                  x = g <= -Math.PI && -Math.PI <= p || g <= Math.PI && Math.PI <= p,\n                  _ = g <= .5 * -Math.PI && .5 * -Math.PI <= p || g <= 1.5 * Math.PI && 1.5 * Math.PI <= p,\n                  k = h / 100,\n                  w = { x: x ? -1 : Math.min(m.x * (m.x < 0 ? 1 : k), v.x * (v.x < 0 ? 1 : k)), y: _ ? -1 : Math.min(m.y * (m.y < 0 ? 1 : k), v.y * (v.y < 0 ? 1 : k)) },\n                  M = { x: y ? 1 : Math.max(m.x * (m.x > 0 ? 1 : k), v.x * (v.x > 0 ? 1 : k)), y: b ? 1 : Math.max(m.y * (m.y > 0 ? 1 : k), v.y * (v.y > 0 ? 1 : k)) },\n                  S = { width: .5 * (M.x - w.x), height: .5 * (M.y - w.y) };u = Math.min(s / S.width, l / S.height), d = { x: (M.x + w.x) * -.5, y: (M.y + w.y) * -.5 };\n            }i.borderWidth = n.getMaxBorderWidth(c.data), i.outerRadius = Math.max((u - i.borderWidth) / 2, 0), i.innerRadius = Math.max(h ? i.outerRadius / 100 * h : 0, 0), i.radiusLength = (i.outerRadius - i.innerRadius) / i.getVisibleDatasetCount(), i.offsetX = d.x * i.outerRadius, i.offsetY = d.y * i.outerRadius, c.total = n.calculateTotal(), n.outerRadius = i.outerRadius - i.radiusLength * n.getRingIndex(n.index), n.innerRadius = Math.max(n.outerRadius - i.radiusLength, 0), e.each(c.data, function (e, i) {\n              n.updateElement(e, i, t);\n            });\n          }, updateElement: function updateElement(t, n, i) {\n            var a = this,\n                r = a.chart,\n                o = r.chartArea,\n                s = r.options,\n                l = s.animation,\n                u = (o.left + o.right) / 2,\n                d = (o.top + o.bottom) / 2,\n                c = s.rotation,\n                h = s.rotation,\n                f = a.getDataset(),\n                g = i && l.animateRotate ? 0 : t.hidden ? 0 : a.calculateCircumference(f.data[n]) * (s.circumference / (2 * Math.PI)),\n                p = i && l.animateScale ? 0 : a.innerRadius,\n                m = i && l.animateScale ? 0 : a.outerRadius,\n                v = e.getValueAtIndexOrDefault;e.extend(t, { _datasetIndex: a.index, _index: n, _model: { x: u + r.offsetX, y: d + r.offsetY, startAngle: c, endAngle: h, circumference: g, outerRadius: m, innerRadius: p, label: v(f.label, n, r.data.labels[n]) } });var y = t._model;this.removeHoverStyle(t), i && l.animateRotate || (0 === n ? y.startAngle = s.rotation : y.startAngle = a.getMeta().data[n - 1]._model.endAngle, y.endAngle = y.startAngle + y.circumference), t.pivot();\n          }, removeHoverStyle: function removeHoverStyle(e) {\n            t.DatasetController.prototype.removeHoverStyle.call(this, e, this.chart.options.elements.arc);\n          }, calculateTotal: function calculateTotal() {\n            var t,\n                n = this.getDataset(),\n                i = this.getMeta(),\n                a = 0;return e.each(i.data, function (e, i) {\n              t = n.data[i], isNaN(t) || e.hidden || (a += Math.abs(t));\n            }), a;\n          }, calculateCircumference: function calculateCircumference(t) {\n            var e = this.getMeta().total;return e > 0 && !isNaN(t) ? 2 * Math.PI * (t / e) : 0;\n          }, getMaxBorderWidth: function getMaxBorderWidth(t) {\n            for (var e, n, i = 0, a = this.index, r = t.length, o = 0; o < r; o++) {\n              e = t[o]._model ? t[o]._model.borderWidth : 0, n = t[o]._chart ? t[o]._chart.config.data.datasets[a].hoverBorderWidth : 0, i = e > i ? e : i, i = n > i ? n : i;\n            }return i;\n          } });\n      };\n    }, {}], 18: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t, e) {\n          return n.getValueOrDefault(t.showLine, e.showLines);\n        }var n = t.helpers;t.defaults.line = { showLines: !0, spanGaps: !1, hover: { mode: \"label\" }, scales: { xAxes: [{ type: \"category\", id: \"x-axis-0\" }], yAxes: [{ type: \"linear\", id: \"y-axis-0\" }] } }, t.controllers.line = t.DatasetController.extend({ datasetElementType: t.elements.Line, dataElementType: t.elements.Point, update: function update(t) {\n            var i,\n                a,\n                r,\n                o = this,\n                s = o.getMeta(),\n                l = s.dataset,\n                u = s.data || [],\n                d = o.chart.options,\n                c = d.elements.line,\n                h = o.getScaleForId(s.yAxisID),\n                f = o.getDataset(),\n                g = e(f, d);for (g && (r = l.custom || {}, void 0 !== f.tension && void 0 === f.lineTension && (f.lineTension = f.tension), l._scale = h, l._datasetIndex = o.index, l._children = u, l._model = { spanGaps: f.spanGaps ? f.spanGaps : d.spanGaps, tension: r.tension ? r.tension : n.getValueOrDefault(f.lineTension, c.tension), backgroundColor: r.backgroundColor ? r.backgroundColor : f.backgroundColor || c.backgroundColor, borderWidth: r.borderWidth ? r.borderWidth : f.borderWidth || c.borderWidth, borderColor: r.borderColor ? r.borderColor : f.borderColor || c.borderColor, borderCapStyle: r.borderCapStyle ? r.borderCapStyle : f.borderCapStyle || c.borderCapStyle, borderDash: r.borderDash ? r.borderDash : f.borderDash || c.borderDash, borderDashOffset: r.borderDashOffset ? r.borderDashOffset : f.borderDashOffset || c.borderDashOffset, borderJoinStyle: r.borderJoinStyle ? r.borderJoinStyle : f.borderJoinStyle || c.borderJoinStyle, fill: r.fill ? r.fill : void 0 !== f.fill ? f.fill : c.fill, steppedLine: r.steppedLine ? r.steppedLine : n.getValueOrDefault(f.steppedLine, c.stepped), cubicInterpolationMode: r.cubicInterpolationMode ? r.cubicInterpolationMode : n.getValueOrDefault(f.cubicInterpolationMode, c.cubicInterpolationMode) }, l.pivot()), i = 0, a = u.length; i < a; ++i) {\n              o.updateElement(u[i], i, t);\n            }for (g && 0 !== l._model.tension && o.updateBezierControlPoints(), i = 0, a = u.length; i < a; ++i) {\n              u[i].pivot();\n            }\n          }, getPointBackgroundColor: function getPointBackgroundColor(t, e) {\n            var i = this.chart.options.elements.point.backgroundColor,\n                a = this.getDataset(),\n                r = t.custom || {};return r.backgroundColor ? i = r.backgroundColor : a.pointBackgroundColor ? i = n.getValueAtIndexOrDefault(a.pointBackgroundColor, e, i) : a.backgroundColor && (i = a.backgroundColor), i;\n          }, getPointBorderColor: function getPointBorderColor(t, e) {\n            var i = this.chart.options.elements.point.borderColor,\n                a = this.getDataset(),\n                r = t.custom || {};return r.borderColor ? i = r.borderColor : a.pointBorderColor ? i = n.getValueAtIndexOrDefault(a.pointBorderColor, e, i) : a.borderColor && (i = a.borderColor), i;\n          }, getPointBorderWidth: function getPointBorderWidth(t, e) {\n            var i = this.chart.options.elements.point.borderWidth,\n                a = this.getDataset(),\n                r = t.custom || {};return isNaN(r.borderWidth) ? isNaN(a.pointBorderWidth) ? isNaN(a.borderWidth) || (i = a.borderWidth) : i = n.getValueAtIndexOrDefault(a.pointBorderWidth, e, i) : i = r.borderWidth, i;\n          }, updateElement: function updateElement(t, e, i) {\n            var a,\n                r,\n                o = this,\n                s = o.getMeta(),\n                l = t.custom || {},\n                u = o.getDataset(),\n                d = o.index,\n                c = u.data[e],\n                h = o.getScaleForId(s.yAxisID),\n                f = o.getScaleForId(s.xAxisID),\n                g = o.chart.options.elements.point,\n                p = o.chart.data.labels || [],\n                m = 1 === p.length || 1 === u.data.length || o.chart.isCombo;void 0 !== u.radius && void 0 === u.pointRadius && (u.pointRadius = u.radius), void 0 !== u.hitRadius && void 0 === u.pointHitRadius && (u.pointHitRadius = u.hitRadius), a = f.getPixelForValue(\"object\" == (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) ? c : NaN, e, d, m), r = i ? h.getBasePixel() : o.calculatePointY(c, e, d), t._xScale = f, t._yScale = h, t._datasetIndex = d, t._index = e, t._model = { x: a, y: r, skip: l.skip || isNaN(a) || isNaN(r), radius: l.radius || n.getValueAtIndexOrDefault(u.pointRadius, e, g.radius), pointStyle: l.pointStyle || n.getValueAtIndexOrDefault(u.pointStyle, e, g.pointStyle), backgroundColor: o.getPointBackgroundColor(t, e), borderColor: o.getPointBorderColor(t, e), borderWidth: o.getPointBorderWidth(t, e), tension: s.dataset._model ? s.dataset._model.tension : 0, steppedLine: !!s.dataset._model && s.dataset._model.steppedLine, hitRadius: l.hitRadius || n.getValueAtIndexOrDefault(u.pointHitRadius, e, g.hitRadius) };\n          }, calculatePointY: function calculatePointY(t, e, n) {\n            var i,\n                a,\n                r,\n                o = this,\n                s = o.chart,\n                l = o.getMeta(),\n                u = o.getScaleForId(l.yAxisID),\n                d = 0,\n                c = 0;if (u.options.stacked) {\n              for (i = 0; i < n; i++) {\n                if (a = s.data.datasets[i], r = s.getDatasetMeta(i), \"line\" === r.type && r.yAxisID === u.id && s.isDatasetVisible(i)) {\n                  var h = Number(u.getRightValue(a.data[e]));h < 0 ? c += h || 0 : d += h || 0;\n                }\n              }var f = Number(u.getRightValue(t));return f < 0 ? u.getPixelForValue(c + f) : u.getPixelForValue(d + f);\n            }return u.getPixelForValue(t);\n          }, updateBezierControlPoints: function updateBezierControlPoints() {\n            function t(t, e, n) {\n              return Math.max(Math.min(t, n), e);\n            }var e,\n                i,\n                a,\n                r,\n                o,\n                s = this,\n                l = s.getMeta(),\n                u = s.chart.chartArea,\n                d = l.data || [];if (l.dataset._model.spanGaps && (d = d.filter(function (t) {\n              return !t._model.skip;\n            })), \"monotone\" === l.dataset._model.cubicInterpolationMode) n.splineCurveMonotone(d);else for (e = 0, i = d.length; e < i; ++e) {\n              a = d[e], r = a._model, o = n.splineCurve(n.previousItem(d, e)._model, r, n.nextItem(d, e)._model, l.dataset._model.tension), r.controlPointPreviousX = o.previous.x, r.controlPointPreviousY = o.previous.y, r.controlPointNextX = o.next.x, r.controlPointNextY = o.next.y;\n            }if (s.chart.options.elements.line.capBezierPoints) for (e = 0, i = d.length; e < i; ++e) {\n              r = d[e]._model, r.controlPointPreviousX = t(r.controlPointPreviousX, u.left, u.right), r.controlPointPreviousY = t(r.controlPointPreviousY, u.top, u.bottom), r.controlPointNextX = t(r.controlPointNextX, u.left, u.right), r.controlPointNextY = t(r.controlPointNextY, u.top, u.bottom);\n            }\n          }, draw: function draw() {\n            var n = this,\n                i = n.chart,\n                a = n.getMeta(),\n                r = a.data || [],\n                o = i.chartArea,\n                s = r.length,\n                l = 0;for (t.canvasHelpers.clipArea(i.ctx, o), e(n.getDataset(), i.options) && a.dataset.draw(), t.canvasHelpers.unclipArea(i.ctx); l < s; ++l) {\n              r[l].draw(o);\n            }\n          }, setHoverStyle: function setHoverStyle(t) {\n            var e = this.chart.data.datasets[t._datasetIndex],\n                i = t._index,\n                a = t.custom || {},\n                r = t._model;r.radius = a.hoverRadius || n.getValueAtIndexOrDefault(e.pointHoverRadius, i, this.chart.options.elements.point.hoverRadius), r.backgroundColor = a.hoverBackgroundColor || n.getValueAtIndexOrDefault(e.pointHoverBackgroundColor, i, n.getHoverColor(r.backgroundColor)), r.borderColor = a.hoverBorderColor || n.getValueAtIndexOrDefault(e.pointHoverBorderColor, i, n.getHoverColor(r.borderColor)), r.borderWidth = a.hoverBorderWidth || n.getValueAtIndexOrDefault(e.pointHoverBorderWidth, i, r.borderWidth);\n          }, removeHoverStyle: function removeHoverStyle(t) {\n            var e = this,\n                i = e.chart.data.datasets[t._datasetIndex],\n                a = t._index,\n                r = t.custom || {},\n                o = t._model;void 0 !== i.radius && void 0 === i.pointRadius && (i.pointRadius = i.radius), o.radius = r.radius || n.getValueAtIndexOrDefault(i.pointRadius, a, e.chart.options.elements.point.radius), o.backgroundColor = e.getPointBackgroundColor(t, a), o.borderColor = e.getPointBorderColor(t, a), o.borderWidth = e.getPointBorderWidth(t, a);\n          } });\n      };\n    }, {}], 19: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers;t.defaults.polarArea = { scale: { type: \"radialLinear\", angleLines: { display: !1 }, gridLines: { circular: !0 }, pointLabels: { display: !1 }, ticks: { beginAtZero: !0 } }, animation: { animateRotate: !0, animateScale: !0 }, startAngle: -.5 * Math.PI, aspectRatio: 1, legendCallback: function legendCallback(t) {\n            var e = [];e.push('<ul class=\"' + t.id + '-legend\">');var n = t.data,\n                i = n.datasets,\n                a = n.labels;if (i.length) for (var r = 0; r < i[0].data.length; ++r) {\n              e.push('<li><span style=\"background-color:' + i[0].backgroundColor[r] + '\"></span>'), a[r] && e.push(a[r]), e.push(\"</li>\");\n            }return e.push(\"</ul>\"), e.join(\"\");\n          }, legend: { labels: { generateLabels: function generateLabels(t) {\n                var n = t.data;return n.labels.length && n.datasets.length ? n.labels.map(function (i, a) {\n                  var r = t.getDatasetMeta(0),\n                      o = n.datasets[0],\n                      s = r.data[a],\n                      l = s.custom || {},\n                      u = e.getValueAtIndexOrDefault,\n                      d = t.options.elements.arc,\n                      c = l.backgroundColor ? l.backgroundColor : u(o.backgroundColor, a, d.backgroundColor),\n                      h = l.borderColor ? l.borderColor : u(o.borderColor, a, d.borderColor),\n                      f = l.borderWidth ? l.borderWidth : u(o.borderWidth, a, d.borderWidth);return { text: i, fillStyle: c, strokeStyle: h, lineWidth: f, hidden: isNaN(o.data[a]) || r.data[a].hidden, index: a };\n                }) : [];\n              } }, onClick: function onClick(t, e) {\n              var n,\n                  i,\n                  a,\n                  r = e.index,\n                  o = this.chart;for (n = 0, i = (o.data.datasets || []).length; n < i; ++n) {\n                a = o.getDatasetMeta(n), a.data[r].hidden = !a.data[r].hidden;\n              }o.update();\n            } }, tooltips: { callbacks: { title: function title() {\n                return \"\";\n              }, label: function label(t, e) {\n                return e.labels[t.index] + \": \" + t.yLabel;\n              } } } }, t.controllers.polarArea = t.DatasetController.extend({ dataElementType: t.elements.Arc, linkScales: e.noop, update: function update(t) {\n            var n = this,\n                i = n.chart,\n                a = i.chartArea,\n                r = n.getMeta(),\n                o = i.options,\n                s = o.elements.arc,\n                l = Math.min(a.right - a.left, a.bottom - a.top);i.outerRadius = Math.max((l - s.borderWidth / 2) / 2, 0), i.innerRadius = Math.max(o.cutoutPercentage ? i.outerRadius / 100 * o.cutoutPercentage : 1, 0), i.radiusLength = (i.outerRadius - i.innerRadius) / i.getVisibleDatasetCount(), n.outerRadius = i.outerRadius - i.radiusLength * n.index, n.innerRadius = n.outerRadius - i.radiusLength, r.count = n.countVisibleElements(), e.each(r.data, function (e, i) {\n              n.updateElement(e, i, t);\n            });\n          }, updateElement: function updateElement(t, n, i) {\n            for (var a = this, r = a.chart, o = a.getDataset(), s = r.options, l = s.animation, u = r.scale, d = e.getValueAtIndexOrDefault, c = r.data.labels, h = a.calculateCircumference(o.data[n]), f = u.xCenter, g = u.yCenter, p = 0, m = a.getMeta(), v = 0; v < n; ++v) {\n              isNaN(o.data[v]) || m.data[v].hidden || ++p;\n            }var y = s.startAngle,\n                b = t.hidden ? 0 : u.getDistanceFromCenterForValue(o.data[n]),\n                x = y + h * p,\n                _ = x + (t.hidden ? 0 : h),\n                k = l.animateScale ? 0 : u.getDistanceFromCenterForValue(o.data[n]);e.extend(t, { _datasetIndex: a.index, _index: n, _scale: u, _model: { x: f, y: g, innerRadius: 0, outerRadius: i ? k : b, startAngle: i && l.animateRotate ? y : x, endAngle: i && l.animateRotate ? y : _, label: d(c, n, c[n]) } }), a.removeHoverStyle(t), t.pivot();\n          }, removeHoverStyle: function removeHoverStyle(e) {\n            t.DatasetController.prototype.removeHoverStyle.call(this, e, this.chart.options.elements.arc);\n          }, countVisibleElements: function countVisibleElements() {\n            var t = this.getDataset(),\n                n = this.getMeta(),\n                i = 0;return e.each(n.data, function (e, n) {\n              isNaN(t.data[n]) || e.hidden || i++;\n            }), i;\n          }, calculateCircumference: function calculateCircumference(t) {\n            var e = this.getMeta().count;return e > 0 && !isNaN(t) ? 2 * Math.PI / e : 0;\n          } });\n      };\n    }, {}], 20: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers;t.defaults.radar = { aspectRatio: 1, scale: { type: \"radialLinear\" }, elements: { line: { tension: 0 } } }, t.controllers.radar = t.DatasetController.extend({ datasetElementType: t.elements.Line, dataElementType: t.elements.Point, linkScales: e.noop, update: function update(t) {\n            var n = this,\n                i = n.getMeta(),\n                a = i.dataset,\n                r = i.data,\n                o = a.custom || {},\n                s = n.getDataset(),\n                l = n.chart.options.elements.line,\n                u = n.chart.scale;void 0 !== s.tension && void 0 === s.lineTension && (s.lineTension = s.tension), e.extend(i.dataset, { _datasetIndex: n.index, _scale: u, _children: r, _loop: !0, _model: { tension: o.tension ? o.tension : e.getValueOrDefault(s.lineTension, l.tension), backgroundColor: o.backgroundColor ? o.backgroundColor : s.backgroundColor || l.backgroundColor, borderWidth: o.borderWidth ? o.borderWidth : s.borderWidth || l.borderWidth, borderColor: o.borderColor ? o.borderColor : s.borderColor || l.borderColor, fill: o.fill ? o.fill : void 0 !== s.fill ? s.fill : l.fill, borderCapStyle: o.borderCapStyle ? o.borderCapStyle : s.borderCapStyle || l.borderCapStyle, borderDash: o.borderDash ? o.borderDash : s.borderDash || l.borderDash, borderDashOffset: o.borderDashOffset ? o.borderDashOffset : s.borderDashOffset || l.borderDashOffset, borderJoinStyle: o.borderJoinStyle ? o.borderJoinStyle : s.borderJoinStyle || l.borderJoinStyle } }), i.dataset.pivot(), e.each(r, function (e, i) {\n              n.updateElement(e, i, t);\n            }, n), n.updateBezierControlPoints();\n          }, updateElement: function updateElement(t, n, i) {\n            var a = this,\n                r = t.custom || {},\n                o = a.getDataset(),\n                s = a.chart.scale,\n                l = a.chart.options.elements.point,\n                u = s.getPointPositionForValue(n, o.data[n]);void 0 !== o.radius && void 0 === o.pointRadius && (o.pointRadius = o.radius), void 0 !== o.hitRadius && void 0 === o.pointHitRadius && (o.pointHitRadius = o.hitRadius), e.extend(t, { _datasetIndex: a.index, _index: n, _scale: s, _model: { x: i ? s.xCenter : u.x, y: i ? s.yCenter : u.y, tension: r.tension ? r.tension : e.getValueOrDefault(o.lineTension, a.chart.options.elements.line.tension), radius: r.radius ? r.radius : e.getValueAtIndexOrDefault(o.pointRadius, n, l.radius), backgroundColor: r.backgroundColor ? r.backgroundColor : e.getValueAtIndexOrDefault(o.pointBackgroundColor, n, l.backgroundColor), borderColor: r.borderColor ? r.borderColor : e.getValueAtIndexOrDefault(o.pointBorderColor, n, l.borderColor), borderWidth: r.borderWidth ? r.borderWidth : e.getValueAtIndexOrDefault(o.pointBorderWidth, n, l.borderWidth), pointStyle: r.pointStyle ? r.pointStyle : e.getValueAtIndexOrDefault(o.pointStyle, n, l.pointStyle), hitRadius: r.hitRadius ? r.hitRadius : e.getValueAtIndexOrDefault(o.pointHitRadius, n, l.hitRadius) } }), t._model.skip = r.skip ? r.skip : isNaN(t._model.x) || isNaN(t._model.y);\n          }, updateBezierControlPoints: function updateBezierControlPoints() {\n            var t = this.chart.chartArea,\n                n = this.getMeta();e.each(n.data, function (i, a) {\n              var r = i._model,\n                  o = e.splineCurve(e.previousItem(n.data, a, !0)._model, r, e.nextItem(n.data, a, !0)._model, r.tension);r.controlPointPreviousX = Math.max(Math.min(o.previous.x, t.right), t.left), r.controlPointPreviousY = Math.max(Math.min(o.previous.y, t.bottom), t.top), r.controlPointNextX = Math.max(Math.min(o.next.x, t.right), t.left), r.controlPointNextY = Math.max(Math.min(o.next.y, t.bottom), t.top), i.pivot();\n            });\n          }, setHoverStyle: function setHoverStyle(t) {\n            var n = this.chart.data.datasets[t._datasetIndex],\n                i = t.custom || {},\n                a = t._index,\n                r = t._model;r.radius = i.hoverRadius ? i.hoverRadius : e.getValueAtIndexOrDefault(n.pointHoverRadius, a, this.chart.options.elements.point.hoverRadius), r.backgroundColor = i.hoverBackgroundColor ? i.hoverBackgroundColor : e.getValueAtIndexOrDefault(n.pointHoverBackgroundColor, a, e.getHoverColor(r.backgroundColor)), r.borderColor = i.hoverBorderColor ? i.hoverBorderColor : e.getValueAtIndexOrDefault(n.pointHoverBorderColor, a, e.getHoverColor(r.borderColor)), r.borderWidth = i.hoverBorderWidth ? i.hoverBorderWidth : e.getValueAtIndexOrDefault(n.pointHoverBorderWidth, a, r.borderWidth);\n          }, removeHoverStyle: function removeHoverStyle(t) {\n            var n = this.chart.data.datasets[t._datasetIndex],\n                i = t.custom || {},\n                a = t._index,\n                r = t._model,\n                o = this.chart.options.elements.point;r.radius = i.radius ? i.radius : e.getValueAtIndexOrDefault(n.pointRadius, a, o.radius), r.backgroundColor = i.backgroundColor ? i.backgroundColor : e.getValueAtIndexOrDefault(n.pointBackgroundColor, a, o.backgroundColor), r.borderColor = i.borderColor ? i.borderColor : e.getValueAtIndexOrDefault(n.pointBorderColor, a, o.borderColor), r.borderWidth = i.borderWidth ? i.borderWidth : e.getValueAtIndexOrDefault(n.pointBorderWidth, a, o.borderWidth);\n          } });\n      };\n    }, {}], 21: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers;t.defaults.global.animation = { duration: 1e3, easing: \"easeOutQuart\", onProgress: e.noop, onComplete: e.noop }, t.Animation = t.Element.extend({ chart: null, currentStep: 0, numSteps: 60, easing: \"\", render: null, onAnimationProgress: null, onAnimationComplete: null }), t.animationService = { frameDuration: 17, animations: [], dropFrames: 0, request: null, addAnimation: function addAnimation(t, e, n, i) {\n            var a,\n                r,\n                o = this.animations;for (e.chart = t, i || (t.animating = !0), a = 0, r = o.length; a < r; ++a) {\n              if (o[a].chart === t) return void (o[a] = e);\n            }o.push(e), 1 === o.length && this.requestAnimationFrame();\n          }, cancelAnimation: function cancelAnimation(t) {\n            var n = e.findIndex(this.animations, function (e) {\n              return e.chart === t;\n            });n !== -1 && (this.animations.splice(n, 1), t.animating = !1);\n          }, requestAnimationFrame: function requestAnimationFrame() {\n            var t = this;null === t.request && (t.request = e.requestAnimFrame.call(window, function () {\n              t.request = null, t.startDigest();\n            }));\n          }, startDigest: function startDigest() {\n            var t = this,\n                e = Date.now(),\n                n = 0;t.dropFrames > 1 && (n = Math.floor(t.dropFrames), t.dropFrames = t.dropFrames % 1), t.advance(1 + n);var i = Date.now();t.dropFrames += (i - e) / t.frameDuration, t.animations.length > 0 && t.requestAnimationFrame();\n          }, advance: function advance(t) {\n            for (var n, i, a = this.animations, r = 0; r < a.length;) {\n              n = a[r], i = n.chart, n.currentStep = (n.currentStep || 0) + t, n.currentStep = Math.min(n.currentStep, n.numSteps), e.callback(n.render, [i, n], i), e.callback(n.onAnimationProgress, [n], i), n.currentStep >= n.numSteps ? (e.callback(n.onAnimationComplete, [n], i), i.animating = !1, a.splice(r, 1)) : ++r;\n            }\n          } }, Object.defineProperty(t.Animation.prototype, \"animationObject\", { get: function get() {\n            return this;\n          } }), Object.defineProperty(t.Animation.prototype, \"chartInstance\", { get: function get() {\n            return this.chart;\n          }, set: function set(t) {\n            this.chart = t;\n          } });\n      };\n    }, {}], 22: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.canvasHelpers = {};e.drawPoint = function (e, n, i, a, r) {\n          var o, s, l, u, d, c;if (\"object\" == (typeof n === \"undefined\" ? \"undefined\" : _typeof(n)) && (o = n.toString(), \"[object HTMLImageElement]\" === o || \"[object HTMLCanvasElement]\" === o)) return void e.drawImage(n, a - n.width / 2, r - n.height / 2, n.width, n.height);if (!(isNaN(i) || i <= 0)) {\n            switch (n) {default:\n                e.beginPath(), e.arc(a, r, i, 0, 2 * Math.PI), e.closePath(), e.fill();break;case \"triangle\":\n                e.beginPath(), s = 3 * i / Math.sqrt(3), d = s * Math.sqrt(3) / 2, e.moveTo(a - s / 2, r + d / 3), e.lineTo(a + s / 2, r + d / 3), e.lineTo(a, r - 2 * d / 3), e.closePath(), e.fill();break;case \"rect\":\n                c = 1 / Math.SQRT2 * i, e.beginPath(), e.fillRect(a - c, r - c, 2 * c, 2 * c), e.strokeRect(a - c, r - c, 2 * c, 2 * c);break;case \"rectRounded\":\n                var h = i / Math.SQRT2,\n                    f = a - h,\n                    g = r - h,\n                    p = Math.SQRT2 * i;t.helpers.drawRoundedRectangle(e, f, g, p, p, i / 2), e.fill();break;case \"rectRot\":\n                c = 1 / Math.SQRT2 * i, e.beginPath(), e.moveTo(a - c, r), e.lineTo(a, r + c), e.lineTo(a + c, r), e.lineTo(a, r - c), e.closePath(), e.fill();break;case \"cross\":\n                e.beginPath(), e.moveTo(a, r + i), e.lineTo(a, r - i), e.moveTo(a - i, r), e.lineTo(a + i, r), e.closePath();break;case \"crossRot\":\n                e.beginPath(), l = Math.cos(Math.PI / 4) * i, u = Math.sin(Math.PI / 4) * i, e.moveTo(a - l, r - u), e.lineTo(a + l, r + u), e.moveTo(a - l, r + u), e.lineTo(a + l, r - u), e.closePath();break;case \"star\":\n                e.beginPath(), e.moveTo(a, r + i), e.lineTo(a, r - i), e.moveTo(a - i, r), e.lineTo(a + i, r), l = Math.cos(Math.PI / 4) * i, u = Math.sin(Math.PI / 4) * i, e.moveTo(a - l, r - u), e.lineTo(a + l, r + u), e.moveTo(a - l, r + u), e.lineTo(a + l, r - u), e.closePath();break;case \"line\":\n                e.beginPath(), e.moveTo(a - i, r), e.lineTo(a + i, r), e.closePath();break;case \"dash\":\n                e.beginPath(), e.moveTo(a, r), e.lineTo(a + i, r), e.closePath();}e.stroke();\n          }\n        }, e.clipArea = function (t, e) {\n          t.save(), t.beginPath(), t.rect(e.left, e.top, e.right - e.left, e.bottom - e.top), t.clip();\n        }, e.unclipArea = function (t) {\n          t.restore();\n        }, e.lineTo = function (t, e, n, i) {\n          return n.steppedLine ? (\"after\" === n.steppedLine ? t.lineTo(e.x, n.y) : t.lineTo(n.x, e.y), void t.lineTo(n.x, n.y)) : n.tension ? void t.bezierCurveTo(i ? e.controlPointPreviousX : e.controlPointNextX, i ? e.controlPointPreviousY : e.controlPointNextY, i ? n.controlPointNextX : n.controlPointPreviousX, i ? n.controlPointNextY : n.controlPointPreviousY, n.x, n.y) : void t.lineTo(n.x, n.y);\n        }, t.helpers.canvas = e;\n      };\n    }, {}], 23: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(e) {\n          e = e || {};var n = e.data = e.data || {};return n.datasets = n.datasets || [], n.labels = n.labels || [], e.options = a.configMerge(t.defaults.global, t.defaults[e.type], e.options || {}), e;\n        }function n(t) {\n          var e = t.options;e.scale ? t.scale.options = e.scale : e.scales && e.scales.xAxes.concat(e.scales.yAxes).forEach(function (e) {\n            t.scales[e.id].options = e;\n          }), t.tooltip._options = e.tooltips;\n        }function i(t) {\n          return \"top\" === t || \"bottom\" === t;\n        }var a = t.helpers,\n            r = t.plugins,\n            o = t.platform;t.types = {}, t.instances = {}, t.controllers = {}, a.extend(t.prototype, { construct: function construct(n, i) {\n            var r = this;i = e(i);var s = o.acquireContext(n, i),\n                l = s && s.canvas,\n                u = l && l.height,\n                d = l && l.width;return r.id = a.uid(), r.ctx = s, r.canvas = l, r.config = i, r.width = d, r.height = u, r.aspectRatio = u ? d / u : null, r.options = i.options, r._bufferedRender = !1, r.chart = r, r.controller = r, t.instances[r.id] = r, Object.defineProperty(r, \"data\", { get: function get() {\n                return r.config.data;\n              }, set: function set(t) {\n                r.config.data = t;\n              } }), s && l ? (r.initialize(), void r.update()) : void console.error(\"Failed to create chart: can't acquire context from the given item\");\n          }, initialize: function initialize() {\n            var t = this;return r.notify(t, \"beforeInit\"), a.retinaScale(t), t.bindEvents(), t.options.responsive && t.resize(!0), t.ensureScalesHaveIDs(), t.buildScales(), t.initToolTip(), r.notify(t, \"afterInit\"), t;\n          }, clear: function clear() {\n            return a.clear(this), this;\n          }, stop: function stop() {\n            return t.animationService.cancelAnimation(this), this;\n          }, resize: function resize(t) {\n            var e = this,\n                n = e.options,\n                i = e.canvas,\n                o = n.maintainAspectRatio && e.aspectRatio || null,\n                s = Math.floor(a.getMaximumWidth(i)),\n                l = Math.floor(o ? s / o : a.getMaximumHeight(i));if ((e.width !== s || e.height !== l) && (i.width = e.width = s, i.height = e.height = l, i.style.width = s + \"px\", i.style.height = l + \"px\", a.retinaScale(e), !t)) {\n              var u = { width: s, height: l };r.notify(e, \"resize\", [u]), e.options.onResize && e.options.onResize(e, u), e.stop(), e.update(e.options.responsiveAnimationDuration);\n            }\n          }, ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n            var t = this.options,\n                e = t.scales || {},\n                n = t.scale;a.each(e.xAxes, function (t, e) {\n              t.id = t.id || \"x-axis-\" + e;\n            }), a.each(e.yAxes, function (t, e) {\n              t.id = t.id || \"y-axis-\" + e;\n            }), n && (n.id = n.id || \"scale\");\n          }, buildScales: function buildScales() {\n            var e = this,\n                n = e.options,\n                r = e.scales = {},\n                o = [];n.scales && (o = o.concat((n.scales.xAxes || []).map(function (t) {\n              return { options: t, dtype: \"category\", dposition: \"bottom\" };\n            }), (n.scales.yAxes || []).map(function (t) {\n              return { options: t, dtype: \"linear\", dposition: \"left\" };\n            }))), n.scale && o.push({ options: n.scale, dtype: \"radialLinear\", isDefault: !0, dposition: \"chartArea\" }), a.each(o, function (n) {\n              var o = n.options,\n                  s = a.getValueOrDefault(o.type, n.dtype),\n                  l = t.scaleService.getScaleConstructor(s);if (l) {\n                i(o.position) !== i(n.dposition) && (o.position = n.dposition);var u = new l({ id: o.id, options: o, ctx: e.ctx, chart: e });r[u.id] = u, n.isDefault && (e.scale = u);\n              }\n            }), t.scaleService.addScalesToLayout(this);\n          }, buildOrUpdateControllers: function buildOrUpdateControllers() {\n            var e = this,\n                n = [],\n                i = [];if (a.each(e.data.datasets, function (a, r) {\n              var o = e.getDatasetMeta(r);if (o.type || (o.type = a.type || e.config.type), n.push(o.type), o.controller) o.controller.updateIndex(r);else {\n                var s = t.controllers[o.type];if (void 0 === s) throw new Error('\"' + o.type + '\" is not a chart type.');o.controller = new s(e, r), i.push(o.controller);\n              }\n            }, e), n.length > 1) for (var r = 1; r < n.length; r++) {\n              if (n[r] !== n[r - 1]) {\n                e.isCombo = !0;break;\n              }\n            }return i;\n          }, resetElements: function resetElements() {\n            var t = this;a.each(t.data.datasets, function (e, n) {\n              t.getDatasetMeta(n).controller.reset();\n            }, t);\n          }, reset: function reset() {\n            this.resetElements(), this.tooltip.initialize();\n          }, update: function update(t, e) {\n            var i = this;if (n(i), r.notify(i, \"beforeUpdate\") !== !1) {\n              i.tooltip._data = i.data;var o = i.buildOrUpdateControllers();a.each(i.data.datasets, function (t, e) {\n                i.getDatasetMeta(e).controller.buildOrUpdateElements();\n              }, i), i.updateLayout(), a.each(o, function (t) {\n                t.reset();\n              }), i.updateDatasets(), r.notify(i, \"afterUpdate\"), i._bufferedRender ? i._bufferedRequest = { lazy: e, duration: t } : i.render(t, e);\n            }\n          }, updateLayout: function updateLayout() {\n            var e = this;r.notify(e, \"beforeLayout\") !== !1 && (t.layoutService.update(this, this.width, this.height), r.notify(e, \"afterScaleUpdate\"), r.notify(e, \"afterLayout\"));\n          }, updateDatasets: function updateDatasets() {\n            var t = this;if (r.notify(t, \"beforeDatasetsUpdate\") !== !1) {\n              for (var e = 0, n = t.data.datasets.length; e < n; ++e) {\n                t.updateDataset(e);\n              }r.notify(t, \"afterDatasetsUpdate\");\n            }\n          }, updateDataset: function updateDataset(t) {\n            var e = this,\n                n = e.getDatasetMeta(t),\n                i = { meta: n, index: t };r.notify(e, \"beforeDatasetUpdate\", [i]) !== !1 && (n.controller.update(), r.notify(e, \"afterDatasetUpdate\", [i]));\n          }, render: function render(e, n) {\n            var i = this;if (r.notify(i, \"beforeRender\") !== !1) {\n              var o = i.options.animation,\n                  s = function s(t) {\n                r.notify(i, \"afterRender\"), a.callback(o && o.onComplete, [t], i);\n              };if (o && (\"undefined\" != typeof e && 0 !== e || \"undefined\" == typeof e && 0 !== o.duration)) {\n                var l = new t.Animation({ numSteps: (e || o.duration) / 16.66, easing: o.easing, render: function render(t, e) {\n                    var n = a.easingEffects[e.easing],\n                        i = e.currentStep,\n                        r = i / e.numSteps;t.draw(n(r), r, i);\n                  }, onAnimationProgress: o.onProgress, onAnimationComplete: s });t.animationService.addAnimation(i, l, e, n);\n              } else i.draw(), s(new t.Animation({ numSteps: 0, chart: i }));return i;\n            }\n          }, draw: function draw(t) {\n            var e = this;e.clear(), void 0 !== t && null !== t || (t = 1), e.transition(t), r.notify(e, \"beforeDraw\", [t]) !== !1 && (a.each(e.boxes, function (t) {\n              t.draw(e.chartArea);\n            }, e), e.scale && e.scale.draw(), e.drawDatasets(t), e.tooltip.draw(), r.notify(e, \"afterDraw\", [t]));\n          }, transition: function transition(t) {\n            for (var e = this, n = 0, i = (e.data.datasets || []).length; n < i; ++n) {\n              e.isDatasetVisible(n) && e.getDatasetMeta(n).controller.transition(t);\n            }e.tooltip.transition(t);\n          }, drawDatasets: function drawDatasets(t) {\n            var e = this;if (r.notify(e, \"beforeDatasetsDraw\", [t]) !== !1) {\n              for (var n = (e.data.datasets || []).length - 1; n >= 0; --n) {\n                e.isDatasetVisible(n) && e.drawDataset(n, t);\n              }r.notify(e, \"afterDatasetsDraw\", [t]);\n            }\n          }, drawDataset: function drawDataset(t, e) {\n            var n = this,\n                i = n.getDatasetMeta(t),\n                a = { meta: i, index: t, easingValue: e };r.notify(n, \"beforeDatasetDraw\", [a]) !== !1 && (i.controller.draw(e), r.notify(n, \"afterDatasetDraw\", [a]));\n          }, getElementAtEvent: function getElementAtEvent(e) {\n            return t.Interaction.modes.single(this, e);\n          }, getElementsAtEvent: function getElementsAtEvent(e) {\n            return t.Interaction.modes.label(this, e, { intersect: !0 });\n          }, getElementsAtXAxis: function getElementsAtXAxis(e) {\n            return t.Interaction.modes[\"x-axis\"](this, e, { intersect: !0 });\n          }, getElementsAtEventForMode: function getElementsAtEventForMode(e, n, i) {\n            var a = t.Interaction.modes[n];return \"function\" == typeof a ? a(this, e, i) : [];\n          }, getDatasetAtEvent: function getDatasetAtEvent(e) {\n            return t.Interaction.modes.dataset(this, e, { intersect: !0 });\n          }, getDatasetMeta: function getDatasetMeta(t) {\n            var e = this,\n                n = e.data.datasets[t];n._meta || (n._meta = {});var i = n._meta[e.id];return i || (i = n._meta[e.id] = { type: null, data: [], dataset: null, controller: null, hidden: null, xAxisID: null, yAxisID: null }), i;\n          }, getVisibleDatasetCount: function getVisibleDatasetCount() {\n            for (var t = 0, e = 0, n = this.data.datasets.length; e < n; ++e) {\n              this.isDatasetVisible(e) && t++;\n            }return t;\n          }, isDatasetVisible: function isDatasetVisible(t) {\n            var e = this.getDatasetMeta(t);return \"boolean\" == typeof e.hidden ? !e.hidden : !this.data.datasets[t].hidden;\n          }, generateLegend: function generateLegend() {\n            return this.options.legendCallback(this);\n          }, destroy: function destroy() {\n            var e,\n                n,\n                i,\n                s = this,\n                l = s.canvas;for (s.stop(), n = 0, i = s.data.datasets.length; n < i; ++n) {\n              e = s.getDatasetMeta(n), e.controller && (e.controller.destroy(), e.controller = null);\n            }l && (s.unbindEvents(), a.clear(s), o.releaseContext(s.ctx), s.canvas = null, s.ctx = null), r.notify(s, \"destroy\"), delete t.instances[s.id];\n          }, toBase64Image: function toBase64Image() {\n            return this.canvas.toDataURL.apply(this.canvas, arguments);\n          }, initToolTip: function initToolTip() {\n            var e = this;e.tooltip = new t.Tooltip({ _chart: e, _chartInstance: e, _data: e.data, _options: e.options.tooltips }, e), e.tooltip.initialize();\n          }, bindEvents: function bindEvents() {\n            var t = this,\n                e = t._listeners = {},\n                n = function n() {\n              t.eventHandler.apply(t, arguments);\n            };a.each(t.options.events, function (i) {\n              o.addEventListener(t, i, n), e[i] = n;\n            }), t.options.responsive && (n = function n() {\n              t.resize();\n            }, o.addEventListener(t, \"resize\", n), e.resize = n);\n          }, unbindEvents: function unbindEvents() {\n            var t = this,\n                e = t._listeners;e && (delete t._listeners, a.each(e, function (e, n) {\n              o.removeEventListener(t, n, e);\n            }));\n          }, updateHoverStyle: function updateHoverStyle(t, e, n) {\n            var i,\n                a,\n                r,\n                o = n ? \"setHoverStyle\" : \"removeHoverStyle\";for (a = 0, r = t.length; a < r; ++a) {\n              i = t[a], i && this.getDatasetMeta(i._datasetIndex).controller[o](i);\n            }\n          }, eventHandler: function eventHandler(t) {\n            var e = this,\n                n = e.tooltip;if (r.notify(e, \"beforeEvent\", [t]) !== !1) {\n              e._bufferedRender = !0, e._bufferedRequest = null;var i = e.handleEvent(t);i |= n && n.handleEvent(t), r.notify(e, \"afterEvent\", [t]);var a = e._bufferedRequest;return a ? e.render(a.duration, a.lazy) : i && !e.animating && (e.stop(), e.render(e.options.hover.animationDuration, !0)), e._bufferedRender = !1, e._bufferedRequest = null, e;\n            }\n          }, handleEvent: function handleEvent(t) {\n            var e = this,\n                n = e.options || {},\n                i = n.hover,\n                r = !1;return e.lastActive = e.lastActive || [], \"mouseout\" === t.type ? e.active = [] : e.active = e.getElementsAtEventForMode(t, i.mode, i), i.onHover && i.onHover.call(e, t.native, e.active), \"mouseup\" !== t.type && \"click\" !== t.type || n.onClick && n.onClick.call(e, t.native, e.active), e.lastActive.length && e.updateHoverStyle(e.lastActive, i.mode, !1), e.active.length && i.mode && e.updateHoverStyle(e.active, i.mode, !0), r = !a.arrayEquals(e.active, e.lastActive), e.lastActive = e.active, r;\n          } }), t.Controller = t;\n      };\n    }, {}], 24: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t, e) {\n          return t._chartjs ? void t._chartjs.listeners.push(e) : (Object.defineProperty(t, \"_chartjs\", { configurable: !0, enumerable: !1, value: { listeners: [e] } }), void a.forEach(function (e) {\n            var n = \"onData\" + e.charAt(0).toUpperCase() + e.slice(1),\n                a = t[e];Object.defineProperty(t, e, { configurable: !0, enumerable: !1, value: function value() {\n                var e = Array.prototype.slice.call(arguments),\n                    r = a.apply(this, e);return i.each(t._chartjs.listeners, function (t) {\n                  \"function\" == typeof t[n] && t[n].apply(t, e);\n                }), r;\n              } });\n          }));\n        }function n(t, e) {\n          var n = t._chartjs;if (n) {\n            var i = n.listeners,\n                r = i.indexOf(e);r !== -1 && i.splice(r, 1), i.length > 0 || (a.forEach(function (e) {\n              delete t[e];\n            }), delete t._chartjs);\n          }\n        }var i = t.helpers,\n            a = [\"push\", \"pop\", \"shift\", \"splice\", \"unshift\"];t.DatasetController = function (t, e) {\n          this.initialize(t, e);\n        }, i.extend(t.DatasetController.prototype, { datasetElementType: null, dataElementType: null, initialize: function initialize(t, e) {\n            var n = this;n.chart = t, n.index = e, n.linkScales(), n.addElements();\n          }, updateIndex: function updateIndex(t) {\n            this.index = t;\n          }, linkScales: function linkScales() {\n            var t = this,\n                e = t.getMeta(),\n                n = t.getDataset();null === e.xAxisID && (e.xAxisID = n.xAxisID || t.chart.options.scales.xAxes[0].id), null === e.yAxisID && (e.yAxisID = n.yAxisID || t.chart.options.scales.yAxes[0].id);\n          }, getDataset: function getDataset() {\n            return this.chart.data.datasets[this.index];\n          }, getMeta: function getMeta() {\n            return this.chart.getDatasetMeta(this.index);\n          }, getScaleForId: function getScaleForId(t) {\n            return this.chart.scales[t];\n          }, reset: function reset() {\n            this.update(!0);\n          }, destroy: function destroy() {\n            this._data && n(this._data, this);\n          }, createMetaDataset: function createMetaDataset() {\n            var t = this,\n                e = t.datasetElementType;return e && new e({ _chart: t.chart, _datasetIndex: t.index });\n          }, createMetaData: function createMetaData(t) {\n            var e = this,\n                n = e.dataElementType;return n && new n({ _chart: e.chart, _datasetIndex: e.index, _index: t });\n          }, addElements: function addElements() {\n            var t,\n                e,\n                n = this,\n                i = n.getMeta(),\n                a = n.getDataset().data || [],\n                r = i.data;for (t = 0, e = a.length; t < e; ++t) {\n              r[t] = r[t] || n.createMetaData(t);\n            }i.dataset = i.dataset || n.createMetaDataset();\n          }, addElementAndReset: function addElementAndReset(t) {\n            var e = this.createMetaData(t);this.getMeta().data.splice(t, 0, e), this.updateElement(e, t, !0);\n          }, buildOrUpdateElements: function buildOrUpdateElements() {\n            var t = this,\n                i = t.getDataset(),\n                a = i.data || (i.data = []);t._data !== a && (t._data && n(t._data, t), e(a, t), t._data = a), t.resyncElements();\n          }, update: i.noop, transition: function transition(t) {\n            for (var e = this.getMeta(), n = e.data || [], i = n.length, a = 0; a < i; ++a) {\n              n[a].transition(t);\n            }e.dataset && e.dataset.transition(t);\n          }, draw: function draw() {\n            var t = this.getMeta(),\n                e = t.data || [],\n                n = e.length,\n                i = 0;for (t.dataset && t.dataset.draw(); i < n; ++i) {\n              e[i].draw();\n            }\n          }, removeHoverStyle: function removeHoverStyle(t, e) {\n            var n = this.chart.data.datasets[t._datasetIndex],\n                a = t._index,\n                r = t.custom || {},\n                o = i.getValueAtIndexOrDefault,\n                s = t._model;s.backgroundColor = r.backgroundColor ? r.backgroundColor : o(n.backgroundColor, a, e.backgroundColor), s.borderColor = r.borderColor ? r.borderColor : o(n.borderColor, a, e.borderColor), s.borderWidth = r.borderWidth ? r.borderWidth : o(n.borderWidth, a, e.borderWidth);\n          }, setHoverStyle: function setHoverStyle(t) {\n            var e = this.chart.data.datasets[t._datasetIndex],\n                n = t._index,\n                a = t.custom || {},\n                r = i.getValueAtIndexOrDefault,\n                o = i.getHoverColor,\n                s = t._model;s.backgroundColor = a.hoverBackgroundColor ? a.hoverBackgroundColor : r(e.hoverBackgroundColor, n, o(s.backgroundColor)), s.borderColor = a.hoverBorderColor ? a.hoverBorderColor : r(e.hoverBorderColor, n, o(s.borderColor)), s.borderWidth = a.hoverBorderWidth ? a.hoverBorderWidth : r(e.hoverBorderWidth, n, s.borderWidth);\n          }, resyncElements: function resyncElements() {\n            var t = this,\n                e = t.getMeta(),\n                n = t.getDataset().data,\n                i = e.data.length,\n                a = n.length;a < i ? e.data.splice(a, i - a) : a > i && t.insertElements(i, a - i);\n          }, insertElements: function insertElements(t, e) {\n            for (var n = 0; n < e; ++n) {\n              this.addElementAndReset(t + n);\n            }\n          }, onDataPush: function onDataPush() {\n            this.insertElements(this.getDataset().data.length - 1, arguments.length);\n          }, onDataPop: function onDataPop() {\n            this.getMeta().data.pop();\n          }, onDataShift: function onDataShift() {\n            this.getMeta().data.shift();\n          }, onDataSplice: function onDataSplice(t, e) {\n            this.getMeta().data.splice(t, e), this.insertElements(t, arguments.length - 2);\n          }, onDataUnshift: function onDataUnshift() {\n            this.insertElements(0, arguments.length);\n          } }), t.DatasetController.extend = i.inherits;\n      };\n    }, {}], 25: [function (t, e, n) {\n      \"use strict\";\n      var i = t(2);e.exports = function (t) {\n        function e(t, e, n, a) {\n          var r,\n              o,\n              s,\n              l,\n              u,\n              d,\n              c,\n              h,\n              f,\n              g = Object.keys(n);for (r = 0, o = g.length; r < o; ++r) {\n            if (s = g[r], d = n[s], e.hasOwnProperty(s) || (e[s] = d), l = e[s], l !== d && \"_\" !== s[0]) {\n              if (t.hasOwnProperty(s) || (t[s] = l), u = t[s], c = typeof d === \"undefined\" ? \"undefined\" : _typeof(d), c === (typeof u === \"undefined\" ? \"undefined\" : _typeof(u))) if (\"string\" === c) {\n                if (h = i(u), h.valid && (f = i(d), f.valid)) {\n                  e[s] = f.mix(h, a).rgbString();continue;\n                }\n              } else if (\"number\" === c && isFinite(u) && isFinite(d)) {\n                e[s] = u + (d - u) * a;continue;\n              }e[s] = d;\n            }\n          }\n        }var n = t.helpers;t.elements = {}, t.Element = function (t) {\n          n.extend(this, t), this.initialize.apply(this, arguments);\n        }, n.extend(t.Element.prototype, { initialize: function initialize() {\n            this.hidden = !1;\n          }, pivot: function pivot() {\n            var t = this;return t._view || (t._view = n.clone(t._model)), t._start = {}, t;\n          }, transition: function transition(t) {\n            var n = this,\n                i = n._model,\n                a = n._start,\n                r = n._view;return i && 1 !== t ? (r || (r = n._view = {}), a || (a = n._start = {}), e(a, r, i, t), n) : (n._view = i, n._start = null, n);\n          }, tooltipPosition: function tooltipPosition() {\n            return { x: this._model.x, y: this._model.y };\n          }, hasValue: function hasValue() {\n            return n.isNumber(this._model.x) && n.isNumber(this._model.y);\n          } }), t.Element.extend = n.inherits;\n      };\n    }, { 2: 2 }], 26: [function (t, e, n) {\n      \"use strict\";\n      var i = t(2);e.exports = function (t) {\n        function e(t, e, n) {\n          var i;return \"string\" == typeof t ? (i = parseInt(t, 10), t.indexOf(\"%\") !== -1 && (i = i / 100 * e.parentNode[n])) : i = t, i;\n        }function n(t) {\n          return void 0 !== t && null !== t && \"none\" !== t;\n        }function a(t, i, a) {\n          var r = document.defaultView,\n              o = t.parentNode,\n              s = r.getComputedStyle(t)[i],\n              l = r.getComputedStyle(o)[i],\n              u = n(s),\n              d = n(l),\n              c = Number.POSITIVE_INFINITY;return u || d ? Math.min(u ? e(s, t, a) : c, d ? e(l, o, a) : c) : \"none\";\n        }var r = t.helpers = {};r.each = function (t, e, n, i) {\n          var a, o;if (r.isArray(t)) {\n            if (o = t.length, i) for (a = o - 1; a >= 0; a--) {\n              e.call(n, t[a], a);\n            } else for (a = 0; a < o; a++) {\n              e.call(n, t[a], a);\n            }\n          } else if (\"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t))) {\n            var s = Object.keys(t);for (o = s.length, a = 0; a < o; a++) {\n              e.call(n, t[s[a]], s[a]);\n            }\n          }\n        }, r.clone = function (t) {\n          var e = {};return r.each(t, function (t, n) {\n            r.isArray(t) ? e[n] = t.slice(0) : \"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) && null !== t ? e[n] = r.clone(t) : e[n] = t;\n          }), e;\n        }, r.extend = function (t) {\n          for (var e = function e(_e2, n) {\n            t[n] = _e2;\n          }, n = 1, i = arguments.length; n < i; n++) {\n            r.each(arguments[n], e);\n          }return t;\n        }, r.configMerge = function (e) {\n          var n = r.clone(e);return r.each(Array.prototype.slice.call(arguments, 1), function (e) {\n            r.each(e, function (e, i) {\n              var a = n.hasOwnProperty(i),\n                  o = a ? n[i] : {};\"scales\" === i ? n[i] = r.scaleMerge(o, e) : \"scale\" === i ? n[i] = r.configMerge(o, t.scaleService.getScaleDefaults(e.type), e) : !a || \"object\" != (typeof o === \"undefined\" ? \"undefined\" : _typeof(o)) || r.isArray(o) || null === o || \"object\" != (typeof e === \"undefined\" ? \"undefined\" : _typeof(e)) || r.isArray(e) ? n[i] = e : n[i] = r.configMerge(o, e);\n            });\n          }), n;\n        }, r.scaleMerge = function (e, n) {\n          var i = r.clone(e);return r.each(n, function (e, n) {\n            \"xAxes\" === n || \"yAxes\" === n ? i.hasOwnProperty(n) ? r.each(e, function (e, a) {\n              var o = r.getValueOrDefault(e.type, \"xAxes\" === n ? \"category\" : \"linear\"),\n                  s = t.scaleService.getScaleDefaults(o);a >= i[n].length || !i[n][a].type ? i[n].push(r.configMerge(s, e)) : e.type && e.type !== i[n][a].type ? i[n][a] = r.configMerge(i[n][a], s, e) : i[n][a] = r.configMerge(i[n][a], e);\n            }) : (i[n] = [], r.each(e, function (e) {\n              var a = r.getValueOrDefault(e.type, \"xAxes\" === n ? \"category\" : \"linear\");i[n].push(r.configMerge(t.scaleService.getScaleDefaults(a), e));\n            })) : i.hasOwnProperty(n) && \"object\" == _typeof(i[n]) && null !== i[n] && \"object\" == (typeof e === \"undefined\" ? \"undefined\" : _typeof(e)) ? i[n] = r.configMerge(i[n], e) : i[n] = e;\n          }), i;\n        }, r.getValueAtIndexOrDefault = function (t, e, n) {\n          return void 0 === t || null === t ? n : r.isArray(t) ? e < t.length ? t[e] : n : t;\n        }, r.getValueOrDefault = function (t, e) {\n          return void 0 === t ? e : t;\n        }, r.indexOf = Array.prototype.indexOf ? function (t, e) {\n          return t.indexOf(e);\n        } : function (t, e) {\n          for (var n = 0, i = t.length; n < i; ++n) {\n            if (t[n] === e) return n;\n          }return -1;\n        }, r.where = function (t, e) {\n          if (r.isArray(t) && Array.prototype.filter) return t.filter(e);var n = [];return r.each(t, function (t) {\n            e(t) && n.push(t);\n          }), n;\n        }, r.findIndex = Array.prototype.findIndex ? function (t, e, n) {\n          return t.findIndex(e, n);\n        } : function (t, e, n) {\n          n = void 0 === n ? t : n;for (var i = 0, a = t.length; i < a; ++i) {\n            if (e.call(n, t[i], i, t)) return i;\n          }return -1;\n        }, r.findNextWhere = function (t, e, n) {\n          void 0 !== n && null !== n || (n = -1);for (var i = n + 1; i < t.length; i++) {\n            var a = t[i];if (e(a)) return a;\n          }\n        }, r.findPreviousWhere = function (t, e, n) {\n          void 0 !== n && null !== n || (n = t.length);for (var i = n - 1; i >= 0; i--) {\n            var a = t[i];if (e(a)) return a;\n          }\n        }, r.inherits = function (t) {\n          var e = this,\n              n = t && t.hasOwnProperty(\"constructor\") ? t.constructor : function () {\n            return e.apply(this, arguments);\n          },\n              i = function i() {\n            this.constructor = n;\n          };return i.prototype = e.prototype, n.prototype = new i(), n.extend = r.inherits, t && r.extend(n.prototype, t), n.__super__ = e.prototype, n;\n        }, r.noop = function () {}, r.uid = function () {\n          var t = 0;return function () {\n            return t++;\n          };\n        }(), r.isNumber = function (t) {\n          return !isNaN(parseFloat(t)) && isFinite(t);\n        }, r.almostEquals = function (t, e, n) {\n          return Math.abs(t - e) < n;\n        }, r.almostWhole = function (t, e) {\n          var n = Math.round(t);return n - e < t && n + e > t;\n        }, r.max = function (t) {\n          return t.reduce(function (t, e) {\n            return isNaN(e) ? t : Math.max(t, e);\n          }, Number.NEGATIVE_INFINITY);\n        }, r.min = function (t) {\n          return t.reduce(function (t, e) {\n            return isNaN(e) ? t : Math.min(t, e);\n          }, Number.POSITIVE_INFINITY);\n        }, r.sign = Math.sign ? function (t) {\n          return Math.sign(t);\n        } : function (t) {\n          return t = +t, 0 === t || isNaN(t) ? t : t > 0 ? 1 : -1;\n        }, r.log10 = Math.log10 ? function (t) {\n          return Math.log10(t);\n        } : function (t) {\n          return Math.log(t) / Math.LN10;\n        }, r.toRadians = function (t) {\n          return t * (Math.PI / 180);\n        }, r.toDegrees = function (t) {\n          return t * (180 / Math.PI);\n        }, r.getAngleFromPoint = function (t, e) {\n          var n = e.x - t.x,\n              i = e.y - t.y,\n              a = Math.sqrt(n * n + i * i),\n              r = Math.atan2(i, n);return r < -.5 * Math.PI && (r += 2 * Math.PI), { angle: r, distance: a };\n        }, r.distanceBetweenPoints = function (t, e) {\n          return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2));\n        }, r.aliasPixel = function (t) {\n          return t % 2 === 0 ? 0 : .5;\n        }, r.splineCurve = function (t, e, n, i) {\n          var a = t.skip ? e : t,\n              r = e,\n              o = n.skip ? e : n,\n              s = Math.sqrt(Math.pow(r.x - a.x, 2) + Math.pow(r.y - a.y, 2)),\n              l = Math.sqrt(Math.pow(o.x - r.x, 2) + Math.pow(o.y - r.y, 2)),\n              u = s / (s + l),\n              d = l / (s + l);u = isNaN(u) ? 0 : u, d = isNaN(d) ? 0 : d;var c = i * u,\n              h = i * d;return { previous: { x: r.x - c * (o.x - a.x), y: r.y - c * (o.y - a.y) }, next: { x: r.x + h * (o.x - a.x), y: r.y + h * (o.y - a.y) } };\n        }, r.EPSILON = Number.EPSILON || 1e-14, r.splineCurveMonotone = function (t) {\n          var e,\n              n,\n              i,\n              a,\n              o = (t || []).map(function (t) {\n            return { model: t._model, deltaK: 0, mK: 0 };\n          }),\n              s = o.length;for (e = 0; e < s; ++e) {\n            if (i = o[e], !i.model.skip) {\n              if (n = e > 0 ? o[e - 1] : null, a = e < s - 1 ? o[e + 1] : null, a && !a.model.skip) {\n                var l = a.model.x - i.model.x;i.deltaK = 0 !== l ? (a.model.y - i.model.y) / l : 0;\n              }!n || n.model.skip ? i.mK = i.deltaK : !a || a.model.skip ? i.mK = n.deltaK : this.sign(n.deltaK) !== this.sign(i.deltaK) ? i.mK = 0 : i.mK = (n.deltaK + i.deltaK) / 2;\n            }\n          }var u, d, c, h;for (e = 0; e < s - 1; ++e) {\n            i = o[e], a = o[e + 1], i.model.skip || a.model.skip || (r.almostEquals(i.deltaK, 0, this.EPSILON) ? i.mK = a.mK = 0 : (u = i.mK / i.deltaK, d = a.mK / i.deltaK, h = Math.pow(u, 2) + Math.pow(d, 2), h <= 9 || (c = 3 / Math.sqrt(h), i.mK = u * c * i.deltaK, a.mK = d * c * i.deltaK)));\n          }var f;for (e = 0; e < s; ++e) {\n            i = o[e], i.model.skip || (n = e > 0 ? o[e - 1] : null, a = e < s - 1 ? o[e + 1] : null, n && !n.model.skip && (f = (i.model.x - n.model.x) / 3, i.model.controlPointPreviousX = i.model.x - f, i.model.controlPointPreviousY = i.model.y - f * i.mK), a && !a.model.skip && (f = (a.model.x - i.model.x) / 3, i.model.controlPointNextX = i.model.x + f, i.model.controlPointNextY = i.model.y + f * i.mK));\n          }\n        }, r.nextItem = function (t, e, n) {\n          return n ? e >= t.length - 1 ? t[0] : t[e + 1] : e >= t.length - 1 ? t[t.length - 1] : t[e + 1];\n        }, r.previousItem = function (t, e, n) {\n          return n ? e <= 0 ? t[t.length - 1] : t[e - 1] : e <= 0 ? t[0] : t[e - 1];\n        }, r.niceNum = function (t, e) {\n          var n,\n              i = Math.floor(r.log10(t)),\n              a = t / Math.pow(10, i);return n = e ? a < 1.5 ? 1 : a < 3 ? 2 : a < 7 ? 5 : 10 : a <= 1 ? 1 : a <= 2 ? 2 : a <= 5 ? 5 : 10, n * Math.pow(10, i);\n        };var o = r.easingEffects = { linear: function linear(t) {\n            return t;\n          }, easeInQuad: function easeInQuad(t) {\n            return t * t;\n          }, easeOutQuad: function easeOutQuad(t) {\n            return -1 * t * (t - 2);\n          }, easeInOutQuad: function easeInOutQuad(t) {\n            return (t /= .5) < 1 ? .5 * t * t : -.5 * (--t * (t - 2) - 1);\n          }, easeInCubic: function easeInCubic(t) {\n            return t * t * t;\n          }, easeOutCubic: function easeOutCubic(t) {\n            return 1 * ((t = t / 1 - 1) * t * t + 1);\n          }, easeInOutCubic: function easeInOutCubic(t) {\n            return (t /= .5) < 1 ? .5 * t * t * t : .5 * ((t -= 2) * t * t + 2);\n          }, easeInQuart: function easeInQuart(t) {\n            return t * t * t * t;\n          }, easeOutQuart: function easeOutQuart(t) {\n            return -1 * ((t = t / 1 - 1) * t * t * t - 1);\n          }, easeInOutQuart: function easeInOutQuart(t) {\n            return (t /= .5) < 1 ? .5 * t * t * t * t : -.5 * ((t -= 2) * t * t * t - 2);\n          }, easeInQuint: function easeInQuint(t) {\n            return 1 * (t /= 1) * t * t * t * t;\n          }, easeOutQuint: function easeOutQuint(t) {\n            return 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n          }, easeInOutQuint: function easeInOutQuint(t) {\n            return (t /= .5) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2);\n          }, easeInSine: function easeInSine(t) {\n            return -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n          }, easeOutSine: function easeOutSine(t) {\n            return 1 * Math.sin(t / 1 * (Math.PI / 2));\n          }, easeInOutSine: function easeInOutSine(t) {\n            return -.5 * (Math.cos(Math.PI * t / 1) - 1);\n          }, easeInExpo: function easeInExpo(t) {\n            return 0 === t ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n          }, easeOutExpo: function easeOutExpo(t) {\n            return 1 === t ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n          }, easeInOutExpo: function easeInOutExpo(t) {\n            return 0 === t ? 0 : 1 === t ? 1 : (t /= .5) < 1 ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (-Math.pow(2, -10 * --t) + 2);\n          }, easeInCirc: function easeInCirc(t) {\n            return t >= 1 ? t : -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n          }, easeOutCirc: function easeOutCirc(t) {\n            return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n          }, easeInOutCirc: function easeInOutCirc(t) {\n            return (t /= .5) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n          }, easeInElastic: function easeInElastic(t) {\n            var e = 1.70158,\n                n = 0,\n                i = 1;return 0 === t ? 0 : 1 === (t /= 1) ? 1 : (n || (n = .3), i < Math.abs(1) ? (i = 1, e = n / 4) : e = n / (2 * Math.PI) * Math.asin(1 / i), -(i * Math.pow(2, 10 * (t -= 1)) * Math.sin((1 * t - e) * (2 * Math.PI) / n)));\n          }, easeOutElastic: function easeOutElastic(t) {\n            var e = 1.70158,\n                n = 0,\n                i = 1;return 0 === t ? 0 : 1 === (t /= 1) ? 1 : (n || (n = .3), i < Math.abs(1) ? (i = 1, e = n / 4) : e = n / (2 * Math.PI) * Math.asin(1 / i), i * Math.pow(2, -10 * t) * Math.sin((1 * t - e) * (2 * Math.PI) / n) + 1);\n          }, easeInOutElastic: function easeInOutElastic(t) {\n            var e = 1.70158,\n                n = 0,\n                i = 1;return 0 === t ? 0 : 2 === (t /= .5) ? 1 : (n || (n = 1 * (.3 * 1.5)), i < Math.abs(1) ? (i = 1, e = n / 4) : e = n / (2 * Math.PI) * Math.asin(1 / i), t < 1 ? -.5 * (i * Math.pow(2, 10 * (t -= 1)) * Math.sin((1 * t - e) * (2 * Math.PI) / n)) : i * Math.pow(2, -10 * (t -= 1)) * Math.sin((1 * t - e) * (2 * Math.PI) / n) * .5 + 1);\n          }, easeInBack: function easeInBack(t) {\n            var e = 1.70158;return 1 * (t /= 1) * t * ((e + 1) * t - e);\n          }, easeOutBack: function easeOutBack(t) {\n            var e = 1.70158;return 1 * ((t = t / 1 - 1) * t * ((e + 1) * t + e) + 1);\n          }, easeInOutBack: function easeInOutBack(t) {\n            var e = 1.70158;\n            return (t /= .5) < 1 ? .5 * (t * t * (((e *= 1.525) + 1) * t - e)) : .5 * ((t -= 2) * t * (((e *= 1.525) + 1) * t + e) + 2);\n          }, easeInBounce: function easeInBounce(t) {\n            return 1 - o.easeOutBounce(1 - t);\n          }, easeOutBounce: function easeOutBounce(t) {\n            return (t /= 1) < 1 / 2.75 ? 1 * (7.5625 * t * t) : t < 2 / 2.75 ? 1 * (7.5625 * (t -= 1.5 / 2.75) * t + .75) : t < 2.5 / 2.75 ? 1 * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 * (7.5625 * (t -= 2.625 / 2.75) * t + .984375);\n          }, easeInOutBounce: function easeInOutBounce(t) {\n            return t < .5 ? .5 * o.easeInBounce(2 * t) : .5 * o.easeOutBounce(2 * t - 1) + .5;\n          } };r.requestAnimFrame = function () {\n          return \"undefined\" == typeof window ? function (t) {\n            t();\n          } : window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (t) {\n            return window.setTimeout(t, 1e3 / 60);\n          };\n        }(), r.getRelativePosition = function (t, e) {\n          var n,\n              i,\n              a = t.originalEvent || t,\n              o = t.currentTarget || t.srcElement,\n              s = o.getBoundingClientRect(),\n              l = a.touches;l && l.length > 0 ? (n = l[0].clientX, i = l[0].clientY) : (n = a.clientX, i = a.clientY);var u = parseFloat(r.getStyle(o, \"padding-left\")),\n              d = parseFloat(r.getStyle(o, \"padding-top\")),\n              c = parseFloat(r.getStyle(o, \"padding-right\")),\n              h = parseFloat(r.getStyle(o, \"padding-bottom\")),\n              f = s.right - s.left - u - c,\n              g = s.bottom - s.top - d - h;return n = Math.round((n - s.left - u) / f * o.width / e.currentDevicePixelRatio), i = Math.round((i - s.top - d) / g * o.height / e.currentDevicePixelRatio), { x: n, y: i };\n        }, r.addEvent = function (t, e, n) {\n          t.addEventListener ? t.addEventListener(e, n) : t.attachEvent ? t.attachEvent(\"on\" + e, n) : t[\"on\" + e] = n;\n        }, r.removeEvent = function (t, e, n) {\n          t.removeEventListener ? t.removeEventListener(e, n, !1) : t.detachEvent ? t.detachEvent(\"on\" + e, n) : t[\"on\" + e] = r.noop;\n        }, r.getConstraintWidth = function (t) {\n          return a(t, \"max-width\", \"clientWidth\");\n        }, r.getConstraintHeight = function (t) {\n          return a(t, \"max-height\", \"clientHeight\");\n        }, r.getMaximumWidth = function (t) {\n          var e = t.parentNode,\n              n = parseInt(r.getStyle(e, \"padding-left\"), 10),\n              i = parseInt(r.getStyle(e, \"padding-right\"), 10),\n              a = e.clientWidth - n - i,\n              o = r.getConstraintWidth(t);return isNaN(o) ? a : Math.min(a, o);\n        }, r.getMaximumHeight = function (t) {\n          var e = t.parentNode,\n              n = parseInt(r.getStyle(e, \"padding-top\"), 10),\n              i = parseInt(r.getStyle(e, \"padding-bottom\"), 10),\n              a = e.clientHeight - n - i,\n              o = r.getConstraintHeight(t);return isNaN(o) ? a : Math.min(a, o);\n        }, r.getStyle = function (t, e) {\n          return t.currentStyle ? t.currentStyle[e] : document.defaultView.getComputedStyle(t, null).getPropertyValue(e);\n        }, r.retinaScale = function (t) {\n          var e = t.currentDevicePixelRatio = window.devicePixelRatio || 1;if (1 !== e) {\n            var n = t.canvas,\n                i = t.height,\n                a = t.width;n.height = i * e, n.width = a * e, t.ctx.scale(e, e), n.style.height = i + \"px\", n.style.width = a + \"px\";\n          }\n        }, r.clear = function (t) {\n          t.ctx.clearRect(0, 0, t.width, t.height);\n        }, r.fontString = function (t, e, n) {\n          return e + \" \" + t + \"px \" + n;\n        }, r.longestText = function (t, e, n, i) {\n          i = i || {};var a = i.data = i.data || {},\n              o = i.garbageCollect = i.garbageCollect || [];i.font !== e && (a = i.data = {}, o = i.garbageCollect = [], i.font = e), t.font = e;var s = 0;r.each(n, function (e) {\n            void 0 !== e && null !== e && r.isArray(e) !== !0 ? s = r.measureText(t, a, o, s, e) : r.isArray(e) && r.each(e, function (e) {\n              void 0 === e || null === e || r.isArray(e) || (s = r.measureText(t, a, o, s, e));\n            });\n          });var l = o.length / 2;if (l > n.length) {\n            for (var u = 0; u < l; u++) {\n              delete a[o[u]];\n            }o.splice(0, l);\n          }return s;\n        }, r.measureText = function (t, e, n, i, a) {\n          var r = e[a];return r || (r = e[a] = t.measureText(a).width, n.push(a)), r > i && (i = r), i;\n        }, r.numberOfLabelLines = function (t) {\n          var e = 1;return r.each(t, function (t) {\n            r.isArray(t) && t.length > e && (e = t.length);\n          }), e;\n        }, r.drawRoundedRectangle = function (t, e, n, i, a, r) {\n          t.beginPath(), t.moveTo(e + r, n), t.lineTo(e + i - r, n), t.quadraticCurveTo(e + i, n, e + i, n + r), t.lineTo(e + i, n + a - r), t.quadraticCurveTo(e + i, n + a, e + i - r, n + a), t.lineTo(e + r, n + a), t.quadraticCurveTo(e, n + a, e, n + a - r), t.lineTo(e, n + r), t.quadraticCurveTo(e, n, e + r, n), t.closePath();\n        }, r.color = i ? function (e) {\n          return e instanceof CanvasGradient && (e = t.defaults.global.defaultColor), i(e);\n        } : function (t) {\n          return console.error(\"Color.js not found!\"), t;\n        }, r.isArray = Array.isArray ? function (t) {\n          return Array.isArray(t);\n        } : function (t) {\n          return \"[object Array]\" === Object.prototype.toString.call(t);\n        }, r.arrayEquals = function (t, e) {\n          var n, i, a, o;if (!t || !e || t.length !== e.length) return !1;for (n = 0, i = t.length; n < i; ++n) {\n            if (a = t[n], o = e[n], a instanceof Array && o instanceof Array) {\n              if (!r.arrayEquals(a, o)) return !1;\n            } else if (a !== o) return !1;\n          }return !0;\n        }, r.callback = function (t, e, n) {\n          t && \"function\" == typeof t.call && t.apply(n, e);\n        }, r.getHoverColor = function (t) {\n          return t instanceof CanvasPattern ? t : r.color(t).saturate(.5).darken(.1).rgbString();\n        }, r.callCallback = r.callback;\n      };\n    }, { 2: 2 }], 27: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t, e) {\n          return t.native ? { x: t.x, y: t.y } : o.getRelativePosition(t, e);\n        }function n(t, e) {\n          var n,\n              i,\n              a,\n              r,\n              o,\n              s = t.data.datasets;for (i = 0, r = s.length; i < r; ++i) {\n            if (t.isDatasetVisible(i)) for (n = t.getDatasetMeta(i), a = 0, o = n.data.length; a < o; ++a) {\n              var l = n.data[a];l._view.skip || e(l);\n            }\n          }\n        }function i(t, e) {\n          var i = [];return n(t, function (t) {\n            t.inRange(e.x, e.y) && i.push(t);\n          }), i;\n        }function a(t, e, i, a) {\n          var r = Number.POSITIVE_INFINITY,\n              s = [];return a || (a = o.distanceBetweenPoints), n(t, function (t) {\n            if (!i || t.inRange(e.x, e.y)) {\n              var n = t.getCenterPoint(),\n                  o = a(e, n);o < r ? (s = [t], r = o) : o === r && s.push(t);\n            }\n          }), s;\n        }function r(t, n, r) {\n          var o = e(n, t),\n              s = function s(t, e) {\n            return Math.abs(t.x - e.x);\n          },\n              l = r.intersect ? i(t, o) : a(t, o, !1, s),\n              u = [];return l.length ? (t.data.datasets.forEach(function (e, n) {\n            if (t.isDatasetVisible(n)) {\n              var i = t.getDatasetMeta(n),\n                  a = i.data[l[0]._index];a && !a._view.skip && u.push(a);\n            }\n          }), u) : [];\n        }var o = t.helpers;t.Interaction = { modes: { single: function single(t, i) {\n              var a = e(i, t),\n                  r = [];return n(t, function (t) {\n                if (t.inRange(a.x, a.y)) return r.push(t), r;\n              }), r.slice(0, 1);\n            }, label: r, index: r, dataset: function dataset(t, n, r) {\n              var o = e(n, t),\n                  s = r.intersect ? i(t, o) : a(t, o, !1);return s.length > 0 && (s = t.getDatasetMeta(s[0]._datasetIndex).data), s;\n            }, \"x-axis\": function xAxis(t, e) {\n              return r(t, e, !0);\n            }, point: function point(t, n) {\n              var a = e(n, t);return i(t, a);\n            }, nearest: function nearest(t, n, i) {\n              var r = e(n, t),\n                  o = a(t, r, i.intersect);return o.length > 1 && o.sort(function (t, e) {\n                var n = t.getArea(),\n                    i = e.getArea(),\n                    a = n - i;return 0 === a && (a = t._datasetIndex - e._datasetIndex), a;\n              }), o.slice(0, 1);\n            }, x: function x(t, i, a) {\n              var r = e(i, t),\n                  o = [],\n                  s = !1;return n(t, function (t) {\n                t.inXRange(r.x) && o.push(t), t.inRange(r.x, r.y) && (s = !0);\n              }), a.intersect && !s && (o = []), o;\n            }, y: function y(t, i, a) {\n              var r = e(i, t),\n                  o = [],\n                  s = !1;return n(t, function (t) {\n                t.inYRange(r.y) && o.push(t), t.inRange(r.x, r.y) && (s = !0);\n              }), a.intersect && !s && (o = []), o;\n            } } };\n      };\n    }, {}], 28: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function () {\n        var t = function t(_t2, e) {\n          return this.construct(_t2, e), this;\n        };return t.defaults = { global: { responsive: !0, responsiveAnimationDuration: 0, maintainAspectRatio: !0, events: [\"mousemove\", \"mouseout\", \"click\", \"touchstart\", \"touchmove\"], hover: { onHover: null, mode: \"nearest\", intersect: !0, animationDuration: 400 }, onClick: null, defaultColor: \"rgba(0,0,0,0.1)\", defaultFontColor: \"#666\", defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\", defaultFontSize: 12, defaultFontStyle: \"normal\", showLines: !0, elements: {}, legendCallback: function legendCallback(t) {\n              var e = [];e.push('<ul class=\"' + t.id + '-legend\">');for (var n = 0; n < t.data.datasets.length; n++) {\n                e.push('<li><span style=\"background-color:' + t.data.datasets[n].backgroundColor + '\"></span>'), t.data.datasets[n].label && e.push(t.data.datasets[n].label), e.push(\"</li>\");\n              }return e.push(\"</ul>\"), e.join(\"\");\n            } } }, t.Chart = t, t;\n      };\n    }, {}], 29: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t, e) {\n          return i.where(t, function (t) {\n            return t.position === e;\n          });\n        }function n(t, e) {\n          t.forEach(function (t, e) {\n            return t._tmpIndex_ = e, t;\n          }), t.sort(function (t, n) {\n            var i = e ? n : t,\n                a = e ? t : n;return i.weight === a.weight ? i._tmpIndex_ - a._tmpIndex_ : i.weight - a.weight;\n          }), t.forEach(function (t) {\n            delete t._tmpIndex_;\n          });\n        }var i = t.helpers;t.layoutService = { defaults: {}, addBox: function addBox(t, e) {\n            t.boxes || (t.boxes = []), e.fullWidth = e.fullWidth || !1, e.position = e.position || \"top\", e.weight = e.weight || 0, t.boxes.push(e);\n          }, removeBox: function removeBox(t, e) {\n            var n = t.boxes ? t.boxes.indexOf(e) : -1;n !== -1 && t.boxes.splice(n, 1);\n          }, configure: function configure(t, e, n) {\n            for (var i, a = [\"fullWidth\", \"position\", \"weight\"], r = a.length, o = 0; o < r; ++o) {\n              i = a[o], n.hasOwnProperty(i) && (e[i] = n[i]);\n            }\n          }, update: function update(t, a, r) {\n            function o(t) {\n              var e,\n                  n = t.isHorizontal();n ? (e = t.update(t.fullWidth ? _ : C, D), P -= e.height) : (e = t.update(S, M), C -= e.width), T.push({ horizontal: n, minSize: e, box: t });\n            }function s(t) {\n              var e = i.findNextWhere(T, function (e) {\n                return e.box === t;\n              });if (e) if (t.isHorizontal()) {\n                var n = { left: Math.max(R, I), right: Math.max(L, A), top: 0, bottom: 0 };t.update(t.fullWidth ? _ : C, k / 2, n);\n              } else t.update(e.minSize.width, P);\n            }function l(t) {\n              var e = i.findNextWhere(T, function (e) {\n                return e.box === t;\n              }),\n                  n = { left: 0, right: 0, top: V, bottom: W };e && t.update(e.minSize.width, P, n);\n            }function u(t) {\n              t.isHorizontal() ? (t.left = t.fullWidth ? h : R, t.right = t.fullWidth ? a - f : R + C, t.top = H, t.bottom = H + t.height, H = t.bottom) : (t.left = E, t.right = E + t.width, t.top = V, t.bottom = V + P, E = t.right);\n            }if (t) {\n              var d = t.options.layout,\n                  c = d ? d.padding : null,\n                  h = 0,\n                  f = 0,\n                  g = 0,\n                  p = 0;isNaN(c) ? (h = c.left || 0, f = c.right || 0, g = c.top || 0, p = c.bottom || 0) : (h = c, f = c, g = c, p = c);var m = e(t.boxes, \"left\"),\n                  v = e(t.boxes, \"right\"),\n                  y = e(t.boxes, \"top\"),\n                  b = e(t.boxes, \"bottom\"),\n                  x = e(t.boxes, \"chartArea\");n(m, !0), n(v, !1), n(y, !0), n(b, !1);var _ = a - h - f,\n                  k = r - g - p,\n                  w = _ / 2,\n                  M = k / 2,\n                  S = (a - w) / (m.length + v.length),\n                  D = (r - M) / (y.length + b.length),\n                  C = _,\n                  P = k,\n                  T = [];i.each(m.concat(v, y, b), o);var I = 0,\n                  A = 0,\n                  F = 0,\n                  O = 0;i.each(y.concat(b), function (t) {\n                if (t.getPadding) {\n                  var e = t.getPadding();I = Math.max(I, e.left), A = Math.max(A, e.right);\n                }\n              }), i.each(m.concat(v), function (t) {\n                if (t.getPadding) {\n                  var e = t.getPadding();F = Math.max(F, e.top), O = Math.max(O, e.bottom);\n                }\n              });var R = h,\n                  L = f,\n                  V = g,\n                  W = p;i.each(m.concat(v), s), i.each(m, function (t) {\n                R += t.width;\n              }), i.each(v, function (t) {\n                L += t.width;\n              }), i.each(y.concat(b), s), i.each(y, function (t) {\n                V += t.height;\n              }), i.each(b, function (t) {\n                W += t.height;\n              }), i.each(m.concat(v), l), R = h, L = f, V = g, W = p, i.each(m, function (t) {\n                R += t.width;\n              }), i.each(v, function (t) {\n                L += t.width;\n              }), i.each(y, function (t) {\n                V += t.height;\n              }), i.each(b, function (t) {\n                W += t.height;\n              });var Y = Math.max(I - R, 0);R += Y, L += Math.max(A - L, 0);var z = Math.max(F - V, 0);V += z, W += Math.max(O - W, 0);var N = r - V - W,\n                  B = a - R - L;B === C && N === P || (i.each(m, function (t) {\n                t.height = N;\n              }), i.each(v, function (t) {\n                t.height = N;\n              }), i.each(y, function (t) {\n                t.fullWidth || (t.width = B);\n              }), i.each(b, function (t) {\n                t.fullWidth || (t.width = B);\n              }), P = N, C = B);var E = h + Y,\n                  H = g + z;i.each(m.concat(y), u), E += C, H += P, i.each(v, u), i.each(b, u), t.chartArea = { left: R, top: V, right: R + C, bottom: V + P }, i.each(x, function (e) {\n                e.left = t.chartArea.left, e.top = t.chartArea.top, e.right = t.chartArea.right, e.bottom = t.chartArea.bottom, e.update(C, P);\n              });\n            }\n          } };\n      };\n    }, {}], 30: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers;t.defaults.global.plugins = {}, t.plugins = { _plugins: [], _cacheId: 0, register: function register(t) {\n            var e = this._plugins;[].concat(t).forEach(function (t) {\n              e.indexOf(t) === -1 && e.push(t);\n            }), this._cacheId++;\n          }, unregister: function unregister(t) {\n            var e = this._plugins;[].concat(t).forEach(function (t) {\n              var n = e.indexOf(t);n !== -1 && e.splice(n, 1);\n            }), this._cacheId++;\n          }, clear: function clear() {\n            this._plugins = [], this._cacheId++;\n          }, count: function count() {\n            return this._plugins.length;\n          }, getAll: function getAll() {\n            return this._plugins;\n          }, notify: function notify(t, e, n) {\n            var i,\n                a,\n                r,\n                o,\n                s,\n                l = this.descriptors(t),\n                u = l.length;for (i = 0; i < u; ++i) {\n              if (a = l[i], r = a.plugin, s = r[e], \"function\" == typeof s && (o = [t].concat(n || []), o.push(a.options), s.apply(r, o) === !1)) return !1;\n            }return !0;\n          }, descriptors: function descriptors(n) {\n            var i = n._plugins || (n._plugins = {});if (i.id === this._cacheId) return i.descriptors;var a = [],\n                r = [],\n                o = n && n.config || {},\n                s = t.defaults.global.plugins,\n                l = o.options && o.options.plugins || {};return this._plugins.concat(o.plugins || []).forEach(function (t) {\n              var n = a.indexOf(t);if (n === -1) {\n                var i = t.id,\n                    o = l[i];o !== !1 && (o === !0 && (o = e.clone(s[i])), a.push(t), r.push({ plugin: t, options: o || {} }));\n              }\n            }), i.descriptors = r, i.id = this._cacheId, r;\n          } }, t.pluginService = t.plugins, t.PluginBase = t.Element.extend({});\n      };\n    }, {}], 31: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t, e, n) {\n          return i.isArray(e) ? i.longestText(t, n, e) : t.measureText(e).width;\n        }function n(e) {\n          var n = i.getValueOrDefault,\n              a = t.defaults.global,\n              r = n(e.fontSize, a.defaultFontSize),\n              o = n(e.fontStyle, a.defaultFontStyle),\n              s = n(e.fontFamily, a.defaultFontFamily);return { size: r, style: o, family: s, font: i.fontString(r, o, s) };\n        }var i = t.helpers;t.defaults.scale = { display: !0, position: \"left\", gridLines: { display: !0, color: \"rgba(0, 0, 0, 0.1)\", lineWidth: 1, drawBorder: !0, drawOnChartArea: !0, drawTicks: !0, tickMarkLength: 10, zeroLineWidth: 1, zeroLineColor: \"rgba(0,0,0,0.25)\", zeroLineBorderDash: [], zeroLineBorderDashOffset: 0, offsetGridLines: !1, borderDash: [], borderDashOffset: 0 }, scaleLabel: { labelString: \"\", display: !1 }, ticks: { beginAtZero: !1, minRotation: 0, maxRotation: 50, mirror: !1, padding: 0, reverse: !1, display: !0, autoSkip: !0, autoSkipPadding: 0, labelOffset: 0, callback: t.Ticks.formatters.values } }, t.Scale = t.Element.extend({ getPadding: function getPadding() {\n            var t = this;return { left: t.paddingLeft || 0, top: t.paddingTop || 0, right: t.paddingRight || 0, bottom: t.paddingBottom || 0 };\n          }, beforeUpdate: function beforeUpdate() {\n            i.callback(this.options.beforeUpdate, [this]);\n          }, update: function update(t, e, n) {\n            var a = this;return a.beforeUpdate(), a.maxWidth = t, a.maxHeight = e, a.margins = i.extend({ left: 0, right: 0, top: 0, bottom: 0 }, n), a.longestTextCache = a.longestTextCache || {}, a.beforeSetDimensions(), a.setDimensions(), a.afterSetDimensions(), a.beforeDataLimits(), a.determineDataLimits(), a.afterDataLimits(), a.beforeBuildTicks(), a.buildTicks(), a.afterBuildTicks(), a.beforeTickToLabelConversion(), a.convertTicksToLabels(), a.afterTickToLabelConversion(), a.beforeCalculateTickRotation(), a.calculateTickRotation(), a.afterCalculateTickRotation(), a.beforeFit(), a.fit(), a.afterFit(), a.afterUpdate(), a.minSize;\n          }, afterUpdate: function afterUpdate() {\n            i.callback(this.options.afterUpdate, [this]);\n          }, beforeSetDimensions: function beforeSetDimensions() {\n            i.callback(this.options.beforeSetDimensions, [this]);\n          }, setDimensions: function setDimensions() {\n            var t = this;t.isHorizontal() ? (t.width = t.maxWidth, t.left = 0, t.right = t.width) : (t.height = t.maxHeight, t.top = 0, t.bottom = t.height), t.paddingLeft = 0, t.paddingTop = 0, t.paddingRight = 0, t.paddingBottom = 0;\n          }, afterSetDimensions: function afterSetDimensions() {\n            i.callback(this.options.afterSetDimensions, [this]);\n          }, beforeDataLimits: function beforeDataLimits() {\n            i.callback(this.options.beforeDataLimits, [this]);\n          }, determineDataLimits: i.noop, afterDataLimits: function afterDataLimits() {\n            i.callback(this.options.afterDataLimits, [this]);\n          }, beforeBuildTicks: function beforeBuildTicks() {\n            i.callback(this.options.beforeBuildTicks, [this]);\n          }, buildTicks: i.noop, afterBuildTicks: function afterBuildTicks() {\n            i.callback(this.options.afterBuildTicks, [this]);\n          }, beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n            i.callback(this.options.beforeTickToLabelConversion, [this]);\n          }, convertTicksToLabels: function convertTicksToLabels() {\n            var t = this,\n                e = t.options.ticks;t.ticks = t.ticks.map(e.userCallback || e.callback);\n          }, afterTickToLabelConversion: function afterTickToLabelConversion() {\n            i.callback(this.options.afterTickToLabelConversion, [this]);\n          }, beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n            i.callback(this.options.beforeCalculateTickRotation, [this]);\n          }, calculateTickRotation: function calculateTickRotation() {\n            var t = this,\n                e = t.ctx,\n                a = t.options.ticks,\n                r = n(a);e.font = r.font;var o = a.minRotation || 0;if (t.options.display && t.isHorizontal()) for (var s, l, u = i.longestText(e, r.font, t.ticks, t.longestTextCache), d = u, c = t.getPixelForTick(1) - t.getPixelForTick(0) - 6; d > c && o < a.maxRotation;) {\n              var h = i.toRadians(o);if (s = Math.cos(h), l = Math.sin(h), l * u > t.maxHeight) {\n                o--;break;\n              }o++, d = s * u;\n            }t.labelRotation = o;\n          }, afterCalculateTickRotation: function afterCalculateTickRotation() {\n            i.callback(this.options.afterCalculateTickRotation, [this]);\n          }, beforeFit: function beforeFit() {\n            i.callback(this.options.beforeFit, [this]);\n          }, fit: function fit() {\n            var t = this,\n                a = t.minSize = { width: 0, height: 0 },\n                r = t.options,\n                o = r.ticks,\n                s = r.scaleLabel,\n                l = r.gridLines,\n                u = r.display,\n                d = t.isHorizontal(),\n                c = n(o),\n                h = 1.5 * n(s).size,\n                f = r.gridLines.tickMarkLength;if (d ? a.width = t.isFullWidth() ? t.maxWidth - t.margins.left - t.margins.right : t.maxWidth : a.width = u && l.drawTicks ? f : 0, d ? a.height = u && l.drawTicks ? f : 0 : a.height = t.maxHeight, s.display && u && (d ? a.height += h : a.width += h), o.display && u) {\n              var g = i.longestText(t.ctx, c.font, t.ticks, t.longestTextCache),\n                  p = i.numberOfLabelLines(t.ticks),\n                  m = .5 * c.size;if (d) {\n                t.longestLabelWidth = g;var v = i.toRadians(t.labelRotation),\n                    y = Math.cos(v),\n                    b = Math.sin(v),\n                    x = b * g + c.size * p + m * p;a.height = Math.min(t.maxHeight, a.height + x), t.ctx.font = c.font;var _ = t.ticks[0],\n                    k = e(t.ctx, _, c.font),\n                    w = t.ticks[t.ticks.length - 1],\n                    M = e(t.ctx, w, c.font);0 !== t.labelRotation ? (t.paddingLeft = \"bottom\" === r.position ? y * k + 3 : y * m + 3, t.paddingRight = \"bottom\" === r.position ? y * m + 3 : y * M + 3) : (t.paddingLeft = k / 2 + 3, t.paddingRight = M / 2 + 3);\n              } else o.mirror ? g = 0 : g += t.options.ticks.padding, a.width = Math.min(t.maxWidth, a.width + g), t.paddingTop = c.size / 2, t.paddingBottom = c.size / 2;\n            }t.handleMargins(), t.width = a.width, t.height = a.height;\n          }, handleMargins: function handleMargins() {\n            var t = this;t.margins && (t.paddingLeft = Math.max(t.paddingLeft - t.margins.left, 0), t.paddingTop = Math.max(t.paddingTop - t.margins.top, 0), t.paddingRight = Math.max(t.paddingRight - t.margins.right, 0), t.paddingBottom = Math.max(t.paddingBottom - t.margins.bottom, 0));\n          }, afterFit: function afterFit() {\n            i.callback(this.options.afterFit, [this]);\n          }, isHorizontal: function isHorizontal() {\n            return \"top\" === this.options.position || \"bottom\" === this.options.position;\n          }, isFullWidth: function isFullWidth() {\n            return this.options.fullWidth;\n          }, getRightValue: function getRightValue(t) {\n            return null === t || \"undefined\" == typeof t ? NaN : \"number\" != typeof t || isFinite(t) ? \"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) ? t instanceof Date || t.isValid ? t : this.getRightValue(this.isHorizontal() ? t.x : t.y) : t : NaN;\n          }, getLabelForIndex: i.noop, getPixelForValue: i.noop, getValueForPixel: i.noop, getPixelForTick: function getPixelForTick(t, e) {\n            var n = this;if (n.isHorizontal()) {\n              var i = n.width - (n.paddingLeft + n.paddingRight),\n                  a = i / Math.max(n.ticks.length - (n.options.gridLines.offsetGridLines ? 0 : 1), 1),\n                  r = a * t + n.paddingLeft;e && (r += a / 2);var o = n.left + Math.round(r);return o += n.isFullWidth() ? n.margins.left : 0;\n            }var s = n.height - (n.paddingTop + n.paddingBottom);return n.top + t * (s / (n.ticks.length - 1));\n          }, getPixelForDecimal: function getPixelForDecimal(t) {\n            var e = this;if (e.isHorizontal()) {\n              var n = e.width - (e.paddingLeft + e.paddingRight),\n                  i = n * t + e.paddingLeft,\n                  a = e.left + Math.round(i);return a += e.isFullWidth() ? e.margins.left : 0;\n            }return e.top + t * e.height;\n          }, getBasePixel: function getBasePixel() {\n            return this.getPixelForValue(this.getBaseValue());\n          }, getBaseValue: function getBaseValue() {\n            var t = this,\n                e = t.min,\n                n = t.max;return t.beginAtZero ? 0 : e < 0 && n < 0 ? n : e > 0 && n > 0 ? e : 0;\n          }, draw: function draw(e) {\n            var a = this,\n                r = a.options;if (r.display) {\n              var o,\n                  s,\n                  l = a.ctx,\n                  u = t.defaults.global,\n                  d = r.ticks,\n                  c = r.gridLines,\n                  h = r.scaleLabel,\n                  f = 0 !== a.labelRotation,\n                  g = d.autoSkip,\n                  p = a.isHorizontal();d.maxTicksLimit && (s = d.maxTicksLimit);var m = i.getValueOrDefault(d.fontColor, u.defaultFontColor),\n                  v = n(d),\n                  y = c.drawTicks ? c.tickMarkLength : 0,\n                  b = i.getValueOrDefault(h.fontColor, u.defaultFontColor),\n                  x = n(h),\n                  _ = i.toRadians(a.labelRotation),\n                  k = Math.cos(_),\n                  w = a.longestLabelWidth * k;l.fillStyle = m;var M = [];if (p) {\n                if (o = !1, (w + d.autoSkipPadding) * a.ticks.length > a.width - (a.paddingLeft + a.paddingRight) && (o = 1 + Math.floor((w + d.autoSkipPadding) * a.ticks.length / (a.width - (a.paddingLeft + a.paddingRight)))), s && a.ticks.length > s) for (; !o || a.ticks.length / (o || 1) > s;) {\n                  o || (o = 1), o += 1;\n                }g || (o = !1);\n              }var S = \"right\" === r.position ? a.left : a.right - y,\n                  D = \"right\" === r.position ? a.left + y : a.right,\n                  C = \"bottom\" === r.position ? a.top : a.bottom - y,\n                  P = \"bottom\" === r.position ? a.top + y : a.bottom;if (i.each(a.ticks, function (t, n) {\n                if (void 0 !== t && null !== t) {\n                  var s = a.ticks.length === n + 1,\n                      l = o > 1 && n % o > 0 || n % o === 0 && n + o >= a.ticks.length;if ((!l || s) && void 0 !== t && null !== t) {\n                    var h, g, m, v;n === (\"undefined\" != typeof a.zeroLineIndex ? a.zeroLineIndex : 0) ? (h = c.zeroLineWidth, g = c.zeroLineColor, m = c.zeroLineBorderDash, v = c.zeroLineBorderDashOffset) : (h = i.getValueAtIndexOrDefault(c.lineWidth, n), g = i.getValueAtIndexOrDefault(c.color, n), m = i.getValueOrDefault(c.borderDash, u.borderDash), v = i.getValueOrDefault(c.borderDashOffset, u.borderDashOffset));var b,\n                        x,\n                        k,\n                        w,\n                        T,\n                        I,\n                        A,\n                        F,\n                        O,\n                        R,\n                        L = \"middle\",\n                        V = \"middle\";if (p) {\n                      \"bottom\" === r.position ? (V = f ? \"middle\" : \"top\", L = f ? \"right\" : \"center\", R = a.top + y) : (V = f ? \"middle\" : \"bottom\", L = f ? \"left\" : \"center\", R = a.bottom - y);var W = a.getPixelForTick(n) + i.aliasPixel(h);O = a.getPixelForTick(n, c.offsetGridLines) + d.labelOffset, b = k = T = A = W, x = C, w = P, I = e.top, F = e.bottom;\n                    } else {\n                      var Y,\n                          z = \"left\" === r.position,\n                          N = d.padding;d.mirror ? (L = z ? \"left\" : \"right\", Y = N) : (L = z ? \"right\" : \"left\", Y = y + N), O = z ? a.right - Y : a.left + Y;var B = a.getPixelForTick(n);B += i.aliasPixel(h), R = a.getPixelForTick(n, c.offsetGridLines), b = S, k = D, T = e.left, A = e.right, x = w = I = F = B;\n                    }M.push({ tx1: b, ty1: x, tx2: k, ty2: w, x1: T, y1: I, x2: A, y2: F, labelX: O, labelY: R, glWidth: h, glColor: g, glBorderDash: m, glBorderDashOffset: v, rotation: -1 * _, label: t, textBaseline: V, textAlign: L });\n                  }\n                }\n              }), i.each(M, function (t) {\n                if (c.display && (l.save(), l.lineWidth = t.glWidth, l.strokeStyle = t.glColor, l.setLineDash && (l.setLineDash(t.glBorderDash), l.lineDashOffset = t.glBorderDashOffset), l.beginPath(), c.drawTicks && (l.moveTo(t.tx1, t.ty1), l.lineTo(t.tx2, t.ty2)), c.drawOnChartArea && (l.moveTo(t.x1, t.y1), l.lineTo(t.x2, t.y2)), l.stroke(), l.restore()), d.display) {\n                  l.save(), l.translate(t.labelX, t.labelY), l.rotate(t.rotation), l.font = v.font, l.textBaseline = t.textBaseline, l.textAlign = t.textAlign;var e = t.label;if (i.isArray(e)) for (var n = 0, a = 0; n < e.length; ++n) {\n                    l.fillText(\"\" + e[n], 0, a), a += 1.5 * v.size;\n                  } else l.fillText(e, 0, 0);l.restore();\n                }\n              }), h.display) {\n                var T,\n                    I,\n                    A = 0;if (p) T = a.left + (a.right - a.left) / 2, I = \"bottom\" === r.position ? a.bottom - x.size / 2 : a.top + x.size / 2;else {\n                  var F = \"left\" === r.position;T = F ? a.left + x.size / 2 : a.right - x.size / 2, I = a.top + (a.bottom - a.top) / 2, A = F ? -.5 * Math.PI : .5 * Math.PI;\n                }l.save(), l.translate(T, I), l.rotate(A), l.textAlign = \"center\", l.textBaseline = \"middle\", l.fillStyle = b, l.font = x.font, l.fillText(h.labelString, 0, 0), l.restore();\n              }if (c.drawBorder) {\n                l.lineWidth = i.getValueAtIndexOrDefault(c.lineWidth, 0), l.strokeStyle = i.getValueAtIndexOrDefault(c.color, 0);var O = a.left,\n                    R = a.right,\n                    L = a.top,\n                    V = a.bottom,\n                    W = i.aliasPixel(l.lineWidth);p ? (L = V = \"top\" === r.position ? a.bottom : a.top, L += W, V += W) : (O = R = \"left\" === r.position ? a.right : a.left, O += W, R += W), l.beginPath(), l.moveTo(O, L), l.lineTo(R, V), l.stroke();\n              }\n            }\n          } });\n      };\n    }, {}], 32: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers;t.scaleService = { constructors: {}, defaults: {}, registerScaleType: function registerScaleType(t, n, i) {\n            this.constructors[t] = n, this.defaults[t] = e.clone(i);\n          }, getScaleConstructor: function getScaleConstructor(t) {\n            return this.constructors.hasOwnProperty(t) ? this.constructors[t] : void 0;\n          }, getScaleDefaults: function getScaleDefaults(n) {\n            return this.defaults.hasOwnProperty(n) ? e.scaleMerge(t.defaults.scale, this.defaults[n]) : {};\n          }, updateScaleDefaults: function updateScaleDefaults(t, n) {\n            var i = this.defaults;i.hasOwnProperty(t) && (i[t] = e.extend(i[t], n));\n          }, addScalesToLayout: function addScalesToLayout(n) {\n            e.each(n.scales, function (e) {\n              e.fullWidth = e.options.fullWidth, e.position = e.options.position, e.weight = e.options.weight, t.layoutService.addBox(n, e);\n            });\n          } };\n      };\n    }, {}], 33: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers;t.Ticks = { generators: { linear: function linear(t, n) {\n              var i,\n                  a = [];if (t.stepSize && t.stepSize > 0) i = t.stepSize;else {\n                var r = e.niceNum(n.max - n.min, !1);i = e.niceNum(r / (t.maxTicks - 1), !0);\n              }var o = Math.floor(n.min / i) * i,\n                  s = Math.ceil(n.max / i) * i;t.min && t.max && t.stepSize && e.almostWhole((t.max - t.min) / t.stepSize, i / 1e3) && (o = t.min, s = t.max);var l = (s - o) / i;l = e.almostEquals(l, Math.round(l), i / 1e3) ? Math.round(l) : Math.ceil(l), a.push(void 0 !== t.min ? t.min : o);for (var u = 1; u < l; ++u) {\n                a.push(o + u * i);\n              }return a.push(void 0 !== t.max ? t.max : s), a;\n            }, logarithmic: function logarithmic(t, n) {\n              var i,\n                  a,\n                  r = [],\n                  o = e.getValueOrDefault,\n                  s = o(t.min, Math.pow(10, Math.floor(e.log10(n.min)))),\n                  l = Math.floor(e.log10(n.max)),\n                  u = Math.ceil(n.max / Math.pow(10, l));0 === s ? (i = Math.floor(e.log10(n.minNotZero)), a = Math.floor(n.minNotZero / Math.pow(10, i)), r.push(s), s = a * Math.pow(10, i)) : (i = Math.floor(e.log10(s)), a = Math.floor(s / Math.pow(10, i)));do {\n                r.push(s), ++a, 10 === a && (a = 1, ++i), s = a * Math.pow(10, i);\n              } while (i < l || i === l && a < u);var d = o(t.max, s);return r.push(d), r;\n            } }, formatters: { values: function values(t) {\n              return e.isArray(t) ? t : \"\" + t;\n            }, linear: function linear(t, n, i) {\n              var a = i.length > 3 ? i[2] - i[1] : i[1] - i[0];Math.abs(a) > 1 && t !== Math.floor(t) && (a = t - Math.floor(t));var r = e.log10(Math.abs(a)),\n                  o = \"\";if (0 !== t) {\n                var s = -1 * Math.floor(r);s = Math.max(Math.min(s, 20), 0), o = t.toFixed(s);\n              } else o = \"0\";return o;\n            }, logarithmic: function logarithmic(t, n, i) {\n              var a = t / Math.pow(10, Math.floor(e.log10(t)));return 0 === t ? \"0\" : 1 === a || 2 === a || 5 === a || 0 === n || n === i.length - 1 ? t.toExponential() : \"\";\n            } } };\n      };\n    }, {}], 34: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t, e) {\n          var n = l.color(t);return n.alpha(e * n.alpha()).rgbaString();\n        }function n(t, e) {\n          return e && (l.isArray(e) ? Array.prototype.push.apply(t, e) : t.push(e)), t;\n        }function i(t) {\n          var e = t._xScale,\n              n = t._yScale || t._scale,\n              i = t._index,\n              a = t._datasetIndex;return { xLabel: e ? e.getLabelForIndex(i, a) : \"\", yLabel: n ? n.getLabelForIndex(i, a) : \"\", index: i, datasetIndex: a, x: t._model.x, y: t._model.y };\n        }function a(e) {\n          var n = t.defaults.global,\n              i = l.getValueOrDefault;return { xPadding: e.xPadding, yPadding: e.yPadding, xAlign: e.xAlign, yAlign: e.yAlign, bodyFontColor: e.bodyFontColor, _bodyFontFamily: i(e.bodyFontFamily, n.defaultFontFamily), _bodyFontStyle: i(e.bodyFontStyle, n.defaultFontStyle), _bodyAlign: e.bodyAlign, bodyFontSize: i(e.bodyFontSize, n.defaultFontSize), bodySpacing: e.bodySpacing, titleFontColor: e.titleFontColor, _titleFontFamily: i(e.titleFontFamily, n.defaultFontFamily), _titleFontStyle: i(e.titleFontStyle, n.defaultFontStyle), titleFontSize: i(e.titleFontSize, n.defaultFontSize), _titleAlign: e.titleAlign, titleSpacing: e.titleSpacing, titleMarginBottom: e.titleMarginBottom, footerFontColor: e.footerFontColor, _footerFontFamily: i(e.footerFontFamily, n.defaultFontFamily), _footerFontStyle: i(e.footerFontStyle, n.defaultFontStyle), footerFontSize: i(e.footerFontSize, n.defaultFontSize), _footerAlign: e.footerAlign, footerSpacing: e.footerSpacing, footerMarginTop: e.footerMarginTop, caretSize: e.caretSize, cornerRadius: e.cornerRadius, backgroundColor: e.backgroundColor, opacity: 0, legendColorBackground: e.multiKeyBackground, displayColors: e.displayColors, borderColor: e.borderColor, borderWidth: e.borderWidth };\n        }function r(t, e) {\n          var n = t._chart.ctx,\n              i = 2 * e.yPadding,\n              a = 0,\n              r = e.body,\n              o = r.reduce(function (t, e) {\n            return t + e.before.length + e.lines.length + e.after.length;\n          }, 0);o += e.beforeBody.length + e.afterBody.length;var s = e.title.length,\n              u = e.footer.length,\n              d = e.titleFontSize,\n              c = e.bodyFontSize,\n              h = e.footerFontSize;i += s * d, i += s ? (s - 1) * e.titleSpacing : 0, i += s ? e.titleMarginBottom : 0, i += o * c, i += o ? (o - 1) * e.bodySpacing : 0, i += u ? e.footerMarginTop : 0, i += u * h, i += u ? (u - 1) * e.footerSpacing : 0;var f = 0,\n              g = function g(t) {\n            a = Math.max(a, n.measureText(t).width + f);\n          };return n.font = l.fontString(d, e._titleFontStyle, e._titleFontFamily), l.each(e.title, g), n.font = l.fontString(c, e._bodyFontStyle, e._bodyFontFamily), l.each(e.beforeBody.concat(e.afterBody), g), f = e.displayColors ? c + 2 : 0, l.each(r, function (t) {\n            l.each(t.before, g), l.each(t.lines, g), l.each(t.after, g);\n          }), f = 0, n.font = l.fontString(h, e._footerFontStyle, e._footerFontFamily), l.each(e.footer, g), a += 2 * e.xPadding, { width: a, height: i };\n        }function o(t, e) {\n          var n = t._model,\n              i = t._chart,\n              a = t._chart.chartArea,\n              r = \"center\",\n              o = \"center\";n.y < e.height ? o = \"top\" : n.y > i.height - e.height && (o = \"bottom\");var s,\n              l,\n              u,\n              d,\n              c,\n              h = (a.left + a.right) / 2,\n              f = (a.top + a.bottom) / 2;\"center\" === o ? (s = function s(t) {\n            return t <= h;\n          }, l = function l(t) {\n            return t > h;\n          }) : (s = function s(t) {\n            return t <= e.width / 2;\n          }, l = function l(t) {\n            return t >= i.width - e.width / 2;\n          }), u = function u(t) {\n            return t + e.width > i.width;\n          }, d = function d(t) {\n            return t - e.width < 0;\n          }, c = function c(t) {\n            return t <= f ? \"top\" : \"bottom\";\n          }, s(n.x) ? (r = \"left\", u(n.x) && (r = \"center\", o = c(n.y))) : l(n.x) && (r = \"right\", d(n.x) && (r = \"center\", o = c(n.y)));var g = t._options;return { xAlign: g.xAlign ? g.xAlign : r, yAlign: g.yAlign ? g.yAlign : o };\n        }function s(t, e, n) {\n          var i = t.x,\n              a = t.y,\n              r = t.caretSize,\n              o = t.caretPadding,\n              s = t.cornerRadius,\n              l = n.xAlign,\n              u = n.yAlign,\n              d = r + o,\n              c = s + o;return \"right\" === l ? i -= e.width : \"center\" === l && (i -= e.width / 2), \"top\" === u ? a += d : a -= \"bottom\" === u ? e.height + d : e.height / 2, \"center\" === u ? \"left\" === l ? i += d : \"right\" === l && (i -= d) : \"left\" === l ? i -= c : \"right\" === l && (i += c), { x: i, y: a };\n        }var l = t.helpers;t.defaults.global.tooltips = { enabled: !0, custom: null, mode: \"nearest\", position: \"average\", intersect: !0, backgroundColor: \"rgba(0,0,0,0.8)\", titleFontStyle: \"bold\", titleSpacing: 2, titleMarginBottom: 6, titleFontColor: \"#fff\", titleAlign: \"left\", bodySpacing: 2, bodyFontColor: \"#fff\", bodyAlign: \"left\", footerFontStyle: \"bold\", footerSpacing: 2, footerMarginTop: 6, footerFontColor: \"#fff\", footerAlign: \"left\", yPadding: 6, xPadding: 6, caretPadding: 2, caretSize: 5, cornerRadius: 6, multiKeyBackground: \"#fff\", displayColors: !0, borderColor: \"rgba(0,0,0,0)\", borderWidth: 0, callbacks: { beforeTitle: l.noop, title: function title(t, e) {\n              var n = \"\",\n                  i = e.labels,\n                  a = i ? i.length : 0;if (t.length > 0) {\n                var r = t[0];r.xLabel ? n = r.xLabel : a > 0 && r.index < a && (n = i[r.index]);\n              }return n;\n            }, afterTitle: l.noop, beforeBody: l.noop, beforeLabel: l.noop, label: function label(t, e) {\n              var n = e.datasets[t.datasetIndex].label || \"\";return n && (n += \": \"), n += t.yLabel;\n            }, labelColor: function labelColor(t, e) {\n              var n = e.getDatasetMeta(t.datasetIndex),\n                  i = n.data[t.index],\n                  a = i._view;return { borderColor: a.borderColor, backgroundColor: a.backgroundColor };\n            }, afterLabel: l.noop, afterBody: l.noop, beforeFooter: l.noop, footer: l.noop, afterFooter: l.noop } }, t.Tooltip = t.Element.extend({ initialize: function initialize() {\n            this._model = a(this._options);\n          }, getTitle: function getTitle() {\n            var t = this,\n                e = t._options,\n                i = e.callbacks,\n                a = i.beforeTitle.apply(t, arguments),\n                r = i.title.apply(t, arguments),\n                o = i.afterTitle.apply(t, arguments),\n                s = [];return s = n(s, a), s = n(s, r), s = n(s, o);\n          }, getBeforeBody: function getBeforeBody() {\n            var t = this._options.callbacks.beforeBody.apply(this, arguments);return l.isArray(t) ? t : void 0 !== t ? [t] : [];\n          }, getBody: function getBody(t, e) {\n            var i = this,\n                a = i._options.callbacks,\n                r = [];return l.each(t, function (t) {\n              var o = { before: [], lines: [], after: [] };n(o.before, a.beforeLabel.call(i, t, e)), n(o.lines, a.label.call(i, t, e)), n(o.after, a.afterLabel.call(i, t, e)), r.push(o);\n            }), r;\n          }, getAfterBody: function getAfterBody() {\n            var t = this._options.callbacks.afterBody.apply(this, arguments);return l.isArray(t) ? t : void 0 !== t ? [t] : [];\n          }, getFooter: function getFooter() {\n            var t = this,\n                e = t._options.callbacks,\n                i = e.beforeFooter.apply(t, arguments),\n                a = e.footer.apply(t, arguments),\n                r = e.afterFooter.apply(t, arguments),\n                o = [];return o = n(o, i), o = n(o, a), o = n(o, r);\n          }, update: function update(e) {\n            var n,\n                u,\n                d = this,\n                c = d._options,\n                h = d._model,\n                f = d._model = a(c),\n                g = d._active,\n                p = d._data,\n                m = { xAlign: h.xAlign, yAlign: h.yAlign },\n                v = { x: h.x, y: h.y },\n                y = { width: h.width, height: h.height },\n                b = { x: h.caretX, y: h.caretY };if (g.length) {\n              f.opacity = 1;var x = [];b = t.Tooltip.positioners[c.position](g, d._eventPosition);var _ = [];for (n = 0, u = g.length; n < u; ++n) {\n                _.push(i(g[n]));\n              }c.filter && (_ = _.filter(function (t) {\n                return c.filter(t, p);\n              })), c.itemSort && (_ = _.sort(function (t, e) {\n                return c.itemSort(t, e, p);\n              })), l.each(_, function (t) {\n                x.push(c.callbacks.labelColor.call(d, t, d._chart));\n              }), f.title = d.getTitle(_, p), f.beforeBody = d.getBeforeBody(_, p), f.body = d.getBody(_, p), f.afterBody = d.getAfterBody(_, p), f.footer = d.getFooter(_, p), f.x = Math.round(b.x), f.y = Math.round(b.y), f.caretPadding = c.caretPadding, f.labelColors = x, f.dataPoints = _, y = r(this, f), m = o(this, y), v = s(f, y, m);\n            } else f.opacity = 0;return f.xAlign = m.xAlign, f.yAlign = m.yAlign, f.x = v.x, f.y = v.y, f.width = y.width, f.height = y.height, f.caretX = b.x, f.caretY = b.y, d._model = f, e && c.custom && c.custom.call(d, f), d;\n          }, drawCaret: function drawCaret(t, e) {\n            var n = this._chart.ctx,\n                i = this._view,\n                a = this.getCaretPosition(t, e, i);n.lineTo(a.x1, a.y1), n.lineTo(a.x2, a.y2), n.lineTo(a.x3, a.y3);\n          }, getCaretPosition: function getCaretPosition(t, e, n) {\n            var i,\n                a,\n                r,\n                o,\n                s,\n                l,\n                u = n.caretSize,\n                d = n.cornerRadius,\n                c = n.xAlign,\n                h = n.yAlign,\n                f = t.x,\n                g = t.y,\n                p = e.width,\n                m = e.height;if (\"center\" === h) s = g + m / 2, \"left\" === c ? (i = f, a = i - u, r = i, o = s + u, l = s - u) : (i = f + p, a = i + u, r = i, o = s - u, l = s + u);else if (\"left\" === c ? (a = f + d + u, i = a - u, r = a + u) : \"right\" === c ? (a = f + p - d - u, i = a - u, r = a + u) : (a = f + p / 2, i = a - u, r = a + u), \"top\" === h) o = g, s = o - u, l = o;else {\n              o = g + m, s = o + u, l = o;var v = r;r = i, i = v;\n            }return { x1: i, x2: a, x3: r, y1: o, y2: s, y3: l };\n          }, drawTitle: function drawTitle(t, n, i, a) {\n            var r = n.title;if (r.length) {\n              i.textAlign = n._titleAlign, i.textBaseline = \"top\";var o = n.titleFontSize,\n                  s = n.titleSpacing;i.fillStyle = e(n.titleFontColor, a), i.font = l.fontString(o, n._titleFontStyle, n._titleFontFamily);var u, d;for (u = 0, d = r.length; u < d; ++u) {\n                i.fillText(r[u], t.x, t.y), t.y += o + s, u + 1 === r.length && (t.y += n.titleMarginBottom - s);\n              }\n            }\n          }, drawBody: function drawBody(t, n, i, a) {\n            var r = n.bodyFontSize,\n                o = n.bodySpacing,\n                s = n.body;i.textAlign = n._bodyAlign, i.textBaseline = \"top\";var u = e(n.bodyFontColor, a);i.fillStyle = u, i.font = l.fontString(r, n._bodyFontStyle, n._bodyFontFamily);var d = 0,\n                c = function c(e) {\n              i.fillText(e, t.x + d, t.y), t.y += r + o;\n            };l.each(n.beforeBody, c);var h = n.displayColors;d = h ? r + 2 : 0, l.each(s, function (o, s) {\n              l.each(o.before, c), l.each(o.lines, function (o) {\n                h && (i.fillStyle = e(n.legendColorBackground, a), i.fillRect(t.x, t.y, r, r), i.strokeStyle = e(n.labelColors[s].borderColor, a), i.strokeRect(t.x, t.y, r, r), i.fillStyle = e(n.labelColors[s].backgroundColor, a), i.fillRect(t.x + 1, t.y + 1, r - 2, r - 2), i.fillStyle = u), c(o);\n              }), l.each(o.after, c);\n            }), d = 0, l.each(n.afterBody, c), t.y -= o;\n          }, drawFooter: function drawFooter(t, n, i, a) {\n            var r = n.footer;r.length && (t.y += n.footerMarginTop, i.textAlign = n._footerAlign, i.textBaseline = \"top\", i.fillStyle = e(n.footerFontColor, a), i.font = l.fontString(n.footerFontSize, n._footerFontStyle, n._footerFontFamily), l.each(r, function (e) {\n              i.fillText(e, t.x, t.y), t.y += n.footerFontSize + n.footerSpacing;\n            }));\n          }, drawBackground: function drawBackground(t, n, i, a, r) {\n            i.fillStyle = e(n.backgroundColor, r), i.strokeStyle = e(n.borderColor, r), i.lineWidth = n.borderWidth;var o = n.xAlign,\n                s = n.yAlign,\n                l = t.x,\n                u = t.y,\n                d = a.width,\n                c = a.height,\n                h = n.cornerRadius;i.beginPath(), i.moveTo(l + h, u), \"top\" === s && this.drawCaret(t, a), i.lineTo(l + d - h, u), i.quadraticCurveTo(l + d, u, l + d, u + h), \"center\" === s && \"right\" === o && this.drawCaret(t, a), i.lineTo(l + d, u + c - h), i.quadraticCurveTo(l + d, u + c, l + d - h, u + c), \"bottom\" === s && this.drawCaret(t, a), i.lineTo(l + h, u + c), i.quadraticCurveTo(l, u + c, l, u + c - h), \"center\" === s && \"left\" === o && this.drawCaret(t, a), i.lineTo(l, u + h), i.quadraticCurveTo(l, u, l + h, u), i.closePath(), i.fill(), n.borderWidth > 0 && i.stroke();\n          }, draw: function draw() {\n            var t = this._chart.ctx,\n                e = this._view;if (0 !== e.opacity) {\n              var n = { width: e.width, height: e.height },\n                  i = { x: e.x, y: e.y },\n                  a = Math.abs(e.opacity < .001) ? 0 : e.opacity,\n                  r = e.title.length || e.beforeBody.length || e.body.length || e.afterBody.length || e.footer.length;this._options.enabled && r && (this.drawBackground(i, e, t, n, a), i.x += e.xPadding, i.y += e.yPadding, this.drawTitle(i, e, t, a), this.drawBody(i, e, t, a), this.drawFooter(i, e, t, a));\n            }\n          }, handleEvent: function handleEvent(t) {\n            var e = this,\n                n = e._options,\n                i = !1;if (e._lastActive = e._lastActive || [], \"mouseout\" === t.type ? e._active = [] : e._active = e._chart.getElementsAtEventForMode(t, n.mode, n), i = !l.arrayEquals(e._active, e._lastActive), !i) return !1;if (e._lastActive = e._active, n.enabled || n.custom) {\n              e._eventPosition = { x: t.x, y: t.y };var a = e._model;e.update(!0), e.pivot(), i |= a.x !== e._model.x || a.y !== e._model.y;\n            }return i;\n          } }), t.Tooltip.positioners = { average: function average(t) {\n            if (!t.length) return !1;var e,\n                n,\n                i = 0,\n                a = 0,\n                r = 0;for (e = 0, n = t.length; e < n; ++e) {\n              var o = t[e];if (o && o.hasValue()) {\n                var s = o.tooltipPosition();i += s.x, a += s.y, ++r;\n              }\n            }return { x: Math.round(i / r), y: Math.round(a / r) };\n          }, nearest: function nearest(t, e) {\n            var n,\n                i,\n                a,\n                r = e.x,\n                o = e.y,\n                s = Number.POSITIVE_INFINITY;for (i = 0, a = t.length; i < a; ++i) {\n              var u = t[i];if (u && u.hasValue()) {\n                var d = u.getCenterPoint(),\n                    c = l.distanceBetweenPoints(e, d);c < s && (s = c, n = u);\n              }\n            }if (n) {\n              var h = n.tooltipPosition();r = h.x, o = h.y;\n            }return { x: r, y: o };\n          } };\n      };\n    }, {}], 35: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers,\n            n = t.defaults.global;n.elements.arc = { backgroundColor: n.defaultColor, borderColor: \"#fff\", borderWidth: 2 }, t.elements.Arc = t.Element.extend({ inLabelRange: function inLabelRange(t) {\n            var e = this._view;return !!e && Math.pow(t - e.x, 2) < Math.pow(e.radius + e.hoverRadius, 2);\n          }, inRange: function inRange(t, n) {\n            var i = this._view;if (i) {\n              for (var a = e.getAngleFromPoint(i, { x: t, y: n }), r = a.angle, o = a.distance, s = i.startAngle, l = i.endAngle; l < s;) {\n                l += 2 * Math.PI;\n              }for (; r > l;) {\n                r -= 2 * Math.PI;\n              }for (; r < s;) {\n                r += 2 * Math.PI;\n              }var u = r >= s && r <= l,\n                  d = o >= i.innerRadius && o <= i.outerRadius;return u && d;\n            }return !1;\n          }, getCenterPoint: function getCenterPoint() {\n            var t = this._view,\n                e = (t.startAngle + t.endAngle) / 2,\n                n = (t.innerRadius + t.outerRadius) / 2;return { x: t.x + Math.cos(e) * n, y: t.y + Math.sin(e) * n };\n          }, getArea: function getArea() {\n            var t = this._view;return Math.PI * ((t.endAngle - t.startAngle) / (2 * Math.PI)) * (Math.pow(t.outerRadius, 2) - Math.pow(t.innerRadius, 2));\n          }, tooltipPosition: function tooltipPosition() {\n            var t = this._view,\n                e = t.startAngle + (t.endAngle - t.startAngle) / 2,\n                n = (t.outerRadius - t.innerRadius) / 2 + t.innerRadius;return { x: t.x + Math.cos(e) * n, y: t.y + Math.sin(e) * n };\n          }, draw: function draw() {\n            var t = this._chart.ctx,\n                e = this._view,\n                n = e.startAngle,\n                i = e.endAngle;t.beginPath(), t.arc(e.x, e.y, e.outerRadius, n, i), t.arc(e.x, e.y, e.innerRadius, i, n, !0), t.closePath(), t.strokeStyle = e.borderColor, t.lineWidth = e.borderWidth, t.fillStyle = e.backgroundColor, t.fill(), t.lineJoin = \"bevel\", e.borderWidth && t.stroke();\n          } });\n      };\n    }, {}], 36: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers,\n            n = t.defaults.global;t.defaults.global.elements.line = { tension: .4, backgroundColor: n.defaultColor, borderWidth: 3, borderColor: n.defaultColor, borderCapStyle: \"butt\", borderDash: [], borderDashOffset: 0, borderJoinStyle: \"miter\", capBezierPoints: !0, fill: !0 }, t.elements.Line = t.Element.extend({ draw: function draw() {\n            var t,\n                i,\n                a,\n                r,\n                o = this,\n                s = o._view,\n                l = o._chart.ctx,\n                u = s.spanGaps,\n                d = o._children.slice(),\n                c = n.elements.line,\n                h = -1;for (o._loop && d.length && d.push(d[0]), l.save(), l.lineCap = s.borderCapStyle || c.borderCapStyle, l.setLineDash && l.setLineDash(s.borderDash || c.borderDash), l.lineDashOffset = s.borderDashOffset || c.borderDashOffset, l.lineJoin = s.borderJoinStyle || c.borderJoinStyle, l.lineWidth = s.borderWidth || c.borderWidth, l.strokeStyle = s.borderColor || n.defaultColor, l.beginPath(), h = -1, t = 0; t < d.length; ++t) {\n              i = d[t], a = e.previousItem(d, t), r = i._view, 0 === t ? r.skip || (l.moveTo(r.x, r.y), h = t) : (a = h === -1 ? a : d[h], r.skip || (h !== t - 1 && !u || h === -1 ? l.moveTo(r.x, r.y) : e.canvas.lineTo(l, a._view, i._view), h = t));\n            }l.stroke(), l.restore();\n          } });\n      };\n    }, {}], 37: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t) {\n          var e = this._view;return !!e && Math.pow(t - e.x, 2) < Math.pow(e.radius + e.hitRadius, 2);\n        }function n(t) {\n          var e = this._view;return !!e && Math.pow(t - e.y, 2) < Math.pow(e.radius + e.hitRadius, 2);\n        }var i = t.helpers,\n            a = t.defaults.global,\n            r = a.defaultColor;a.elements.point = { radius: 3, pointStyle: \"circle\", backgroundColor: r, borderWidth: 1, borderColor: r, hitRadius: 1, hoverRadius: 4, hoverBorderWidth: 1 }, t.elements.Point = t.Element.extend({ inRange: function inRange(t, e) {\n            var n = this._view;return !!n && Math.pow(t - n.x, 2) + Math.pow(e - n.y, 2) < Math.pow(n.hitRadius + n.radius, 2);\n          }, inLabelRange: e, inXRange: e, inYRange: n, getCenterPoint: function getCenterPoint() {\n            var t = this._view;return { x: t.x, y: t.y };\n          }, getArea: function getArea() {\n            return Math.PI * Math.pow(this._view.radius, 2);\n          }, tooltipPosition: function tooltipPosition() {\n            var t = this._view;return { x: t.x, y: t.y, padding: t.radius + t.borderWidth };\n          }, draw: function draw(e) {\n            var n = this._view,\n                o = this._model,\n                s = this._chart.ctx,\n                l = n.pointStyle,\n                u = n.radius,\n                d = n.x,\n                c = n.y,\n                h = t.helpers.color,\n                f = 1.01,\n                g = 0;n.skip || (s.strokeStyle = n.borderColor || r, s.lineWidth = i.getValueOrDefault(n.borderWidth, a.elements.point.borderWidth), s.fillStyle = n.backgroundColor || r, void 0 !== e && (o.x < e.left || e.right * f < o.x || o.y < e.top || e.bottom * f < o.y) && (o.x < e.left ? g = (d - o.x) / (e.left - o.x) : e.right * f < o.x ? g = (o.x - d) / (o.x - e.right) : o.y < e.top ? g = (c - o.y) / (e.top - o.y) : e.bottom * f < o.y && (g = (o.y - c) / (o.y - e.bottom)), g = Math.round(100 * g) / 100, s.strokeStyle = h(s.strokeStyle).alpha(g).rgbString(), s.fillStyle = h(s.fillStyle).alpha(g).rgbString()), t.canvasHelpers.drawPoint(s, l, u, d, c));\n          } });\n      };\n    }, {}], 38: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t) {\n          return void 0 !== t._view.width;\n        }function n(t) {\n          var n,\n              i,\n              a,\n              r,\n              o = t._view;if (e(t)) {\n            var s = o.width / 2;n = o.x - s, i = o.x + s, a = Math.min(o.y, o.base), r = Math.max(o.y, o.base);\n          } else {\n            var l = o.height / 2;n = Math.min(o.x, o.base), i = Math.max(o.x, o.base), a = o.y - l, r = o.y + l;\n          }return { left: n, top: a, right: i, bottom: r };\n        }var i = t.defaults.global;i.elements.rectangle = { backgroundColor: i.defaultColor, borderWidth: 0, borderColor: i.defaultColor, borderSkipped: \"bottom\" }, t.elements.Rectangle = t.Element.extend({ draw: function draw() {\n            function t(t) {\n              return v[(b + t) % 4];\n            }var e,\n                n,\n                i,\n                a,\n                r,\n                o,\n                s,\n                l = this._chart.ctx,\n                u = this._view,\n                d = u.borderWidth;if (u.horizontal ? (e = u.base, n = u.x, i = u.y - u.height / 2, a = u.y + u.height / 2, r = n > e ? 1 : -1, o = 1, s = u.borderSkipped || \"left\") : (e = u.x - u.width / 2, n = u.x + u.width / 2, i = u.y, a = u.base, r = 1, o = a > i ? 1 : -1, s = u.borderSkipped || \"bottom\"), d) {\n              var c = Math.min(Math.abs(e - n), Math.abs(i - a));d = d > c ? c : d;var h = d / 2,\n                  f = e + (\"left\" !== s ? h * r : 0),\n                  g = n + (\"right\" !== s ? -h * r : 0),\n                  p = i + (\"top\" !== s ? h * o : 0),\n                  m = a + (\"bottom\" !== s ? -h * o : 0);f !== g && (i = p, a = m), p !== m && (e = f, n = g);\n            }l.beginPath(), l.fillStyle = u.backgroundColor, l.strokeStyle = u.borderColor, l.lineWidth = d;var v = [[e, a], [e, i], [n, i], [n, a]],\n                y = [\"bottom\", \"left\", \"top\", \"right\"],\n                b = y.indexOf(s, 0);b === -1 && (b = 0);var x = t(0);l.moveTo(x[0], x[1]);for (var _ = 1; _ < 4; _++) {\n              x = t(_), l.lineTo(x[0], x[1]);\n            }l.fill(), d && l.stroke();\n          }, height: function height() {\n            var t = this._view;return t.base - t.y;\n          }, inRange: function inRange(t, e) {\n            var i = !1;if (this._view) {\n              var a = n(this);i = t >= a.left && t <= a.right && e >= a.top && e <= a.bottom;\n            }return i;\n          }, inLabelRange: function inLabelRange(t, i) {\n            var a = this;if (!a._view) return !1;var r = !1,\n                o = n(a);return r = e(a) ? t >= o.left && t <= o.right : i >= o.top && i <= o.bottom;\n          }, inXRange: function inXRange(t) {\n            var e = n(this);return t >= e.left && t <= e.right;\n          }, inYRange: function inYRange(t) {\n            var e = n(this);return t >= e.top && t <= e.bottom;\n          }, getCenterPoint: function getCenterPoint() {\n            var t,\n                n,\n                i = this._view;return e(this) ? (t = i.x, n = (i.y + i.base) / 2) : (t = (i.x + i.base) / 2, n = i.y), { x: t, y: n };\n          }, getArea: function getArea() {\n            var t = this._view;return t.width * Math.abs(t.y - t.base);\n          }, tooltipPosition: function tooltipPosition() {\n            var t = this._view;return { x: t.x, y: t.y };\n          } });\n      };\n    }, {}], 39: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t, e) {\n          var n = l.getStyle(t, e),\n              i = n && n.match(/^(\\d+)(\\.\\d+)?px$/);return i ? Number(i[1]) : void 0;\n        }function n(t, n) {\n          var i = t.style,\n              a = t.getAttribute(\"height\"),\n              r = t.getAttribute(\"width\");if (t._chartjs = { initial: { height: a, width: r, style: { display: i.display, height: i.height, width: i.width } } }, i.display = i.display || \"block\", null === r || \"\" === r) {\n            var o = e(t, \"width\");void 0 !== o && (t.width = o);\n          }if (null === a || \"\" === a) if (\"\" === t.style.height) t.height = t.width / (n.options.aspectRatio || 2);else {\n            var s = e(t, \"height\");void 0 !== o && (t.height = s);\n          }return t;\n        }function i(t, e, n, i, a) {\n          return { type: t, chart: e, native: a || null, x: void 0 !== n ? n : null, y: void 0 !== i ? i : null };\n        }function a(t, e) {\n          var n = u[t.type] || t.type,\n              a = l.getRelativePosition(t, e);return i(n, e, a.x, a.y, t);\n        }function r(t) {\n          var e = document.createElement(\"iframe\");return e.className = \"chartjs-hidden-iframe\", e.style.cssText = \"display:block;overflow:hidden;border:0;margin:0;top:0;left:0;bottom:0;right:0;height:100%;width:100%;position:absolute;pointer-events:none;z-index:-1;\", e.tabIndex = -1, l.addEvent(e, \"load\", function () {\n            l.addEvent(e.contentWindow || e, \"resize\", t), t();\n          }), e;\n        }function o(t, e, n) {\n          var a = t._chartjs = { ticking: !1 },\n              o = function o() {\n            a.ticking || (a.ticking = !0, l.requestAnimFrame.call(window, function () {\n              if (a.resizer) return a.ticking = !1, e(i(\"resize\", n));\n            }));\n          };a.resizer = r(o), t.insertBefore(a.resizer, t.firstChild);\n        }function s(t) {\n          if (t && t._chartjs) {\n            var e = t._chartjs.resizer;e && (e.parentNode.removeChild(e), t._chartjs.resizer = null), delete t._chartjs;\n          }\n        }var l = t.helpers,\n            u = { touchstart: \"mousedown\", touchmove: \"mousemove\", touchend: \"mouseup\", pointerenter: \"mouseenter\", pointerdown: \"mousedown\", pointermove: \"mousemove\", pointerup: \"mouseup\", pointerleave: \"mouseout\", pointerout: \"mouseout\" };return { acquireContext: function acquireContext(t, e) {\n            \"string\" == typeof t ? t = document.getElementById(t) : t.length && (t = t[0]), t && t.canvas && (t = t.canvas);var i = t && t.getContext && t.getContext(\"2d\");return i && i.canvas === t ? (n(t, e), i) : null;\n          }, releaseContext: function releaseContext(t) {\n            var e = t.canvas;if (e._chartjs) {\n              var n = e._chartjs.initial;[\"height\", \"width\"].forEach(function (t) {\n                var i = n[t];void 0 === i || null === i ? e.removeAttribute(t) : e.setAttribute(t, i);\n              }), l.each(n.style || {}, function (t, n) {\n                e.style[n] = t;\n              }), e.width = e.width, delete e._chartjs;\n            }\n          }, addEventListener: function addEventListener(t, e, n) {\n            var i = t.canvas;if (\"resize\" === e) return void o(i.parentNode, n, t);var r = n._chartjs || (n._chartjs = {}),\n                s = r.proxies || (r.proxies = {}),\n                u = s[t.id + \"_\" + e] = function (e) {\n              n(a(e, t));\n            };l.addEvent(i, e, u);\n          }, removeEventListener: function removeEventListener(t, e, n) {\n            var i = t.canvas;if (\"resize\" === e) return void s(i.parentNode, n);var a = n._chartjs || {},\n                r = a.proxies || {},\n                o = r[t.id + \"_\" + e];o && l.removeEvent(i, e, o);\n          } };\n      };\n    }, {}], 40: [function (t, e, n) {\n      \"use strict\";\n      var i = t(39);e.exports = function (t) {\n        t.platform = { acquireContext: function acquireContext() {}, releaseContext: function releaseContext() {}, addEventListener: function addEventListener() {}, removeEventListener: function removeEventListener() {} }, t.helpers.extend(t.platform, i(t));\n      };\n    }, { 39: 39 }], 41: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t, e, n) {\n          var i,\n              a = t._model || {},\n              r = a.fill;if (void 0 === r && (r = !!a.backgroundColor), r === !1 || null === r) return !1;if (r === !0) return \"origin\";if (i = parseFloat(r, 10), isFinite(i) && Math.floor(i) === i) return \"-\" !== r[0] && \"+\" !== r[0] || (i = e + i), !(i === e || i < 0 || i >= n) && i;switch (r) {case \"bottom\":\n              return \"start\";case \"top\":\n              return \"end\";case \"zero\":\n              return \"origin\";case \"origin\":case \"start\":case \"end\":\n              return r;default:\n              return !1;}\n        }function n(t) {\n          var e,\n              n = t.el._model || {},\n              i = t.el._scale || {},\n              a = t.fill,\n              r = null;if (isFinite(a)) return null;if (\"start\" === a ? r = void 0 === n.scaleBottom ? i.bottom : n.scaleBottom : \"end\" === a ? r = void 0 === n.scaleTop ? i.top : n.scaleTop : void 0 !== n.scaleZero ? r = n.scaleZero : i.getBasePosition ? r = i.getBasePosition() : i.getBasePixel && (r = i.getBasePixel()), void 0 !== r && null !== r) {\n            if (void 0 !== r.x && void 0 !== r.y) return r;if (\"number\" == typeof r && isFinite(r)) return e = i.isHorizontal(), { x: e ? r : null, y: e ? null : r };\n          }return null;\n        }function i(t, e, n) {\n          var i,\n              a = t[e],\n              r = a.fill,\n              o = [e];if (!n) return r;for (; r !== !1 && o.indexOf(r) === -1;) {\n            if (!isFinite(r)) return r;if (i = t[r], !i) return !1;if (i.visible) return r;o.push(r), r = i.fill;\n          }return !1;\n        }function a(t) {\n          var e = t.fill,\n              n = \"dataset\";return e === !1 ? null : (isFinite(e) || (n = \"boundary\"), d[n](t));\n        }function r(t) {\n          return t && !t.skip;\n        }function o(t, e, n, i, a) {\n          var r;if (i && a) {\n            for (t.moveTo(e[0].x, e[0].y), r = 1; r < i; ++r) {\n              u.canvas.lineTo(t, e[r - 1], e[r]);\n            }for (t.lineTo(n[a - 1].x, n[a - 1].y), r = a - 1; r > 0; --r) {\n              u.canvas.lineTo(t, n[r], n[r - 1], !0);\n            }\n          }\n        }function s(t, e, n, i, a, s) {\n          var l,\n              u,\n              d,\n              c,\n              h,\n              f,\n              g,\n              p = e.length,\n              m = i.spanGaps,\n              v = [],\n              y = [],\n              b = 0,\n              x = 0;for (t.beginPath(), l = 0, u = p + !!s; l < u; ++l) {\n            d = l % p, c = e[d]._view, h = n(c, d, i), f = r(c), g = r(h), f && g ? (b = v.push(c), x = y.push(h)) : b && x && (m ? (f && v.push(c), g && y.push(h)) : (o(t, v, y, b, x), b = x = 0, v = [], y = []));\n          }o(t, v, y, b, x), t.closePath(), t.fillStyle = a, t.fill();\n        }t.defaults.global.plugins.filler = { propagate: !0 };var l = t.defaults,\n            u = t.helpers,\n            d = { dataset: function dataset(t) {\n            var e = t.fill,\n                n = t.chart,\n                i = n.getDatasetMeta(e),\n                a = i && n.isDatasetVisible(e),\n                r = a && i.dataset._children || [];return r.length ? function (t, e) {\n              return r[e]._view || null;\n            } : null;\n          }, boundary: function boundary(t) {\n            var e = t.boundary,\n                n = e ? e.x : null,\n                i = e ? e.y : null;return function (t) {\n              return { x: null === n ? t.x : n, y: null === i ? t.y : i };\n            };\n          } };return { id: \"filler\", afterDatasetsUpdate: function afterDatasetsUpdate(r, o) {\n            var s,\n                l,\n                u,\n                d,\n                c = (r.data.datasets || []).length,\n                h = o.propagate,\n                f = [];for (l = 0; l < c; ++l) {\n              s = r.getDatasetMeta(l), u = s.dataset, d = null, u && u._model && u instanceof t.elements.Line && (d = { visible: r.isDatasetVisible(l), fill: e(u, l, c), chart: r, el: u }), s.$filler = d, f.push(d);\n            }for (l = 0; l < c; ++l) {\n              d = f[l], d && (d.fill = i(f, l, h), d.boundary = n(d), d.mapper = a(d));\n            }\n          }, beforeDatasetDraw: function beforeDatasetDraw(t, e) {\n            var n = e.meta.$filler;if (n) {\n              var i = n.el,\n                  a = i._view,\n                  r = i._children || [],\n                  o = n.mapper,\n                  u = a.backgroundColor || l.global.defaultColor;o && u && r.length && s(t.ctx, r, o, a, u, i._loop);\n            }\n          } };\n      };\n    }, {}], 42: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t, e) {\n          return t.usePointStyle ? e * Math.SQRT2 : t.boxWidth;\n        }function n(e, n) {\n          var i = new t.Legend({ ctx: e.ctx, options: n, chart: e });a.configure(e, i, n), a.addBox(e, i), e.legend = i;\n        }var i = t.helpers,\n            a = t.layoutService,\n            r = i.noop;return t.defaults.global.legend = { display: !0, position: \"top\", fullWidth: !0, reverse: !1, weight: 1e3, onClick: function onClick(t, e) {\n            var n = e.datasetIndex,\n                i = this.chart,\n                a = i.getDatasetMeta(n);a.hidden = null === a.hidden ? !i.data.datasets[n].hidden : null, i.update();\n          }, onHover: null, labels: { boxWidth: 40, padding: 10, generateLabels: function generateLabels(t) {\n              var e = t.data;return i.isArray(e.datasets) ? e.datasets.map(function (e, n) {\n                return { text: e.label, fillStyle: i.isArray(e.backgroundColor) ? e.backgroundColor[0] : e.backgroundColor, hidden: !t.isDatasetVisible(n), lineCap: e.borderCapStyle, lineDash: e.borderDash, lineDashOffset: e.borderDashOffset, lineJoin: e.borderJoinStyle, lineWidth: e.borderWidth, strokeStyle: e.borderColor, pointStyle: e.pointStyle, datasetIndex: n };\n              }, this) : [];\n            } } }, t.Legend = t.Element.extend({ initialize: function initialize(t) {\n            i.extend(this, t), this.legendHitBoxes = [], this.doughnutMode = !1;\n          }, beforeUpdate: r, update: function update(t, e, n) {\n            var i = this;return i.beforeUpdate(), i.maxWidth = t, i.maxHeight = e, i.margins = n, i.beforeSetDimensions(), i.setDimensions(), i.afterSetDimensions(), i.beforeBuildLabels(), i.buildLabels(), i.afterBuildLabels(), i.beforeFit(), i.fit(), i.afterFit(), i.afterUpdate(), i.minSize;\n          }, afterUpdate: r, beforeSetDimensions: r, setDimensions: function setDimensions() {\n            var t = this;t.isHorizontal() ? (t.width = t.maxWidth, t.left = 0, t.right = t.width) : (t.height = t.maxHeight, t.top = 0, t.bottom = t.height), t.paddingLeft = 0, t.paddingTop = 0, t.paddingRight = 0, t.paddingBottom = 0, t.minSize = { width: 0, height: 0 };\n          }, afterSetDimensions: r, beforeBuildLabels: r, buildLabels: function buildLabels() {\n            var t = this,\n                e = t.options.labels,\n                n = e.generateLabels.call(t, t.chart);e.filter && (n = n.filter(function (n) {\n              return e.filter(n, t.chart.data);\n            })), t.options.reverse && n.reverse(), t.legendItems = n;\n          }, afterBuildLabels: r, beforeFit: r, fit: function fit() {\n            var n = this,\n                a = n.options,\n                r = a.labels,\n                o = a.display,\n                s = n.ctx,\n                l = t.defaults.global,\n                u = i.getValueOrDefault,\n                d = u(r.fontSize, l.defaultFontSize),\n                c = u(r.fontStyle, l.defaultFontStyle),\n                h = u(r.fontFamily, l.defaultFontFamily),\n                f = i.fontString(d, c, h),\n                g = n.legendHitBoxes = [],\n                p = n.minSize,\n                m = n.isHorizontal();if (m ? (p.width = n.maxWidth, p.height = o ? 10 : 0) : (p.width = o ? 10 : 0, p.height = n.maxHeight), o) if (s.font = f, m) {\n              var v = n.lineWidths = [0],\n                  y = n.legendItems.length ? d + r.padding : 0;s.textAlign = \"left\", s.textBaseline = \"top\", i.each(n.legendItems, function (t, i) {\n                var a = e(r, d),\n                    o = a + d / 2 + s.measureText(t.text).width;v[v.length - 1] + o + r.padding >= n.width && (y += d + r.padding, v[v.length] = n.left), g[i] = { left: 0, top: 0, width: o, height: d }, v[v.length - 1] += o + r.padding;\n              }), p.height += y;\n            } else {\n              var b = r.padding,\n                  x = n.columnWidths = [],\n                  _ = r.padding,\n                  k = 0,\n                  w = 0,\n                  M = d + b;i.each(n.legendItems, function (t, n) {\n                var i = e(r, d),\n                    a = i + d / 2 + s.measureText(t.text).width;w + M > p.height && (_ += k + r.padding, x.push(k), k = 0, w = 0), k = Math.max(k, a), w += M, g[n] = { left: 0, top: 0, width: a, height: d };\n              }), _ += k, x.push(k), p.width += _;\n            }n.width = p.width, n.height = p.height;\n          }, afterFit: r, isHorizontal: function isHorizontal() {\n            return \"top\" === this.options.position || \"bottom\" === this.options.position;\n          }, draw: function draw() {\n            var n = this,\n                a = n.options,\n                r = a.labels,\n                o = t.defaults.global,\n                s = o.elements.line,\n                l = n.width,\n                u = n.lineWidths;if (a.display) {\n              var d,\n                  c = n.ctx,\n                  h = i.getValueOrDefault,\n                  f = h(r.fontColor, o.defaultFontColor),\n                  g = h(r.fontSize, o.defaultFontSize),\n                  p = h(r.fontStyle, o.defaultFontStyle),\n                  m = h(r.fontFamily, o.defaultFontFamily),\n                  v = i.fontString(g, p, m);c.textAlign = \"left\", c.textBaseline = \"top\", c.lineWidth = .5, c.strokeStyle = f, c.fillStyle = f, c.font = v;var y = e(r, g),\n                  b = n.legendHitBoxes,\n                  x = function x(e, n, i) {\n                if (!(isNaN(y) || y <= 0)) {\n                  c.save(), c.fillStyle = h(i.fillStyle, o.defaultColor), c.lineCap = h(i.lineCap, s.borderCapStyle), c.lineDashOffset = h(i.lineDashOffset, s.borderDashOffset), c.lineJoin = h(i.lineJoin, s.borderJoinStyle), c.lineWidth = h(i.lineWidth, s.borderWidth), c.strokeStyle = h(i.strokeStyle, o.defaultColor);var r = 0 === h(i.lineWidth, s.borderWidth);if (c.setLineDash && c.setLineDash(h(i.lineDash, s.borderDash)), a.labels && a.labels.usePointStyle) {\n                    var l = g * Math.SQRT2 / 2,\n                        u = l / Math.SQRT2,\n                        d = e + u,\n                        f = n + u;t.canvasHelpers.drawPoint(c, i.pointStyle, l, d, f);\n                  } else r || c.strokeRect(e, n, y, g), c.fillRect(e, n, y, g);c.restore();\n                }\n              },\n                  _ = function _(t, e, n, i) {\n                c.fillText(n.text, y + g / 2 + t, e), n.hidden && (c.beginPath(), c.lineWidth = 2, c.moveTo(y + g / 2 + t, e + g / 2), c.lineTo(y + g / 2 + t + i, e + g / 2), c.stroke());\n              },\n                  k = n.isHorizontal();d = k ? { x: n.left + (l - u[0]) / 2, y: n.top + r.padding, line: 0 } : { x: n.left + r.padding, y: n.top + r.padding, line: 0 };var w = g + r.padding;i.each(n.legendItems, function (t, e) {\n                var i = c.measureText(t.text).width,\n                    a = y + g / 2 + i,\n                    o = d.x,\n                    s = d.y;k ? o + a >= l && (s = d.y += w, d.line++, o = d.x = n.left + (l - u[d.line]) / 2) : s + w > n.bottom && (o = d.x = o + n.columnWidths[d.line] + r.padding, s = d.y = n.top + r.padding, d.line++), x(o, s, t), b[e].left = o, b[e].top = s, _(o, s, t, i), k ? d.x += a + r.padding : d.y += w;\n              });\n            }\n          }, handleEvent: function handleEvent(t) {\n            var e = this,\n                n = e.options,\n                i = \"mouseup\" === t.type ? \"click\" : t.type,\n                a = !1;if (\"mousemove\" === i) {\n              if (!n.onHover) return;\n            } else {\n              if (\"click\" !== i) return;if (!n.onClick) return;\n            }var r = t.x,\n                o = t.y;if (r >= e.left && r <= e.right && o >= e.top && o <= e.bottom) for (var s = e.legendHitBoxes, l = 0; l < s.length; ++l) {\n              var u = s[l];if (r >= u.left && r <= u.left + u.width && o >= u.top && o <= u.top + u.height) {\n                if (\"click\" === i) {\n                  n.onClick.call(e, t.native, e.legendItems[l]), a = !0;break;\n                }if (\"mousemove\" === i) {\n                  n.onHover.call(e, t.native, e.legendItems[l]), a = !0;break;\n                }\n              }\n            }return a;\n          } }), { id: \"legend\", beforeInit: function beforeInit(t) {\n            var e = t.options.legend;e && n(t, e);\n          }, beforeUpdate: function beforeUpdate(e) {\n            var r = e.options.legend,\n                o = e.legend;r ? (r = i.configMerge(t.defaults.global.legend, r), o ? (a.configure(e, o, r), o.options = r) : n(e, r)) : o && (a.removeBox(e, o), delete e.legend);\n          }, afterEvent: function afterEvent(t, e) {\n            var n = t.legend;n && n.handleEvent(e);\n          } };\n      };\n    }, {}], 43: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(e, n) {\n          var a = new t.Title({ ctx: e.ctx, options: n, chart: e });i.configure(e, a, n), i.addBox(e, a), e.titleBlock = a;\n        }var n = t.helpers,\n            i = t.layoutService,\n            a = n.noop;return t.defaults.global.title = { display: !1, position: \"top\", fullWidth: !0, weight: 2e3, fontStyle: \"bold\", padding: 10, text: \"\" }, t.Title = t.Element.extend({ initialize: function initialize(t) {\n            var e = this;n.extend(e, t), e.legendHitBoxes = [];\n          }, beforeUpdate: a, update: function update(t, e, n) {\n            var i = this;return i.beforeUpdate(), i.maxWidth = t, i.maxHeight = e, i.margins = n, i.beforeSetDimensions(), i.setDimensions(), i.afterSetDimensions(), i.beforeBuildLabels(), i.buildLabels(), i.afterBuildLabels(), i.beforeFit(), i.fit(), i.afterFit(), i.afterUpdate(), i.minSize;\n          }, afterUpdate: a, beforeSetDimensions: a, setDimensions: function setDimensions() {\n            var t = this;t.isHorizontal() ? (t.width = t.maxWidth, t.left = 0, t.right = t.width) : (t.height = t.maxHeight, t.top = 0, t.bottom = t.height), t.paddingLeft = 0, t.paddingTop = 0, t.paddingRight = 0, t.paddingBottom = 0, t.minSize = { width: 0, height: 0 };\n          }, afterSetDimensions: a, beforeBuildLabels: a, buildLabels: a, afterBuildLabels: a, beforeFit: a, fit: function fit() {\n            var e = this,\n                i = n.getValueOrDefault,\n                a = e.options,\n                r = t.defaults.global,\n                o = a.display,\n                s = i(a.fontSize, r.defaultFontSize),\n                l = e.minSize;e.isHorizontal() ? (l.width = e.maxWidth, l.height = o ? s + 2 * a.padding : 0) : (l.width = o ? s + 2 * a.padding : 0, l.height = e.maxHeight), e.width = l.width, e.height = l.height;\n          }, afterFit: a, isHorizontal: function isHorizontal() {\n            var t = this.options.position;return \"top\" === t || \"bottom\" === t;\n          }, draw: function draw() {\n            var e = this,\n                i = e.ctx,\n                a = n.getValueOrDefault,\n                r = e.options,\n                o = t.defaults.global;if (r.display) {\n              var s,\n                  l,\n                  u,\n                  d = a(r.fontSize, o.defaultFontSize),\n                  c = a(r.fontStyle, o.defaultFontStyle),\n                  h = a(r.fontFamily, o.defaultFontFamily),\n                  f = n.fontString(d, c, h),\n                  g = 0,\n                  p = e.top,\n                  m = e.left,\n                  v = e.bottom,\n                  y = e.right;i.fillStyle = a(r.fontColor, o.defaultFontColor), i.font = f, e.isHorizontal() ? (s = m + (y - m) / 2, l = p + (v - p) / 2, u = y - m) : (s = \"left\" === r.position ? m + d / 2 : y - d / 2, l = p + (v - p) / 2, u = v - p, g = Math.PI * (\"left\" === r.position ? -.5 : .5)), i.save(), i.translate(s, l), i.rotate(g), i.textAlign = \"center\", i.textBaseline = \"middle\", i.fillText(r.text, 0, 0, u), i.restore();\n            }\n          } }), { id: \"title\", beforeInit: function beforeInit(t) {\n            var n = t.options.title;n && e(t, n);\n          }, beforeUpdate: function beforeUpdate(a) {\n            var r = a.options.title,\n                o = a.titleBlock;r ? (r = n.configMerge(t.defaults.global.title, r), o ? (i.configure(a, o, r), o.options = r) : e(a, r)) : o && (t.layoutService.removeBox(a, o), delete a.titleBlock);\n          } };\n      };\n    }, {}], 44: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers,\n            n = { position: \"bottom\" },\n            i = t.Scale.extend({ getLabels: function getLabels() {\n            var t = this.chart.data;return (this.isHorizontal() ? t.xLabels : t.yLabels) || t.labels;\n          }, determineDataLimits: function determineDataLimits() {\n            var t = this,\n                n = t.getLabels();t.minIndex = 0, t.maxIndex = n.length - 1;var i;void 0 !== t.options.ticks.min && (i = e.indexOf(n, t.options.ticks.min), t.minIndex = i !== -1 ? i : t.minIndex), void 0 !== t.options.ticks.max && (i = e.indexOf(n, t.options.ticks.max), t.maxIndex = i !== -1 ? i : t.maxIndex), t.min = n[t.minIndex], t.max = n[t.maxIndex];\n          }, buildTicks: function buildTicks() {\n            var t = this,\n                e = t.getLabels();t.ticks = 0 === t.minIndex && t.maxIndex === e.length - 1 ? e : e.slice(t.minIndex, t.maxIndex + 1);\n          }, getLabelForIndex: function getLabelForIndex(t, e) {\n            var n = this,\n                i = n.chart.data,\n                a = n.isHorizontal();return i.yLabels && !a ? n.getRightValue(i.datasets[e].data[t]) : n.ticks[t - n.minIndex];\n          }, getPixelForValue: function getPixelForValue(t, e, n, i) {\n            var a,\n                r = this,\n                o = Math.max(r.maxIndex + 1 - r.minIndex - (r.options.gridLines.offsetGridLines ? 0 : 1), 1);if (void 0 !== t && null !== t && (a = r.isHorizontal() ? t.x : t.y), void 0 !== a || void 0 !== t && isNaN(e)) {\n              var s = r.getLabels();t = a || t;var l = s.indexOf(t);e = l !== -1 ? l : e;\n            }if (r.isHorizontal()) {\n              var u = r.width / o,\n                  d = u * (e - r.minIndex);return (r.options.gridLines.offsetGridLines && i || r.maxIndex === r.minIndex && i) && (d += u / 2), r.left + Math.round(d);\n            }var c = r.height / o,\n                h = c * (e - r.minIndex);return r.options.gridLines.offsetGridLines && i && (h += c / 2), r.top + Math.round(h);\n          }, getPixelForTick: function getPixelForTick(t, e) {\n            return this.getPixelForValue(this.ticks[t], t + this.minIndex, null, e);\n          }, getValueForPixel: function getValueForPixel(t) {\n            var e,\n                n = this,\n                i = Math.max(n.ticks.length - (n.options.gridLines.offsetGridLines ? 0 : 1), 1),\n                a = n.isHorizontal(),\n                r = (a ? n.width : n.height) / i;return t -= a ? n.left : n.top, n.options.gridLines.offsetGridLines && (t -= r / 2), e = t <= 0 ? 0 : Math.round(t / r);\n          }, getBasePixel: function getBasePixel() {\n            return this.bottom;\n          } });t.scaleService.registerScaleType(\"category\", i, n);\n      };\n    }, {}], 45: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers,\n            n = { position: \"left\", ticks: { callback: t.Ticks.formatters.linear } },\n            i = t.LinearScaleBase.extend({ determineDataLimits: function determineDataLimits() {\n            function t(t) {\n              return s ? t.xAxisID === n.id : t.yAxisID === n.id;\n            }var n = this,\n                i = n.options,\n                a = n.chart,\n                r = a.data,\n                o = r.datasets,\n                s = n.isHorizontal(),\n                l = 0,\n                u = 1;n.min = null, n.max = null;var d = i.stacked;if (void 0 === d && e.each(o, function (e, n) {\n              if (!d) {\n                var i = a.getDatasetMeta(n);a.isDatasetVisible(n) && t(i) && void 0 !== i.stack && (d = !0);\n              }\n            }), i.stacked || d) {\n              var c = {};e.each(o, function (r, o) {\n                var s = a.getDatasetMeta(o),\n                    l = [s.type, void 0 === i.stacked && void 0 === s.stack ? o : \"\", s.stack].join(\".\");void 0 === c[l] && (c[l] = { positiveValues: [], negativeValues: [] });var u = c[l].positiveValues,\n                    d = c[l].negativeValues;a.isDatasetVisible(o) && t(s) && e.each(r.data, function (t, e) {\n                  var a = +n.getRightValue(t);isNaN(a) || s.data[e].hidden || (u[e] = u[e] || 0, d[e] = d[e] || 0, i.relativePoints ? u[e] = 100 : a < 0 ? d[e] += a : u[e] += a);\n                });\n              }), e.each(c, function (t) {\n                var i = t.positiveValues.concat(t.negativeValues),\n                    a = e.min(i),\n                    r = e.max(i);n.min = null === n.min ? a : Math.min(n.min, a), n.max = null === n.max ? r : Math.max(n.max, r);\n              });\n            } else e.each(o, function (i, r) {\n              var o = a.getDatasetMeta(r);a.isDatasetVisible(r) && t(o) && e.each(i.data, function (t, e) {\n                var i = +n.getRightValue(t);isNaN(i) || o.data[e].hidden || (null === n.min ? n.min = i : i < n.min && (n.min = i), null === n.max ? n.max = i : i > n.max && (n.max = i));\n              });\n            });n.min = isFinite(n.min) ? n.min : l, n.max = isFinite(n.max) ? n.max : u, this.handleTickRangeOptions();\n          }, getTickLimit: function getTickLimit() {\n            var n,\n                i = this,\n                a = i.options.ticks;if (i.isHorizontal()) n = Math.min(a.maxTicksLimit ? a.maxTicksLimit : 11, Math.ceil(i.width / 50));else {\n              var r = e.getValueOrDefault(a.fontSize, t.defaults.global.defaultFontSize);n = Math.min(a.maxTicksLimit ? a.maxTicksLimit : 11, Math.ceil(i.height / (2 * r)));\n            }return n;\n          }, handleDirectionalChanges: function handleDirectionalChanges() {\n            this.isHorizontal() || this.ticks.reverse();\n          }, getLabelForIndex: function getLabelForIndex(t, e) {\n            return +this.getRightValue(this.chart.data.datasets[e].data[t]);\n          }, getPixelForValue: function getPixelForValue(t) {\n            var e,\n                n = this,\n                i = n.start,\n                a = +n.getRightValue(t),\n                r = n.end - i;return n.isHorizontal() ? (e = n.left + n.width / r * (a - i), Math.round(e)) : (e = n.bottom - n.height / r * (a - i), Math.round(e));\n          }, getValueForPixel: function getValueForPixel(t) {\n            var e = this,\n                n = e.isHorizontal(),\n                i = n ? e.width : e.height,\n                a = (n ? t - e.left : e.bottom - t) / i;return e.start + (e.end - e.start) * a;\n          }, getPixelForTick: function getPixelForTick(t) {\n            return this.getPixelForValue(this.ticksAsNumbers[t]);\n          } });t.scaleService.registerScaleType(\"linear\", i, n);\n      };\n    }, {}], 46: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers,\n            n = e.noop;t.LinearScaleBase = t.Scale.extend({ handleTickRangeOptions: function handleTickRangeOptions() {\n            var t = this,\n                n = t.options,\n                i = n.ticks;if (i.beginAtZero) {\n              var a = e.sign(t.min),\n                  r = e.sign(t.max);a < 0 && r < 0 ? t.max = 0 : a > 0 && r > 0 && (t.min = 0);\n            }void 0 !== i.min ? t.min = i.min : void 0 !== i.suggestedMin && (null === t.min ? t.min = i.suggestedMin : t.min = Math.min(t.min, i.suggestedMin)), void 0 !== i.max ? t.max = i.max : void 0 !== i.suggestedMax && (null === t.max ? t.max = i.suggestedMax : t.max = Math.max(t.max, i.suggestedMax)), t.min === t.max && (t.max++, i.beginAtZero || t.min--);\n          }, getTickLimit: n, handleDirectionalChanges: n, buildTicks: function buildTicks() {\n            var n = this,\n                i = n.options,\n                a = i.ticks,\n                r = n.getTickLimit();r = Math.max(2, r);var o = { maxTicks: r, min: a.min, max: a.max, stepSize: e.getValueOrDefault(a.fixedStepSize, a.stepSize) },\n                s = n.ticks = t.Ticks.generators.linear(o, n);n.handleDirectionalChanges(), n.max = e.max(s), n.min = e.min(s), a.reverse ? (s.reverse(), n.start = n.max, n.end = n.min) : (n.start = n.min, n.end = n.max);\n          }, convertTicksToLabels: function convertTicksToLabels() {\n            var e = this;e.ticksAsNumbers = e.ticks.slice(), e.zeroLineIndex = e.ticks.indexOf(0), t.Scale.prototype.convertTicksToLabels.call(e);\n          } });\n      };\n    }, {}], 47: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        var e = t.helpers,\n            n = { position: \"left\", ticks: { callback: t.Ticks.formatters.logarithmic } },\n            i = t.Scale.extend({ determineDataLimits: function determineDataLimits() {\n            function t(t) {\n              return u ? t.xAxisID === n.id : t.yAxisID === n.id;\n            }var n = this,\n                i = n.options,\n                a = i.ticks,\n                r = n.chart,\n                o = r.data,\n                s = o.datasets,\n                l = e.getValueOrDefault,\n                u = n.isHorizontal();n.min = null, n.max = null, n.minNotZero = null;var d = i.stacked;if (void 0 === d && e.each(s, function (e, n) {\n              if (!d) {\n                var i = r.getDatasetMeta(n);r.isDatasetVisible(n) && t(i) && void 0 !== i.stack && (d = !0);\n              }\n            }), i.stacked || d) {\n              var c = {};e.each(s, function (a, o) {\n                var s = r.getDatasetMeta(o),\n                    l = [s.type, void 0 === i.stacked && void 0 === s.stack ? o : \"\", s.stack].join(\".\");r.isDatasetVisible(o) && t(s) && (void 0 === c[l] && (c[l] = []), e.each(a.data, function (t, e) {\n                  var a = c[l],\n                      r = +n.getRightValue(t);isNaN(r) || s.data[e].hidden || (a[e] = a[e] || 0, i.relativePoints ? a[e] = 100 : a[e] += r);\n                }));\n              }), e.each(c, function (t) {\n                var i = e.min(t),\n                    a = e.max(t);n.min = null === n.min ? i : Math.min(n.min, i), n.max = null === n.max ? a : Math.max(n.max, a);\n              });\n            } else e.each(s, function (i, a) {\n              var o = r.getDatasetMeta(a);r.isDatasetVisible(a) && t(o) && e.each(i.data, function (t, e) {\n                var i = +n.getRightValue(t);isNaN(i) || o.data[e].hidden || (null === n.min ? n.min = i : i < n.min && (n.min = i), null === n.max ? n.max = i : i > n.max && (n.max = i), 0 !== i && (null === n.minNotZero || i < n.minNotZero) && (n.minNotZero = i));\n              });\n            });n.min = l(a.min, n.min), n.max = l(a.max, n.max), n.min === n.max && (0 !== n.min && null !== n.min ? (n.min = Math.pow(10, Math.floor(e.log10(n.min)) - 1), n.max = Math.pow(10, Math.floor(e.log10(n.max)) + 1)) : (n.min = 1, n.max = 10));\n          }, buildTicks: function buildTicks() {\n            var n = this,\n                i = n.options,\n                a = i.ticks,\n                r = { min: a.min, max: a.max },\n                o = n.ticks = t.Ticks.generators.logarithmic(r, n);n.isHorizontal() || o.reverse(), n.max = e.max(o), n.min = e.min(o), a.reverse ? (o.reverse(), n.start = n.max, n.end = n.min) : (n.start = n.min, n.end = n.max);\n          }, convertTicksToLabels: function convertTicksToLabels() {\n            this.tickValues = this.ticks.slice(), t.Scale.prototype.convertTicksToLabels.call(this);\n          }, getLabelForIndex: function getLabelForIndex(t, e) {\n            return +this.getRightValue(this.chart.data.datasets[e].data[t]);\n          }, getPixelForTick: function getPixelForTick(t) {\n            return this.getPixelForValue(this.tickValues[t]);\n          }, getPixelForValue: function getPixelForValue(t) {\n            var n,\n                i,\n                a,\n                r = this,\n                o = r.start,\n                s = +r.getRightValue(t),\n                l = r.options,\n                u = l.ticks;return r.isHorizontal() ? (a = e.log10(r.end) - e.log10(o), 0 === s ? i = r.left : (n = r.width, i = r.left + n / a * (e.log10(s) - e.log10(o)))) : (n = r.height, 0 !== o || u.reverse ? 0 === r.end && u.reverse ? (a = e.log10(r.start) - e.log10(r.minNotZero), i = s === r.end ? r.top : s === r.minNotZero ? r.top + .02 * n : r.top + .02 * n + .98 * n / a * (e.log10(s) - e.log10(r.minNotZero))) : 0 === s ? i = u.reverse ? r.top : r.bottom : (a = e.log10(r.end) - e.log10(o), n = r.height, i = r.bottom - n / a * (e.log10(s) - e.log10(o))) : (a = e.log10(r.end) - e.log10(r.minNotZero), i = s === o ? r.bottom : s === r.minNotZero ? r.bottom - .02 * n : r.bottom - .02 * n - .98 * n / a * (e.log10(s) - e.log10(r.minNotZero)))), i;\n          }, getValueForPixel: function getValueForPixel(t) {\n            var n,\n                i,\n                a = this,\n                r = e.log10(a.end) - e.log10(a.start);return a.isHorizontal() ? (i = a.width, n = a.start * Math.pow(10, (t - a.left) * r / i)) : (i = a.height, n = Math.pow(10, (a.bottom - t) * r / i) / a.start), n;\n          } });t.scaleService.registerScaleType(\"logarithmic\", i, n);\n      };\n    }, {}], 48: [function (t, e, n) {\n      \"use strict\";\n      e.exports = function (t) {\n        function e(t) {\n          var e = t.options;return e.angleLines.display || e.pointLabels.display ? t.chart.data.labels.length : 0;\n        }function n(t) {\n          var e = t.options.pointLabels,\n              n = f.getValueOrDefault(e.fontSize, g.defaultFontSize),\n              i = f.getValueOrDefault(e.fontStyle, g.defaultFontStyle),\n              a = f.getValueOrDefault(e.fontFamily, g.defaultFontFamily),\n              r = f.fontString(n, i, a);return { size: n, style: i, family: a, font: r };\n        }function i(t, e, n) {\n          return f.isArray(n) ? { w: f.longestText(t, t.font, n), h: n.length * e + 1.5 * (n.length - 1) * e } : { w: t.measureText(n).width, h: e };\n        }function a(t, e, n, i, a) {\n          return t === i || t === a ? { start: e - n / 2, end: e + n / 2 } : t < i || t > a ? { start: e - n - 5, end: e } : { start: e, end: e + n + 5 };\n        }function r(t) {\n          var r,\n              o,\n              s,\n              l = n(t),\n              u = Math.min(t.height / 2, t.width / 2),\n              d = { r: t.width, l: 0, t: t.height, b: 0 },\n              c = {};t.ctx.font = l.font, t._pointLabelSizes = [];var h = e(t);for (r = 0; r < h; r++) {\n            s = t.getPointPosition(r, u), o = i(t.ctx, l.size, t.pointLabels[r] || \"\"), t._pointLabelSizes[r] = o;var g = t.getIndexAngle(r),\n                p = f.toDegrees(g) % 360,\n                m = a(p, s.x, o.w, 0, 180),\n                v = a(p, s.y, o.h, 90, 270);m.start < d.l && (d.l = m.start, c.l = g), m.end > d.r && (d.r = m.end, c.r = g), v.start < d.t && (d.t = v.start, c.t = g), v.end > d.b && (d.b = v.end, c.b = g);\n          }t.setReductions(u, d, c);\n        }function o(t) {\n          var e = Math.min(t.height / 2, t.width / 2);t.drawingArea = Math.round(e), t.setCenterPoint(0, 0, 0, 0);\n        }function s(t) {\n          return 0 === t || 180 === t ? \"center\" : t < 180 ? \"left\" : \"right\";\n        }function l(t, e, n, i) {\n          if (f.isArray(e)) for (var a = n.y, r = 1.5 * i, o = 0; o < e.length; ++o) {\n            t.fillText(e[o], n.x, a), a += r;\n          } else t.fillText(e, n.x, n.y);\n        }function u(t, e, n) {\n          90 === t || 270 === t ? n.y -= e.h / 2 : (t > 270 || t < 90) && (n.y -= e.h);\n        }function d(t) {\n          var i = t.ctx,\n              a = f.getValueOrDefault,\n              r = t.options,\n              o = r.angleLines,\n              d = r.pointLabels;i.lineWidth = o.lineWidth, i.strokeStyle = o.color;var c = t.getDistanceFromCenterForValue(r.reverse ? t.min : t.max),\n              h = n(t);i.textBaseline = \"top\";for (var p = e(t) - 1; p >= 0; p--) {\n            if (o.display) {\n              var m = t.getPointPosition(p, c);i.beginPath(), i.moveTo(t.xCenter, t.yCenter), i.lineTo(m.x, m.y), i.stroke(), i.closePath();\n            }if (d.display) {\n              var v = t.getPointPosition(p, c + 5),\n                  y = a(d.fontColor, g.defaultFontColor);i.font = h.font, i.fillStyle = y;var b = t.getIndexAngle(p),\n                  x = f.toDegrees(b);i.textAlign = s(x), u(x, t._pointLabelSizes[p], v), l(i, t.pointLabels[p] || \"\", v, h.size);\n            }\n          }\n        }function c(t, n, i, a) {\n          var r = t.ctx;if (r.strokeStyle = f.getValueAtIndexOrDefault(n.color, a - 1), r.lineWidth = f.getValueAtIndexOrDefault(n.lineWidth, a - 1), t.options.gridLines.circular) r.beginPath(), r.arc(t.xCenter, t.yCenter, i, 0, 2 * Math.PI), r.closePath(), r.stroke();else {\n            var o = e(t);if (0 === o) return;r.beginPath();var s = t.getPointPosition(0, i);r.moveTo(s.x, s.y);for (var l = 1; l < o; l++) {\n              s = t.getPointPosition(l, i), r.lineTo(s.x, s.y);\n            }r.closePath(), r.stroke();\n          }\n        }function h(t) {\n          return f.isNumber(t) ? t : 0;\n        }var f = t.helpers,\n            g = t.defaults.global,\n            p = { display: !0, animate: !0, position: \"chartArea\", angleLines: { display: !0, color: \"rgba(0, 0, 0, 0.1)\", lineWidth: 1 }, gridLines: { circular: !1 }, ticks: { showLabelBackdrop: !0, backdropColor: \"rgba(255,255,255,0.75)\", backdropPaddingY: 2, backdropPaddingX: 2, callback: t.Ticks.formatters.linear }, pointLabels: { display: !0, fontSize: 10, callback: function callback(t) {\n              return t;\n            } } },\n            m = t.LinearScaleBase.extend({ setDimensions: function setDimensions() {\n            var t = this,\n                e = t.options,\n                n = e.ticks;t.width = t.maxWidth, t.height = t.maxHeight, t.xCenter = Math.round(t.width / 2), t.yCenter = Math.round(t.height / 2);var i = f.min([t.height, t.width]),\n                a = f.getValueOrDefault(n.fontSize, g.defaultFontSize);t.drawingArea = e.display ? i / 2 - (a / 2 + n.backdropPaddingY) : i / 2;\n          }, determineDataLimits: function determineDataLimits() {\n            var t = this,\n                e = t.chart,\n                n = Number.POSITIVE_INFINITY,\n                i = Number.NEGATIVE_INFINITY;f.each(e.data.datasets, function (a, r) {\n              if (e.isDatasetVisible(r)) {\n                var o = e.getDatasetMeta(r);f.each(a.data, function (e, a) {\n                  var r = +t.getRightValue(e);isNaN(r) || o.data[a].hidden || (n = Math.min(r, n), i = Math.max(r, i));\n                });\n              }\n            }), t.min = n === Number.POSITIVE_INFINITY ? 0 : n, t.max = i === Number.NEGATIVE_INFINITY ? 0 : i, t.handleTickRangeOptions();\n          }, getTickLimit: function getTickLimit() {\n            var t = this.options.ticks,\n                e = f.getValueOrDefault(t.fontSize, g.defaultFontSize);return Math.min(t.maxTicksLimit ? t.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * e)));\n          }, convertTicksToLabels: function convertTicksToLabels() {\n            var e = this;t.LinearScaleBase.prototype.convertTicksToLabels.call(e), e.pointLabels = e.chart.data.labels.map(e.options.pointLabels.callback, e);\n          }, getLabelForIndex: function getLabelForIndex(t, e) {\n            return +this.getRightValue(this.chart.data.datasets[e].data[t]);\n          }, fit: function fit() {\n            this.options.pointLabels.display ? r(this) : o(this);\n          }, setReductions: function setReductions(t, e, n) {\n            var i = this,\n                a = e.l / Math.sin(n.l),\n                r = Math.max(e.r - i.width, 0) / Math.sin(n.r),\n                o = -e.t / Math.cos(n.t),\n                s = -Math.max(e.b - i.height, 0) / Math.cos(n.b);a = h(a), r = h(r), o = h(o), s = h(s), i.drawingArea = Math.min(Math.round(t - (a + r) / 2), Math.round(t - (o + s) / 2)), i.setCenterPoint(a, r, o, s);\n          }, setCenterPoint: function setCenterPoint(t, e, n, i) {\n            var a = this,\n                r = a.width - e - a.drawingArea,\n                o = t + a.drawingArea,\n                s = n + a.drawingArea,\n                l = a.height - i - a.drawingArea;a.xCenter = Math.round((o + r) / 2 + a.left), a.yCenter = Math.round((s + l) / 2 + a.top);\n          }, getIndexAngle: function getIndexAngle(t) {\n            var n = 2 * Math.PI / e(this),\n                i = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0,\n                a = i * Math.PI * 2 / 360;return t * n + a;\n          }, getDistanceFromCenterForValue: function getDistanceFromCenterForValue(t) {\n            var e = this;if (null === t) return 0;var n = e.drawingArea / (e.max - e.min);return e.options.reverse ? (e.max - t) * n : (t - e.min) * n;\n          }, getPointPosition: function getPointPosition(t, e) {\n            var n = this,\n                i = n.getIndexAngle(t) - Math.PI / 2;return { x: Math.round(Math.cos(i) * e) + n.xCenter, y: Math.round(Math.sin(i) * e) + n.yCenter };\n          }, getPointPositionForValue: function getPointPositionForValue(t, e) {\n            return this.getPointPosition(t, this.getDistanceFromCenterForValue(e));\n          }, getBasePosition: function getBasePosition() {\n            var t = this,\n                e = t.min,\n                n = t.max;return t.getPointPositionForValue(0, t.beginAtZero ? 0 : e < 0 && n < 0 ? n : e > 0 && n > 0 ? e : 0);\n          }, draw: function draw() {\n            var t = this,\n                e = t.options,\n                n = e.gridLines,\n                i = e.ticks,\n                a = f.getValueOrDefault;if (e.display) {\n              var r = t.ctx,\n                  o = a(i.fontSize, g.defaultFontSize),\n                  s = a(i.fontStyle, g.defaultFontStyle),\n                  l = a(i.fontFamily, g.defaultFontFamily),\n                  u = f.fontString(o, s, l);f.each(t.ticks, function (s, l) {\n                if (l > 0 || e.reverse) {\n                  var d = t.getDistanceFromCenterForValue(t.ticksAsNumbers[l]),\n                      h = t.yCenter - d;if (n.display && 0 !== l && c(t, n, d, l), i.display) {\n                    var f = a(i.fontColor, g.defaultFontColor);if (r.font = u, i.showLabelBackdrop) {\n                      var p = r.measureText(s).width;r.fillStyle = i.backdropColor, r.fillRect(t.xCenter - p / 2 - i.backdropPaddingX, h - o / 2 - i.backdropPaddingY, p + 2 * i.backdropPaddingX, o + 2 * i.backdropPaddingY);\n                    }r.textAlign = \"center\", r.textBaseline = \"middle\", r.fillStyle = f, r.fillText(s, t.xCenter, h);\n                  }\n                }\n              }), (e.angleLines.display || e.pointLabels.display) && d(t);\n            }\n          } });t.scaleService.registerScaleType(\"radialLinear\", m, p);\n      };\n    }, {}], 49: [function (t, e, n) {\n      \"use strict\";\n      var i = t(6);i = \"function\" == typeof i ? i : window.moment, e.exports = function (t) {\n        function e(t, e) {\n          var n = t.options.time;if (\"string\" == typeof n.parser) return i(e, n.parser);if (\"function\" == typeof n.parser) return n.parser(e);if (\"function\" == typeof e.getMonth || \"number\" == typeof e) return i(e);if (e.isValid && e.isValid()) return e;var a = n.format;return \"string\" != typeof a && a.call ? (console.warn(\"options.time.format is deprecated and replaced by options.time.parser.\"), a(e)) : i(e, a);\n        }function n(t, e, n, i) {\n          for (var a, r = Object.keys(s), o = r.length, l = r.indexOf(t); l < o; l++) {\n            a = r[l];var u = s[a],\n                d = u.steps && u.steps[u.steps.length - 1] || u.maxStep;if (void 0 === d || Math.ceil((n - e) / (d * u.size)) <= i) break;\n          }return a;\n        }function a(t, e, n, i) {\n          var a = s[n],\n              r = a.size,\n              o = Math.ceil((e - t) / r),\n              l = 1,\n              u = e - t;if (a.steps) for (var d = a.steps.length, c = 0; c < d && o > i; c++) {\n            l = a.steps[c], o = Math.ceil(u / (r * l));\n          } else for (; o > i && i > 0;) {\n            ++l, o = Math.ceil(u / (r * l));\n          }return l;\n        }function r(t, e, n) {\n          var a = [];if (t.maxTicks) {\n            var r = t.stepSize;a.push(void 0 !== t.min ? t.min : n.min);for (var o = i(n.min); o.add(r, t.unit).valueOf() < n.max;) {\n              a.push(o.valueOf());\n            }var s = t.max || n.max;a[a.length - 1] !== s && a.push(s);\n          }return a;\n        }var o = t.helpers,\n            s = { millisecond: { size: 1, steps: [1, 2, 5, 10, 20, 50, 100, 250, 500] }, second: { size: 1e3, steps: [1, 2, 5, 10, 30] }, minute: { size: 6e4, steps: [1, 2, 5, 10, 30] }, hour: { size: 36e5, steps: [1, 2, 3, 6, 12] }, day: { size: 864e5, steps: [1, 2, 5] }, week: { size: 6048e5, maxStep: 4 }, month: { size: 2628e6, maxStep: 3 }, quarter: { size: 7884e6, maxStep: 4 }, year: { size: 3154e7, maxStep: !1 } },\n            l = { position: \"bottom\", time: { parser: !1, format: !1, unit: !1, round: !1, displayFormat: !1, isoWeekday: !1, minUnit: \"millisecond\", displayFormats: { millisecond: \"h:mm:ss.SSS a\", second: \"h:mm:ss a\", minute: \"h:mm:ss a\", hour: \"MMM D, hA\", day: \"ll\", week: \"ll\", month: \"MMM YYYY\", quarter: \"[Q]Q - YYYY\", year: \"YYYY\" } }, ticks: { autoSkip: !1 } };t.Ticks.generators.time = function (t, e) {\n          var n,\n              a,\n              o = t.isoWeekday;return \"week\" === t.unit && o !== !1 ? (n = i(e.min).startOf(\"isoWeek\").isoWeekday(o).valueOf(), a = i(e.max).startOf(\"isoWeek\").isoWeekday(o), e.max - a > 0 && a.add(1, \"week\"), a = a.valueOf()) : (n = i(e.min).startOf(t.unit).valueOf(), a = i(e.max).startOf(t.unit), e.max - a > 0 && a.add(1, t.unit), a = a.valueOf()), r(t, e, { min: n, max: a });\n        };var u = t.Scale.extend({ initialize: function initialize() {\n            if (!i) throw new Error(\"Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com\");t.Scale.prototype.initialize.call(this);\n          }, determineDataLimits: function determineDataLimits() {\n            var t,\n                n = this,\n                i = n.options.time,\n                a = Number.MAX_SAFE_INTEGER,\n                r = Number.MIN_SAFE_INTEGER,\n                s = n.chart.data,\n                l = { labels: [], datasets: [] };o.each(s.labels, function (o, s) {\n              var u = e(n, o);u.isValid() && (i.round && u.startOf(i.round), t = u.valueOf(), a = Math.min(t, a), r = Math.max(t, r), l.labels[s] = t);\n            }), o.each(s.datasets, function (s, u) {\n              var d = [];\"object\" == _typeof(s.data[0]) && null !== s.data[0] && n.chart.isDatasetVisible(u) ? o.each(s.data, function (o, s) {\n                var l = e(n, n.getRightValue(o));l.isValid() && (i.round && l.startOf(i.round), t = l.valueOf(), a = Math.min(t, a), r = Math.max(t, r), d[s] = t);\n              }) : d = l.labels.slice(), l.datasets[u] = d;\n            }), n.dataMin = a, n.dataMax = r, n._parsedData = l;\n          }, buildTicks: function buildTicks() {\n            var i,\n                r,\n                s = this,\n                l = s.options.time,\n                u = s.dataMin,\n                d = s.dataMax;if (l.min) {\n              var c = e(s, l.min);l.round && c.round(l.round), i = c.valueOf();\n            }l.max && (r = e(s, l.max).valueOf());var h = s.getLabelCapacity(i || u),\n                f = l.unit || n(l.minUnit, i || u, r || d, h);s.displayFormat = l.displayFormats[f];var g = l.stepSize || a(i || u, r || d, f, h);s.ticks = t.Ticks.generators.time({ maxTicks: h, min: i, max: r, stepSize: g, unit: f, isoWeekday: l.isoWeekday }, { min: u, max: d }), s.max = o.max(s.ticks), s.min = o.min(s.ticks);\n          }, getLabelForIndex: function getLabelForIndex(t, n) {\n            var i = this,\n                a = i.chart.data.labels && t < i.chart.data.labels.length ? i.chart.data.labels[t] : \"\",\n                r = i.chart.data.datasets[n].data[t];return null !== r && \"object\" == (typeof r === \"undefined\" ? \"undefined\" : _typeof(r)) && (a = i.getRightValue(r)), i.options.time.tooltipFormat && (a = e(i, a).format(i.options.time.tooltipFormat)), a;\n          }, tickFormatFunction: function tickFormatFunction(t, e, n) {\n            var i = t.format(this.displayFormat),\n                a = this.options.ticks,\n                r = o.getValueOrDefault(a.callback, a.userCallback);return r ? r(i, e, n) : i;\n          }, convertTicksToLabels: function convertTicksToLabels() {\n            var t = this;t.ticksAsTimestamps = t.ticks, t.ticks = t.ticks.map(function (t) {\n              return i(t);\n            }).map(t.tickFormatFunction, t);\n          }, getPixelForOffset: function getPixelForOffset(t) {\n            var e = this,\n                n = e.max - e.min,\n                i = n ? (t - e.min) / n : 0;if (e.isHorizontal()) {\n              var a = e.width * i;return e.left + Math.round(a);\n            }var r = e.height * i;return e.top + Math.round(r);\n          }, getPixelForValue: function getPixelForValue(t, n, i) {\n            var a = this,\n                r = null;if (void 0 !== n && void 0 !== i && (r = a._parsedData.datasets[i][n]), null === r && (t && t.isValid || (t = e(a, a.getRightValue(t))), t && t.isValid && t.isValid() && (r = t.valueOf())), null !== r) return a.getPixelForOffset(r);\n          }, getPixelForTick: function getPixelForTick(t) {\n            return this.getPixelForOffset(this.ticksAsTimestamps[t]);\n          }, getValueForPixel: function getValueForPixel(t) {\n            var e = this,\n                n = e.isHorizontal() ? e.width : e.height,\n                a = (t - (e.isHorizontal() ? e.left : e.top)) / n;return i(e.min + a * (e.max - e.min));\n          }, getLabelWidth: function getLabelWidth(e) {\n            var n = this,\n                i = n.options.ticks,\n                a = n.ctx.measureText(e).width,\n                r = Math.cos(o.toRadians(i.maxRotation)),\n                s = Math.sin(o.toRadians(i.maxRotation)),\n                l = o.getValueOrDefault(i.fontSize, t.defaults.global.defaultFontSize);return a * r + l * s;\n          }, getLabelCapacity: function getLabelCapacity(t) {\n            var e = this;e.displayFormat = e.options.time.displayFormats.millisecond;var n = e.tickFormatFunction(i(t), 0, []),\n                a = e.getLabelWidth(n),\n                r = e.isHorizontal() ? e.width : e.height,\n                o = r / a;return o;\n          } });t.scaleService.registerScaleType(\"time\", u, l);\n      };\n    }, { 6: 6 }] }, {}, [7])(7);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-66fc0b2f","hasScoped":false}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./app/javascript/packs/chart.vue ***!
  \***************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"canvas\", { staticStyle: { width: \"512px\", height: \"256px\" } })\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-66fc0b2f\", esExports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2NoYXJ0LnZ1ZT9mMjFmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJjYW52YXNcIiwgeyBzdGF0aWNTdHlsZTogeyB3aWR0aDogXCI1MTJweFwiLCBoZWlnaHQ6IFwiMjU2cHhcIiB9IH0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxudmFyIGVzRXhwb3J0cyA9IHsgcmVuZGVyOiByZW5kZXIsIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zIH1cbmV4cG9ydCBkZWZhdWx0IGVzRXhwb3J0c1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAobW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgIHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIikucmVyZW5kZXIoXCJkYXRhLXYtNjZmYzBiMmZcIiwgZXNFeHBvcnRzKVxuICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXI/e1wiaWRcIjpcImRhdGEtdi02NmZjMGIyZlwiLFwiaGFzU2NvcGVkXCI6ZmFsc2V9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2NoYXJ0LnZ1ZVxuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!**************************************!*\
  !*** ./app/javascript/packs/app.vue ***!
  \**************************************/
/*! exports provided: default */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_app_vue__ = __webpack_require__(/*! !babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./app.vue */ 8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_394f6e32_hasScoped_true_node_modules_vue_loader_lib_selector_type_template_index_0_app_vue__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/template-compiler/index?{\"id\":\"data-v-394f6e32\",\"hasScoped\":true}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./app.vue */ 9);\nvar disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(/*! !../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!vue-style-loader!css-loader!../../../node_modules/vue-loader/lib/style-compiler/index?{\"vue\":true,\"id\":\"data-v-394f6e32\",\"scoped\":true,\"hasInlineConfig\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./app.vue */ 7)\n}\nvar normalizeComponent = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/component-normalizer */ 0)\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-394f6e32\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_app_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_394f6e32_hasScoped_true_node_modules_vue_loader_lib_selector_type_template_index_0_app_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"app/javascript/packs/app.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] app.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-394f6e32\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-394f6e32\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2FwcC52dWU/ZjRkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGlzcG9zZWQgPSBmYWxzZVxuZnVuY3Rpb24gaW5qZWN0U3R5bGUgKHNzckNvbnRleHQpIHtcbiAgaWYgKGRpc3Bvc2VkKSByZXR1cm5cbiAgcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbi9kaXN0L2xvYWRlci5qcz97XFxcIm9taXRcXFwiOjEsXFxcInJlbW92ZVxcXCI6dHJ1ZX0hdnVlLXN0eWxlLWxvYWRlciFjc3MtbG9hZGVyIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleD97XFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtMzk0ZjZlMzJcXFwiLFxcXCJzY29wZWRcXFwiOnRydWUsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6ZmFsc2V9IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXN0eWxlcyZpbmRleD0wIS4vYXBwLnZ1ZVwiKVxufVxudmFyIG5vcm1hbGl6ZUNvbXBvbmVudCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyXCIpXG4vKiBzY3JpcHQgKi9cbmltcG9ydCBfX3Z1ZV9zY3JpcHRfXyBmcm9tIFwiISFiYWJlbC1sb2FkZXIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9hcHAudnVlXCJcbi8qIHRlbXBsYXRlICovXG5pbXBvcnQgX192dWVfdGVtcGxhdGVfXyBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi0zOTRmNmUzMlxcXCIsXFxcImhhc1Njb3BlZFxcXCI6dHJ1ZX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL2FwcC52dWVcIlxuLyogc3R5bGVzICovXG52YXIgX192dWVfc3R5bGVzX18gPSBpbmplY3RTdHlsZVxuLyogc2NvcGVJZCAqL1xudmFyIF9fdnVlX3Njb3BlSWRfXyA9IFwiZGF0YS12LTM5NGY2ZTMyXCJcbi8qIG1vZHVsZUlkZW50aWZpZXIgKHNlcnZlciBvbmx5KSAqL1xudmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18gPSBudWxsXG52YXIgQ29tcG9uZW50ID0gbm9ybWFsaXplQ29tcG9uZW50KFxuICBfX3Z1ZV9zY3JpcHRfXyxcbiAgX192dWVfdGVtcGxhdGVfXyxcbiAgX192dWVfc3R5bGVzX18sXG4gIF9fdnVlX3Njb3BlSWRfXyxcbiAgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfX1xuKVxuQ29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJhcHAvamF2YXNjcmlwdC9wYWNrcy9hcHAudnVlXCJcbmlmIChDb21wb25lbnQuZXNNb2R1bGUgJiYgT2JqZWN0LmtleXMoQ29tcG9uZW50LmVzTW9kdWxlKS5zb21lKGZ1bmN0aW9uIChrZXkpIHtyZXR1cm4ga2V5ICE9PSBcImRlZmF1bHRcIiAmJiBrZXkuc3Vic3RyKDAsIDIpICE9PSBcIl9fXCJ9KSkge2NvbnNvbGUuZXJyb3IoXCJuYW1lZCBleHBvcnRzIGFyZSBub3Qgc3VwcG9ydGVkIGluICoudnVlIGZpbGVzLlwiKX1cbmlmIChDb21wb25lbnQub3B0aW9ucy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWUtbG9hZGVyXSBhcHAudnVlOiBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgd2l0aCB0ZW1wbGF0ZXMsIHRoZXkgc2hvdWxkIHVzZSByZW5kZXIgZnVuY3Rpb25zLlwiKX1cblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkge1xuICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCBmYWxzZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTM5NGY2ZTMyXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtMzk0ZjZlMzJcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH1cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGlzcG9zZWQgPSB0cnVlXG4gIH0pXG59KSgpfVxuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQuZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9hcHAvamF2YXNjcmlwdC9wYWNrcy9hcHAudnVlXG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/extract-text-webpack-plugin/dist/loader.js?{"omit":1,"remove":true}!./node_modules/vue-style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{"vue":true,"id":"data-v-394f6e32","scoped":true,"hasInlineConfig":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./app/javascript/packs/app.vue ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2FwcC52dWU/M2E4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbi9kaXN0L2xvYWRlci5qcz97XCJvbWl0XCI6MSxcInJlbW92ZVwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIhLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlciEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlcj97XCJ2dWVcIjp0cnVlLFwiaWRcIjpcImRhdGEtdi0zOTRmNmUzMlwiLFwic2NvcGVkXCI6dHJ1ZSxcImhhc0lubGluZUNvbmZpZ1wiOmZhbHNlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vYXBwL2phdmFzY3JpcHQvcGFja3MvYXBwLnZ1ZVxuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./app/javascript/packs/app.vue ***!
  \************************************************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__chart_vue__ = __webpack_require__(/*! ./chart.vue */ 1);\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      message: \"Today's mailbox activity\",\n      labels: [],\n      data: [],\n      loaded: false\n    };\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      this.$http.get('/admin/fetch_data').then(function (res) {\n        _this.labels = res.body[0];\n        _this.data = res.body[1];\n        _this.loaded = true;\n      });\n    }\n  },\n  created: function created() {\n    this.fetchData();\n  },\n\n  components: { Chart: __WEBPACK_IMPORTED_MODULE_0__chart_vue__[\"default\"] }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2FwcC52dWU/MmIyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuXG5cbmltcG9ydCBDaGFydCBmcm9tICcuL2NoYXJ0LnZ1ZSc7XG5leHBvcnQgZGVmYXVsdCB7XG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1lc3NhZ2U6IFwiVG9kYXkncyBtYWlsYm94IGFjdGl2aXR5XCIsXG4gICAgICBsYWJlbHM6IFtdLFxuICAgICAgZGF0YTogW10sXG4gICAgICBsb2FkZWQ6IGZhbHNlXG4gICAgfTtcbiAgfSxcbiAgbWV0aG9kczoge1xuICAgIGZldGNoRGF0YTogZnVuY3Rpb24gZmV0Y2hEYXRhKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdGhpcy4kaHR0cC5nZXQoJy9hZG1pbi9mZXRjaF9kYXRhJykudGhlbihmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgIF90aGlzLmxhYmVscyA9IHJlcy5ib2R5WzBdO1xuICAgICAgICBfdGhpcy5kYXRhID0gcmVzLmJvZHlbMV07XG4gICAgICAgIF90aGlzLmxvYWRlZCA9IHRydWU7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7XG4gICAgdGhpcy5mZXRjaERhdGEoKTtcbiAgfSxcblxuICBjb21wb25lbnRzOiB7IENoYXJ0OiBDaGFydCB9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2FwcC52dWVcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/*!************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-394f6e32","hasScoped":true}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./app/javascript/packs/app.vue ***!
  \************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"app\" } },\n    [\n      _c(\"p\", [_vm._v(_vm._s(_vm.message))]),\n      _vm._v(\" \"),\n      _c(\"chart\", {\n        attrs: {\n          labels: _vm.labels,\n          data: _vm.data,\n          loaded: _vm.loaded,\n          type: \"bar\"\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-394f6e32\", esExports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2FwcC52dWU/ZDBkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwiZGl2XCIsXG4gICAgeyBhdHRyczogeyBpZDogXCJhcHBcIiB9IH0sXG4gICAgW1xuICAgICAgX2MoXCJwXCIsIFtfdm0uX3YoX3ZtLl9zKF92bS5tZXNzYWdlKSldKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcImNoYXJ0XCIsIHtcbiAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICBsYWJlbHM6IF92bS5sYWJlbHMsXG4gICAgICAgICAgZGF0YTogX3ZtLmRhdGEsXG4gICAgICAgICAgbG9hZGVkOiBfdm0ubG9hZGVkLFxuICAgICAgICAgIHR5cGU6IFwiYmFyXCJcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICBdLFxuICAgIDFcbiAgKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcbnZhciBlc0V4cG9ydHMgPSB7IHJlbmRlcjogcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZucyB9XG5leHBvcnQgZGVmYXVsdCBlc0V4cG9ydHNcbmlmIChtb2R1bGUuaG90KSB7XG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKG1vZHVsZS5ob3QuZGF0YSkge1xuICAgICByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpLnJlcmVuZGVyKFwiZGF0YS12LTM5NGY2ZTMyXCIsIGVzRXhwb3J0cylcbiAgfVxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3RlbXBsYXRlLWNvbXBpbGVyP3tcImlkXCI6XCJkYXRhLXYtMzk0ZjZlMzJcIixcImhhc1Njb3BlZFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL2FwcC9qYXZhc2NyaXB0L3BhY2tzL2FwcC52dWVcbi8vIG1vZHVsZSBpZCA9IDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */,
/* 11 */
/*!**************************************!*\
  !*** ./app/javascript/packs/dash.js ***!
  \**************************************/
/*! exports provided:  */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm__ = __webpack_require__(/*! vue/dist/vue.esm */ 12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_vue__ = __webpack_require__(/*! ./app.vue */ 6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue_resource__ = __webpack_require__(/*! vue-resource */ 14);\n/* eslint no-console: 0 */\n// Run this example by adding <%= javascript_pack_tag 'hello_vue' %> (and\n// <%= stylesheet_pack_tag 'hello_vue' %> if you set extractStyles to true\n// in config/webpack/loaders/vue.js) to the head of your layout file,\n// like app/views/layouts/application.html.erb.\n// All it does is render <div>Hello Vue</div> at the bottom of the page.\n\n// import Vue from 'vue'\n// import App from './app.vue'\n//\n// document.addEventListener('DOMContentLoaded', () => {\n//   document.body.appendChild(document.createElement('hello'))\n//   const app = new Vue(App).$mount('hello')\n//\n//   console.log(app)\n// })\n\n\n// The above code uses Vue without the compiler, which means you cannot\n// use Vue to target elements in your existing html templates. You would\n// need to always use single file components.\n// To be able to target elements in your existing html/erb templates,\n// comment out the above code and uncomment the below\n// Add <%= javascript_pack_tag 'hello_vue' %> to your layout\n// Then add this markup to your html template:\n//\n// <div id='hello'>\n//   {{message}}\n//   <app></app>\n// </div>\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_2_vue_resource__[\"a\" /* default */]);\n\ndocument.addEventListener('turbolinks:load', function () {\n  var app = new __WEBPACK_IMPORTED_MODULE_0_vue_dist_vue_esm__[\"a\" /* default */]({\n    el: '#dashboard',\n    data: {\n      // message: \"Can you say hello?\"\n    },\n    components: { App: __WEBPACK_IMPORTED_MODULE_1__app_vue__[\"default\"] }\n  });\n  window.vueApp = app;\n});\ndocument.addEventListener('turbolinks:before-render', function () {\n  window.vueApp.$destroy();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvamF2YXNjcmlwdC9wYWNrcy9kYXNoLmpzP2I0ZTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLWNvbnNvbGU6IDAgKi9cbi8vIFJ1biB0aGlzIGV4YW1wbGUgYnkgYWRkaW5nIDwlPSBqYXZhc2NyaXB0X3BhY2tfdGFnICdoZWxsb192dWUnICU+IChhbmRcbi8vIDwlPSBzdHlsZXNoZWV0X3BhY2tfdGFnICdoZWxsb192dWUnICU+IGlmIHlvdSBzZXQgZXh0cmFjdFN0eWxlcyB0byB0cnVlXG4vLyBpbiBjb25maWcvd2VicGFjay9sb2FkZXJzL3Z1ZS5qcykgdG8gdGhlIGhlYWQgb2YgeW91ciBsYXlvdXQgZmlsZSxcbi8vIGxpa2UgYXBwL3ZpZXdzL2xheW91dHMvYXBwbGljYXRpb24uaHRtbC5lcmIuXG4vLyBBbGwgaXQgZG9lcyBpcyByZW5kZXIgPGRpdj5IZWxsbyBWdWU8L2Rpdj4gYXQgdGhlIGJvdHRvbSBvZiB0aGUgcGFnZS5cblxuLy8gaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG4vLyBpbXBvcnQgQXBwIGZyb20gJy4vYXBwLnZ1ZSdcbi8vXG4vLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuLy8gICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2hlbGxvJykpXG4vLyAgIGNvbnN0IGFwcCA9IG5ldyBWdWUoQXBwKS4kbW91bnQoJ2hlbGxvJylcbi8vXG4vLyAgIGNvbnNvbGUubG9nKGFwcClcbi8vIH0pXG5cblxuLy8gVGhlIGFib3ZlIGNvZGUgdXNlcyBWdWUgd2l0aG91dCB0aGUgY29tcGlsZXIsIHdoaWNoIG1lYW5zIHlvdSBjYW5ub3Rcbi8vIHVzZSBWdWUgdG8gdGFyZ2V0IGVsZW1lbnRzIGluIHlvdXIgZXhpc3RpbmcgaHRtbCB0ZW1wbGF0ZXMuIFlvdSB3b3VsZFxuLy8gbmVlZCB0byBhbHdheXMgdXNlIHNpbmdsZSBmaWxlIGNvbXBvbmVudHMuXG4vLyBUbyBiZSBhYmxlIHRvIHRhcmdldCBlbGVtZW50cyBpbiB5b3VyIGV4aXN0aW5nIGh0bWwvZXJiIHRlbXBsYXRlcyxcbi8vIGNvbW1lbnQgb3V0IHRoZSBhYm92ZSBjb2RlIGFuZCB1bmNvbW1lbnQgdGhlIGJlbG93XG4vLyBBZGQgPCU9IGphdmFzY3JpcHRfcGFja190YWcgJ2hlbGxvX3Z1ZScgJT4gdG8geW91ciBsYXlvdXRcbi8vIFRoZW4gYWRkIHRoaXMgbWFya3VwIHRvIHlvdXIgaHRtbCB0ZW1wbGF0ZTpcbi8vXG4vLyA8ZGl2IGlkPSdoZWxsbyc+XG4vLyAgIHt7bWVzc2FnZX19XG4vLyAgIDxhcHA+PC9hcHA+XG4vLyA8L2Rpdj5cblxuXG5pbXBvcnQgVnVlIGZyb20gJ3Z1ZS9kaXN0L3Z1ZS5lc20nO1xuaW1wb3J0IEFwcCBmcm9tICcuL2FwcC52dWUnO1xuaW1wb3J0IFZ1ZVJlc291cmNlIGZyb20gJ3Z1ZS1yZXNvdXJjZSc7XG5WdWUudXNlKFZ1ZVJlc291cmNlKTtcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndHVyYm9saW5rczpsb2FkJywgZnVuY3Rpb24gKCkge1xuICB2YXIgYXBwID0gbmV3IFZ1ZSh7XG4gICAgZWw6ICcjZGFzaGJvYXJkJyxcbiAgICBkYXRhOiB7XG4gICAgICAvLyBtZXNzYWdlOiBcIkNhbiB5b3Ugc2F5IGhlbGxvP1wiXG4gICAgfSxcbiAgICBjb21wb25lbnRzOiB7IEFwcDogQXBwIH1cbiAgfSk7XG4gIHdpbmRvdy52dWVBcHAgPSBhcHA7XG59KTtcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3R1cmJvbGlua3M6YmVmb3JlLXJlbmRlcicsIGZ1bmN0aW9uICgpIHtcbiAgd2luZG93LnZ1ZUFwcC4kZGVzdHJveSgpO1xufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9hcHAvamF2YXNjcmlwdC9wYWNrcy9kYXNoLmpzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/*!******************************************!*\
  !*** ./node_modules/vue/dist/vue.esm.js ***!
  \******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.4.4\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (true) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (!isIE && typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (\"development\" !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"development\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"development\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"development\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (\"development\" !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (true) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (\"development\" !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode, deep) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  if (deep && vnode.children) {\n    cloned.children = cloneVNodes(vnode.children);\n  }\n  return cloned\n}\n\nfunction cloneVNodes (vnodes, deep) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i], deep);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  var plain = !(passive || once$$1 || capture);\n  return {\n    name: name,\n    plain: plain,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\n// #6552\nfunction prioritizePlainEvents (a, b) {\n  return a.plain ? -1 : b.plain ? 1 : 0\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  var toAdd = [];\n  var hasModifier = false;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!event.plain) { hasModifier = true; }\n    if (isUndef(cur)) {\n      \"development\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      event.handler = cur;\n      toAdd.push(event);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  if (toAdd.length) {\n    if (hasModifier) { toAdd.sort(prioritizePlainEvents); }\n    for (var i = 0; i < toAdd.length; i++) {\n      var event$1 = toAdd[i];\n      add(event$1.name, event$1.handler, event$1.once, event$1.capture, event$1.passive);\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"development\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 true\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (true) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (\"development\" !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = (parentVnode.data && parentVnode.data.attrs) || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (true) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (\"development\" !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"development\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (true) {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"development\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"development\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  \"development\" !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (\"development\" !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (\"development\" !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  \"development\" !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (true) {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  \"development\" !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (true) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject).filter(function (key) {\n          /* istanbul ignore next */\n          return Object.getOwnPropertyDescriptor(inject, key).enumerable\n        })\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (\"development\" !== 'production' && !source) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || emptyObject,\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"development\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (\"development\" !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"development\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"development\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"development\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (true) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // if the parent didn't update, the slot nodes will be the ones from\n      // last render. They need to be cloned to ensure \"freshness\" for this render.\n      for (var key in vm.$slots) {\n        var slot = vm.$slots[key];\n        if (slot._rendered) {\n          vm.$slots[key] = cloneVNodes(slot, true /* deep */);\n        }\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (true) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (\"development\" !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (\"development\" !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (true) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (\"development\" !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (\"development\" !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (true) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (true) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (true) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.4';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"development\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (true) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (\"development\" !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (\"development\" !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (true) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (\"development\" !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (\"development\" !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (true) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    \"development\" !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (true) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (true) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat([$$v]))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (\"development\" !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (\"development\" !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"development\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (\"development\" !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (\"development\" !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (true) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (\"development\" !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (\"development\" !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (\"development\" !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (true) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (\"development\" !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (\"development\" !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"development\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (true) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (true) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (true) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (\"development\" !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"development\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (true) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (\"development\" !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (\"development\" !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      addAttr(el, 'slot', slotTarget);\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (\"development\" !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (true) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      \"development\" !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (\"development\" !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (\"development\" !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"development\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\"development\" !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (\"development\" !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (true) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (true) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (true) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (true) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"development\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (\"development\" !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (true) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 13)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XHJcblxyXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxyXG5nID0gKGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiB0aGlzO1xyXG59KSgpO1xyXG5cclxudHJ5IHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcclxuXHRnID0gZyB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkgfHwgKDEsZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoKGUpIHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxyXG5cdGlmKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpXHJcblx0XHRnID0gd2luZG93O1xyXG59XHJcblxyXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXHJcbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXHJcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZztcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSAxM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/*!***************************************************************!*\
  !*** ./node_modules/vue-resource/dist/vue-resource.es2015.js ***!
  \***************************************************************/
/*! exports provided: default, Url, Http, Resource */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export Url */\n/* unused harmony export Http */\n/* unused harmony export Resource */\n/*!\n * vue-resource v1.3.4\n * https://github.com/pagekit/vue-resource\n * Released under the MIT License.\n */\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise$1(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$1.reject = function (r) {\n    return new Promise$1(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$1.resolve = function (x) {\n    return new Promise$1(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$1.all = function all(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$1.race = function race(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$1.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$1(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\n/**\n * Promise adapter.\n */\n\nif (typeof Promise === 'undefined') {\n    window.Promise = Promise$1;\n}\n\nfunction PromiseObj(executor, context) {\n\n    if (executor instanceof Promise) {\n        this.promise = executor;\n    } else {\n        this.promise = new Promise(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromiseObj.all = function (iterable, context) {\n    return new PromiseObj(Promise.all(iterable), context);\n};\n\nPromiseObj.resolve = function (value, context) {\n    return new PromiseObj(Promise.resolve(value), context);\n};\n\nPromiseObj.reject = function (reason, context) {\n    return new PromiseObj(Promise.reject(reason), context);\n};\n\nPromiseObj.race = function (iterable, context) {\n    return new PromiseObj(Promise.race(iterable), context);\n};\n\nvar p = PromiseObj.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return Promise.reject(reason);\n        }\n    );\n};\n\n/**\n * Utility functions.\n */\n\nvar ref = {};\nvar hasOwnProperty = ref.hasOwnProperty;\n\nvar ref$1 = [];\nvar slice = ref$1.slice;\nvar debug = false;\nvar ntick;\n\nvar inBrowser = typeof window !== 'undefined';\n\nvar Util = function (ref) {\n    var config = ref.config;\n    var nextTick = ref.nextTick;\n\n    ntick = nextTick;\n    debug = config.debug || !config.silent;\n};\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return ntick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str ? str.replace(/^\\s*|\\s*$/g, '') : '';\n}\n\nfunction trimEnd(str, chars) {\n\n    if (str && chars === undefined) {\n        return str.replace(/\\s+$/, '');\n    }\n\n    if (!str || !chars) {\n        return str;\n    }\n\n    return str.replace(new RegExp((\"[\" + chars + \"]+$\")), '');\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction toUpper(str) {\n    return str ? str.toUpperCase() : '';\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\n\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isBlob(obj) {\n    return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = PromiseObj.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({$vm: obj, $options: opts}), fn, {$options: opts});\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (isArray(obj)) {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * Root Prefix Transform.\n */\n\nvar root = function (options$$1, next) {\n\n    var url = next(options$$1);\n\n    if (isString(options$$1.root) && !/^(https?:)?\\//.test(url)) {\n        url = trimEnd(options$$1.root, '/') + '/' + url;\n    }\n\n    return url;\n};\n\n/**\n * Query Parameter Transform.\n */\n\nvar query = function (options$$1, next) {\n\n    var urlParams = Object.keys(Url.options.params), query = {}, url = next(options$$1);\n\n    each(options$$1.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function expand(context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\n/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar template = function (options) {\n\n    var variables = [], url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n/**\n * Service for URL templating.\n */\n\nfunction Url(url, params) {\n\n    var self = this || {}, options$$1 = url, transform;\n\n    if (isString(url)) {\n        options$$1 = {url: url, params: params};\n    }\n\n    options$$1 = merge({}, Url.options, self.$options, options$$1);\n\n    Url.transforms.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Url.transform[handler];\n        }\n\n        if (isFunction(handler)) {\n            transform = factory(handler, transform, self.$vm);\n        }\n\n    });\n\n    return transform(options$$1);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transform = {template: template, query: query, root: root};\nUrl.transforms = ['template', 'query', 'root'];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    var el = document.createElement('a');\n\n    if (document.documentMode) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options$$1) {\n        return handler.call(vm, options$$1, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj), plain = isPlainObject(obj), hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * XDomain client (Internet Explorer).\n */\n\nvar xdrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xdr = new XDomainRequest(), handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load') {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(xdr.responseText, {status: status}));\n        };\n\n        request.abort = function () { return xdr.abort(); };\n\n        xdr.open(request.method, request.getUrl());\n\n        if (request.timeout) {\n            xdr.timeout = request.timeout;\n        }\n\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = handler;\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n};\n\n/**\n * CORS Interceptor.\n */\n\nvar SUPPORTS_CORS = inBrowser && 'withCredentials' in new XMLHttpRequest();\n\nvar cors = function (request, next) {\n\n    if (inBrowser) {\n\n        var orgUrl = Url.parse(location.href);\n        var reqUrl = Url.parse(request.getUrl());\n\n        if (reqUrl.protocol !== orgUrl.protocol || reqUrl.host !== orgUrl.host) {\n\n            request.crossOrigin = true;\n            request.emulateHTTP = false;\n\n            if (!SUPPORTS_CORS) {\n                request.client = xdrClient;\n            }\n        }\n    }\n\n    next();\n};\n\n/**\n * Form data Interceptor.\n */\n\nvar form = function (request, next) {\n\n    if (isFormData(request.body)) {\n\n        request.headers.delete('Content-Type');\n\n    } else if (isObject(request.body) && request.emulateJSON) {\n\n        request.body = Url.params(request.body);\n        request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    next();\n};\n\n/**\n * JSON Interceptor.\n */\n\nvar json = function (request, next) {\n\n    var type = request.headers.get('Content-Type') || '';\n\n    if (isObject(request.body) && type.indexOf('application/json') === 0) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        return response.bodyText ? when(response.text(), function (text) {\n\n            type = response.headers.get('Content-Type') || '';\n\n            if (type.indexOf('application/json') === 0 || isJson(text)) {\n\n                try {\n                    response.body = JSON.parse(text);\n                } catch (e) {\n                    response.body = null;\n                }\n\n            } else {\n                response.body = text;\n            }\n\n            return response;\n\n        }) : response;\n\n    });\n};\n\nfunction isJson(str) {\n\n    var start = str.match(/^\\[|^\\{(?!\\{)/), end = {'[': /]$/, '{': /}$/};\n\n    return start && end[start[0]].test(str);\n}\n\n/**\n * JSONP client (Browser).\n */\n\nvar jsonpClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var name = request.jsonp || 'callback', callback = request.jsonpCallback || '_jsonp' + Math.random().toString(36).substr(2), body = null, handler, script;\n\n        handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load' && body !== null) {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            if (status && window[callback]) {\n                delete window[callback];\n                document.body.removeChild(script);\n            }\n\n            resolve(request.respondWith(body, {status: status}));\n        };\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        request.abort = function () {\n            handler({type: 'abort'});\n        };\n\n        request.params[name] = callback;\n\n        if (request.timeout) {\n            setTimeout(request.abort, request.timeout);\n        }\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n/**\n * JSONP Interceptor.\n */\n\nvar jsonp = function (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next();\n};\n\n/**\n * Before Interceptor.\n */\n\nvar before = function (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n};\n\n/**\n * HTTP method override Interceptor.\n */\n\nvar method = function (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers.set('X-HTTP-Method-Override', request.method);\n        request.method = 'POST';\n    }\n\n    next();\n};\n\n/**\n * Header Interceptor.\n */\n\nvar header = function (request, next) {\n\n    var headers = assign({}, Http.headers.common,\n        !request.crossOrigin ? Http.headers.custom : {},\n        Http.headers[toLower(request.method)]\n    );\n\n    each(headers, function (value, name) {\n        if (!request.headers.has(name)) {\n            request.headers.set(name, value);\n        }\n    });\n\n    next();\n};\n\n/**\n * XMLHttp client (Browser).\n */\n\nvar xhrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), handler = function (event) {\n\n            var response = request.respondWith(\n                'response' in xhr ? xhr.response : xhr.responseText, {\n                    status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                    statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n                }\n            );\n\n            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () { return xhr.abort(); };\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        xhr.open(request.method, request.getUrl(), true);\n\n        if (request.timeout) {\n            xhr.timeout = request.timeout;\n        }\n\n        if (request.responseType && 'responseType' in xhr) {\n            xhr.responseType = request.responseType;\n        }\n\n        if (request.withCredentials || request.credentials) {\n            xhr.withCredentials = true;\n        }\n\n        if (!request.crossOrigin) {\n            request.headers.set('X-Requested-With', 'XMLHttpRequest');\n        }\n\n        request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n        });\n\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = handler;\n        xhr.send(request.getBody());\n    });\n};\n\n/**\n * Http client (Node).\n */\n\nvar nodeClient = function (request) {\n\n    var client = __webpack_require__(/*! got */ 15);\n\n    return new PromiseObj(function (resolve) {\n\n        var url = request.getUrl();\n        var body = request.getBody();\n        var method = request.method;\n        var headers = {}, handler;\n\n        request.headers.forEach(function (value, name) {\n            headers[name] = value;\n        });\n\n        client(url, {body: body, method: method, headers: headers}).then(handler = function (resp) {\n\n            var response = request.respondWith(resp.body, {\n                    status: resp.statusCode,\n                    statusText: trim(resp.statusMessage)\n                }\n            );\n\n            each(resp.headers, function (value, name) {\n                response.headers.set(name, value);\n            });\n\n            resolve(response);\n\n        }, function (error$$1) { return handler(error$$1.response); });\n    });\n};\n\n/**\n * Base client.\n */\n\nvar Client = function (context) {\n\n    var reqHandlers = [sendRequest], resHandlers = [], handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new PromiseObj(function (resolve, reject) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn((\"Invalid interceptor of type \" + (typeof handler) + \", must be a function\"));\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        }, reject);\n                    });\n\n                    when(response, resolve, reject);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n};\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || (inBrowser ? xhrClient : nodeClient);\n\n    resolve(client(request));\n}\n\n/**\n * HTTP Headers.\n */\n\nvar Headers = function Headers(headers) {\n    var this$1 = this;\n\n\n    this.map = {};\n\n    each(headers, function (value, name) { return this$1.append(name, value); });\n};\n\nHeaders.prototype.has = function has (name) {\n    return getName(this.map, name) !== null;\n};\n\nHeaders.prototype.get = function get (name) {\n\n    var list = this.map[getName(this.map, name)];\n\n    return list ? list.join() : null;\n};\n\nHeaders.prototype.getAll = function getAll (name) {\n    return this.map[getName(this.map, name)] || [];\n};\n\nHeaders.prototype.set = function set (name, value) {\n    this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n};\n\nHeaders.prototype.append = function append (name, value){\n\n    var list = this.map[getName(this.map, name)];\n\n    if (list) {\n        list.push(trim(value));\n    } else {\n        this.set(name, value);\n    }\n};\n\nHeaders.prototype.delete = function delete$1 (name){\n    delete this.map[getName(this.map, name)];\n};\n\nHeaders.prototype.deleteAll = function deleteAll (){\n    this.map = {};\n};\n\nHeaders.prototype.forEach = function forEach (callback, thisArg) {\n        var this$1 = this;\n\n    each(this.map, function (list, name) {\n        each(list, function (value) { return callback.call(thisArg, value, name, this$1); });\n    });\n};\n\nfunction getName(map, name) {\n    return Object.keys(map).reduce(function (prev, curr) {\n        return toLower(name) === toLower(curr) ? curr : prev;\n    }, null);\n}\n\nfunction normalizeName(name) {\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n    }\n\n    return trim(name);\n}\n\n/**\n * HTTP Response.\n */\n\nvar Response = function Response(body, ref) {\n    var url = ref.url;\n    var headers = ref.headers;\n    var status = ref.status;\n    var statusText = ref.statusText;\n\n\n    this.url = url;\n    this.ok = status >= 200 && status < 300;\n    this.status = status || 0;\n    this.statusText = statusText || '';\n    this.headers = new Headers(headers);\n    this.body = body;\n\n    if (isString(body)) {\n\n        this.bodyText = body;\n\n    } else if (isBlob(body)) {\n\n        this.bodyBlob = body;\n\n        if (isBlobText(body)) {\n            this.bodyText = blobText(body);\n        }\n    }\n};\n\nResponse.prototype.blob = function blob () {\n    return when(this.bodyBlob);\n};\n\nResponse.prototype.text = function text () {\n    return when(this.bodyText);\n};\n\nResponse.prototype.json = function json () {\n    return when(this.text(), function (text) { return JSON.parse(text); });\n};\n\nObject.defineProperty(Response.prototype, 'data', {\n\n    get: function get() {\n        return this.body;\n    },\n\n    set: function set(body) {\n        this.body = body;\n    }\n\n});\n\nfunction blobText(body) {\n    return new PromiseObj(function (resolve) {\n\n        var reader = new FileReader();\n\n        reader.readAsText(body);\n        reader.onload = function () {\n            resolve(reader.result);\n        };\n\n    });\n}\n\nfunction isBlobText(body) {\n    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n}\n\n/**\n * HTTP Request.\n */\n\nvar Request = function Request(options$$1) {\n\n    this.body = null;\n    this.params = {};\n\n    assign(this, options$$1, {\n        method: toUpper(options$$1.method || 'GET')\n    });\n\n    if (!(this.headers instanceof Headers)) {\n        this.headers = new Headers(this.headers);\n    }\n};\n\nRequest.prototype.getUrl = function getUrl (){\n    return Url(this);\n};\n\nRequest.prototype.getBody = function getBody (){\n    return this.body;\n};\n\nRequest.prototype.respondWith = function respondWith (body, options$$1) {\n    return new Response(body, assign(options$$1 || {}, {url: this.getUrl()}));\n};\n\n/**\n * Service for sending network requests.\n */\n\nvar COMMON_HEADERS = {'Accept': 'application/json, text/plain, */*'};\nvar JSON_CONTENT_TYPE = {'Content-Type': 'application/json;charset=utf-8'};\n\nfunction Http(options$$1) {\n\n    var self = this || {}, client = Client(self.$vm);\n\n    defaults(options$$1 || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n\n        if (isString(handler)) {\n            handler = Http.interceptor[handler];\n        }\n\n        if (isFunction(handler)) {\n            client.use(handler);\n        }\n\n    });\n\n    return client(new Request(options$$1)).then(function (response) {\n\n        return response.ok ? response : PromiseObj.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return PromiseObj.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    common: COMMON_HEADERS,\n    custom: {}\n};\n\nHttp.interceptor = {before: before, method: method, jsonp: jsonp, json: json, form: form, header: header, cors: cors};\nHttp.interceptors = ['before', 'method', 'jsonp', 'json', 'form', 'header', 'cors'];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1}));\n    };\n\n});\n\n['post', 'put', 'patch'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, body, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1, body: body}));\n    };\n\n});\n\n/**\n * Service for interacting with RESTful services.\n */\n\nfunction Resource(url, params, actions, options$$1) {\n\n    var self = this || {}, resource = {};\n\n    actions = assign({},\n        Resource.actions,\n        actions\n    );\n\n    each(actions, function (action, name) {\n\n        action = merge({url: url, params: assign({}, params)}, options$$1, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options$$1 = assign({}, action), params = {}, body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options$$1.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 2 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options$$1.body = body;\n    options$$1.params = assign({}, options$$1.params, params);\n\n    return options$$1;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\n/**\n * Install plugin.\n */\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = PromiseObj;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function get() {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function get() {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function get() {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function get() {\n                var this$1 = this;\n\n                return function (executor) { return new Vue.Promise(executor, this$1); };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (plugin);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/*!*********************!*\
  !*** got (ignored) ***!
  \*********************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })
/******/ ]);